<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>首页 on Go Fyne 中文</title><link>https://www.poloxue.com/gofyne/</link><description>Recent content in 首页 on Go Fyne 中文</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://www.poloxue.com/gofyne/index.xml" rel="self" type="application/rss+xml"/><item><title>01. Canvas 和 CanvasObject</title><link>https://www.poloxue.com/gofyne/docs/02-explore/01-canvas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/01-canvas/</guid><description>&lt;h2 id="canvas-和-canvasobject"&gt;Canvas 和 CanvasObject&lt;a class="anchor" href="#canvas-%e5%92%8c-canvasobject"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在Fyne中，画布（Canvas）是应用程序绘制的区域。每个窗口都有一个画布，你可以通过&lt;code&gt;Window.Canvas()&lt;/code&gt;访问它，但通常你会发现&lt;code&gt;Window&lt;/code&gt;上的函数可以避免直接访问画布。&lt;/p&gt;
&lt;p&gt;Fyne中可以绘制的所有内容都是&lt;code&gt;CanvasObject&lt;/code&gt;类型。这个示例打开了一个新窗口，然后通过设置窗口画布的内容来展示不同类型的基本图形元素。如文本和圆形示例所示，每种类型的对象都有许多定制方式。&lt;/p&gt;
&lt;p&gt;除了使用&lt;code&gt;Canvas.SetContent()&lt;/code&gt;更改显示的内容外，还可以更改当前可见的内容。例如，如果你更改了矩形的&lt;code&gt;FillColour&lt;/code&gt;，可以使用&lt;code&gt;rect.Refresh()&lt;/code&gt;请求刷新这个已存在的组件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Canvas&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myCanvas&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Canvas&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;blue&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NRGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;R&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;G&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;B&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;180&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;255&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;rect&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewRectangle&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;blue&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myCanvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;rect&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;go&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Sleep&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;green&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NRGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;R&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;G&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;180&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;B&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;255&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;rect&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FillColor&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;green&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;rect&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Refresh&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以用相同的方式绘制许多不同的绘图元素，如圆形和文本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;setContentToText&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;c&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Canvas&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;green&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NRGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;R&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;G&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;180&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;B&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;255&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Text&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;green&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TextStyle&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Bold&lt;/span&gt; = &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;c&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;setContentToCircle&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;c&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Canvas&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;red&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NRGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;R&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0xff&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;G&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0x33&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;B&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0x33&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0xff&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewCircle&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;StrokeWidth&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;StrokeColor&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;red&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;c&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="控件-widget"&gt;控件 Widget&lt;a class="anchor" href="#%e6%8e%a7%e4%bb%b6-widget"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fyne.Widget&lt;/code&gt;是一种特殊类型的画布对象，它与交互元素关联。在控件中，逻辑与其外观（也称为&lt;code&gt;WidgetRenderer&lt;/code&gt;）是分开的。&lt;/p&gt;
&lt;p&gt;控件也是&lt;code&gt;CanvasObject&lt;/code&gt;类型，因此我们可以将窗口的内容设置为单个控件。看看我们如何创建一个新的&lt;code&gt;widget.Entry&lt;/code&gt;并将其设置为窗口的内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Widget&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewEntry&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段描述说明了如何在Fyne应用程序中处理和更新画布内容，以及如何使用控件来创建交互式用户界面元素。&lt;/p&gt;</description></item><item><title>01. 几何 Geometry</title><link>https://www.poloxue.com/gofyne/docs/09-architecture/01-geometry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/09-architecture/01-geometry/</guid><description>&lt;h1 id="几何-geometry"&gt;几何 Geometry&lt;a class="anchor" href="#%e5%87%a0%e4%bd%95-geometry"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne 应用基于每个窗口有一个画布。每个画布有一个根 CanvasObject，它可以是一个单独的控件或一个容器，用于控制多个子对象的大小和位置，这些子对象由布局控制。&lt;/p&gt;
&lt;h3 id="位置"&gt;位置&lt;a class="anchor" href="#%e4%bd%8d%e7%bd%ae"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;每个画布的原点位于左上角（0, 0），UI 的每个元素都可能根据输出设备进行缩放，因此 API 不描述像素或精确的尺寸。
例如，在120DPI的显示器上，位置（10, 10）可能从原点向右和向下各10像素，但在HiDPI（或“Retina”）显示器上，这可能更接近20像素。&lt;/p&gt;
&lt;p&gt;每个 CanvasObject 引用的位置都是相对于它的父级的。这对于布局算法很重要，但对于开发者在例如 &lt;code&gt;Tappable.Tapped(PointEvent)&lt;/code&gt; 处理程序这样的情况下也很重要。这里的 X/Y 坐标将从按钮的左上角而不是整个画布计算。这样设计是为了让代码尽可能自包含。&lt;/p&gt;
&lt;h3 id="像素大小"&gt;像素大小&lt;a class="anchor" href="#%e5%83%8f%e7%b4%a0%e5%a4%a7%e5%b0%8f"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;像其他基于矢量的 GUI 库一样，Fyne 坐标需要基于某种基线显示器分辨率。所有&lt;a href="https://www.poloxue.com/gofyne/docs/09-architecture/02-scaling/"&gt;缩放&lt;/a&gt;都是相对于这个值的。对于 Fyne 来说，该分辨率是120DPI。这意味着当你的显示器是120DPI且所有缩放值都设置为1时，&lt;code&gt;fyne.Size&lt;/code&gt;中引用的尺寸将是1=1px。对于 HiDPI 屏幕，如上所述，实际 DPI 可能更接近240，在移动设备上甚至可能是360或更高。为了管理这种复杂性，工具包在内部管理缩放，因此你的应用总是看起来大小合适。如果用户设置的缩放比例较小，那么他们的应用将始终具有小于正常的字体、按钮等，当他们指定较大时，你的应用将适当放大。&lt;/p&gt;
&lt;p&gt;与 &lt;a href="https://material.io"&gt;Material Design&lt;/a&gt; 相比，我们可以看到他们的基线 DPI 是 &lt;a href="https://material.io/design/layout/pixel-density.html#pixel-density-on-android"&gt;160&lt;/a&gt;，尽管数学上相似，但实际数字会有所不同。这意味着 Fyne 中的设备独立尺寸使用较小的数字来代表相同的物理尺寸。例如，Fyne 中高度为 &lt;code&gt;18&lt;/code&gt; 的图标在标准的 Material Design（例如 Android）应用中的尺寸为 &lt;code&gt;24&lt;/code&gt;。构建应用程序时，这并不重要，但在与设计师或熟悉 Material Design 的专家合作时可能很重要。&lt;/p&gt;
&lt;p&gt;如果你开始加载位图图像，像素尺寸将变得重要。通常这些图像会适当缩放，但如果你指定 &lt;code&gt;FillMode=fyne.FillOriginal&lt;/code&gt;，则由于像素密度的不同，实际图像大小在不同设备上会有所不同。通常这个功能会在 &lt;code&gt;Scroll&lt;/code&gt; 容器内使用。Fyne 还定义了一个 &lt;code&gt;canvas.Raster&lt;/code&gt; 原始类型，它将在输出设备的像素密度下精确绘制像素。这使你的代码能够在不了解运行设备的详细信息的情况下，以最高可能的输出分辨率进行绘制。如果由于某种原因你需要“像素完美”定位，你需要将 &lt;code&gt;CanvasObject.Size()&lt;/code&gt; 乘以 &lt;code&gt;Canvas.Scale()&lt;/code&gt;。&lt;/p&gt;</description></item><item><title>01. 列表 List</title><link>https://www.poloxue.com/gofyne/docs/06-collection/01-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/06-collection/01-list/</guid><description>&lt;h1 id="列表-list"&gt;列表 List&lt;a class="anchor" href="#%e5%88%97%e8%a1%a8-list"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;List&lt;/code&gt; 集合控件是工具包中的集合控件之一。这些控件旨在帮助构建在呈现大量数据时性能非常高的界面。你还可以看到具有类似 API 的 &lt;a href="https://www.poloxue.com/gofyne/docs/06-collection/02-table/"&gt;Table&lt;/a&gt; 和 &lt;a href="https://www.poloxue.com/gofyne/docs/06-collection/03-tree/"&gt;Tree&lt;/a&gt; 控件。由于这种设计，它们使用起来稍微复杂一些。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;List&lt;/code&gt; 使用回调函数来在需要数据时请求数据。有三个主要的回调函数：&lt;code&gt;Length&lt;/code&gt;、&lt;code&gt;CreateItem&lt;/code&gt; 和 &lt;code&gt;UpdateItem&lt;/code&gt;。&lt;code&gt;Length&lt;/code&gt; 回调（首先传递）是最简单的，它返回要展示的数据中有多少项。其他回调与模板相关 - 如何创建、缓存和重用图形元素。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CreateItem&lt;/code&gt; 回调返回一个新的模板对象。当控件呈现时，这将使用真实数据重新使用。此对象的 &lt;code&gt;MinSize&lt;/code&gt; 将影响 &lt;code&gt;List&lt;/code&gt; 的最小尺寸。最后，&lt;code&gt;UpdateItem&lt;/code&gt; 被调用来将一个数据项应用于缓存的模板。使用这个来设置准备显示的内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;data&lt;/span&gt; = []&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;string&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;list&amp;#34;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;列表控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;list&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewList&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; len(&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;template&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ListItemID&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Label&lt;/span&gt;).&lt;span style="color:#a6e22e"&gt;SetText&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;[&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;list&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>01. 安装指南</title><link>https://www.poloxue.com/gofyne/docs/01-started/01-index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/01-index/</guid><description>&lt;h1 id="安装指南"&gt;安装指南&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e6%8c%87%e5%8d%97"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;使用 Fyne 工具包构建跨平台应用程序非常简单，但在开始之前需要安装一些工具。如果您的计算机已经为Go开发设置好了，以下步骤可能不是必需的，但我们建议您阅读一下您操作系统的提示，以防万一。如果本教程后面的步骤出现问题，那么您应该重新检查以下的先决条件。&lt;/p&gt;
&lt;h3 id="先决条件"&gt;先决条件&lt;a class="anchor" href="#%e5%85%88%e5%86%b3%e6%9d%a1%e4%bb%b6"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Fyne需要3个基本元素：Go工具（至少版本1.12）、一个C编译器（用于与系统图形驱动连接）和一个系统图形驱动。根据您的操作系统，安装指令会有所不同，请选择下面适合您的选项卡查看安装指令。&lt;/p&gt;
&lt;p&gt;请注意，这些步骤仅用于开发 - 您的Fyne应用不需要为最终用户安装任何设置或依赖！&lt;/p&gt;
&lt;blockquote class="book-hint warning"&gt;
 **如下的 termux 是用于在 Android 设备上构建 Fyne 应用，无 PC 依赖。** &lt;/blockquote&gt;
&lt;div class="book-tabs"&gt;

&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-0" checked="checked" /&gt;&lt;label for="tabs-prerequisites-0"&gt;Windows&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 

- 从[下载页面](https://golang.org/dl/)下载Go并按照说明安装
- 为Windows安装以下测试过的C编译器之一：
 - MSYS2配合MingW-w64 - [msys2.org](https://www.msys2.org/)
 - TDM-GCC - [tdm-gcc.tdragon.net](https://jmeubank.github.io/tdm-gcc/download/)
 - Cygwin - [cygwin.com](https://www.cygwin.com/)
- 在Windows上，您的图形驱动程序已经安装好了，但建议确保它们是最新的。

使用MSYS2（推荐）的安装步骤如下：

- 从[msys2.org](https://www.msys2.org/)安装MSYS2
- 安装完成后不要使用打开的MSYS终端
- 从开始菜单打开“MSYS2 MinGW 64位”
- 执行以下命令（如果询问安装选项，请确保选择“全部”）：

```bash
$ pacman -Syu
$ pacman -S git mingw-w64-x86_64-toolchain
```

- 您需要将 /c/Program\ Files/Go/bin和 ~/Go/bin 添加到您的 $PATH 中，对于MSYS2，您可以将以下命令粘贴到终端中：
```bash
$ echo "export PATH=\$PATH:/c/Program\ Files/Go/bin:~/Go/bin" &gt;&gt; ~/.bashrc
```

- 为了让编译器在其他终端上工作，您需要设置Windows的%PATH%变量，以便找到这些工具。进入“编辑系统环境变量”控制面板，点击“高级”，并将“C:\msys64\mingw64\bin”添加到路径列表中。

&lt;/div&gt;
&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-1" /&gt;&lt;label for="tabs-prerequisites-1"&gt;MacOS&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 

- 从[下载页面](https://golang.org/dl/)下载Go并按照说明进行安装。
- 从[Mac App Store](https://apps.apple.com/us/app/xcode/id497799835?mt=12)安装Xcode。
- 通过打开终端窗口并输入以下命令来设置Xcode命令行工具：`xcode-select --install`。
- 在macOS上，图形驱动程序将已经安装。

&lt;/div&gt;

&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-2" /&gt;&lt;label for="tabs-prerequisites-2"&gt;Linux&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 

- 您需要使用包管理器安装Go、gcc和图形库头文件，以下命令之一可能会起作用。
- Debian / Ubuntu: `sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev`
- Fedora: `sudo dnf install golang gcc libXcursor-devel libXrandr-devel mesa-libGL-devel libXi-devel libXinerama-devel libXxf86vm-devel`
- Arch Linux: `sudo pacman -S go xorg-server-devel libxcursor libxrandr libxinerama libxi`
- Solus: `sudo eopkg it -c system.devel golang mesalib-devel libxrandr-devel libxcursor-devel libxi-devel libxinerama-devel`
- openSUSE: `sudo zypper install go gcc libXcursor-devel libXrandr-devel Mesa-libGL-devel libXi-devel libXinerama-devel libXxf86vm-devel`
- Void Linux: `sudo xbps-install -S go base-devel xorg-server-devel libXrandr-devel libXcursor-devel libXinerama-devel`

- Alpine Linux: `sudo apk add go gcc libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev linux-headers mesa-dev`
- NixOS: `nix-shell -p libGL pkg-config xorg.libX11.dev xorg.libXcursor xorg.libXi xorg.libXinerama xorg.libXrandr xorg.libXxf86vm`

&lt;/div&gt;

&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-3" /&gt;&lt;label for="tabs-prerequisites-3"&gt;Raspberry Pi&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 

您需要使用包管理器安装Go、gcc和图形库头文件。

```bash
sudo apt-get install golang gcc libegl1-mesa-dev xorg-dev
```

&lt;/div&gt;
&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-4" /&gt;&lt;label for="tabs-prerequisites-4"&gt;BSD&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 

您需要使用包管理器安装Go、gcc和图形库头文件。

- FreeBSD: sudo pkg install go gcc xorg pkgconf
- OpenBSD: sudo pkg_add go
- NetBSD: sudo pkgin install go pkgconf

&lt;/div&gt;
&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-5" /&gt;&lt;label for="tabs-prerequisites-5"&gt;Android&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 

- 要为Android开发应用，您首先需要为您当前的电脑（Windows、macOS或Linux）安装工具。
- 完成后，您需要安装Android SDK和Android NDK——推荐的方法是安装[Android Studio](https://developer.android.com/studio/index.html)，然后转到Tools &gt; SDK Manager，并从SDK Tools安装NDK（并行）包。
- 或者，您可以下载[Standalone Android NDK](https://github.com/android/ndk/wiki#supported-downloads)，这是一种更精简的方法。解压缩文件夹，并将ANDROID_NDK_HOME环境变量指向它。

&lt;/div&gt;
&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-6" /&gt;&lt;label for="tabs-prerequisites-6"&gt;IOS&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 
- 要为iOS开发应用，您将需要访问一台按照上面macOS标签配置的苹果Mac电脑。
- 您还需要创建一个苹果开发者账户并注册开发者计划（需要支付费用）以获取在任何设备上运行应用所需的证书。
&lt;/div&gt;
&lt;input type="radio" class="toggle" name="tabs-prerequisites" id="tabs-prerequisites-7" /&gt;&lt;label for="tabs-prerequisites-7"&gt;Termux&lt;/label&gt;&lt;div class="book-tabs-content markdown-inner"&gt;
 

在Android上编译Fyne应用，您将需要Android 9或以上版本。

- 安装fdroid，然后从那里安装termux。
- 打开Termux并安装Go和Git：`pkg install golang git`。
- 从[https://github.com/Lzhiyong/termux-ndk](https://github.com/Lzhiyong/termux-ndk)安装NDK和SDK到termux，并设置环境变量`ANDROID_HOME`和`ANDROID_NDK_HOME`。

&lt;/div&gt;

&lt;/div&gt;
&lt;h3 id="下载"&gt;下载&lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用Go模块（Go 1.16及更高版本要求），在使用包之前需要设置模块。&lt;/p&gt;</description></item><item><title>01. 布局与控件大小</title><link>https://www.poloxue.com/gofyne/docs/10-faq/01-layout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/10-faq/01-layout/</guid><description>&lt;h1 id="布局与控件大小"&gt;布局与控件大小&lt;a class="anchor" href="#%e5%b8%83%e5%b1%80%e4%b8%8e%e6%8e%a7%e4%bb%b6%e5%a4%a7%e5%b0%8f"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;h3 id="移动和调整大小"&gt;移动和调整大小&lt;a class="anchor" href="#%e7%a7%bb%e5%8a%a8%e5%92%8c%e8%b0%83%e6%95%b4%e5%a4%a7%e5%b0%8f"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;问：我如何将我的控件移动到不同的位置或调整其大小？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; Fyne 应用中元素的位置和大小由它们所在的容器的布局控制。如果你的 UI 元素太小，请考虑使用不同的&lt;a href="https://www.poloxue.com/gofyne/docs/02-explore/04-layouts/"&gt;布局&lt;/a&gt;或容器。&lt;/p&gt;
&lt;p&gt;一个新的&lt;code&gt;Window&lt;/code&gt;会扩展传递给&lt;code&gt;SetContent()&lt;/code&gt;的任何元素以填满它的大小。每次你向此添加一个容器时，它都会根据布局划分可用空间。像&lt;code&gt;HBox&lt;/code&gt;和&lt;code&gt;VBox&lt;/code&gt;这样的布局会将内容缩小到其&lt;code&gt;MinSize()&lt;/code&gt;以在一个或另一个维度上打包内容。像&lt;code&gt;Max&lt;/code&gt;或&lt;code&gt;Border&lt;/code&gt;这样的布局会扩展内容以填充空间。通过编写&lt;a href="https://www.poloxue.com/gofyne/docs/08-extend/01-custom-layout/"&gt;自定义布局&lt;/a&gt;，你可以完全控制容器中的项目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问：我的图像为什么这么小？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 使用像 Fyne 这样的完全可缩放的用户界面工具包的一个困难是，坐标系统是与设备无关的。这允许应用根据连接的硬件以正确的分辨率或像素密度绘制，以获得最佳结果。这对于基于像素的图像意味着它们的大小可能会根据编译时未知的细节而变化。&lt;/p&gt;
&lt;p&gt;由于这种复杂性，使用&lt;code&gt;canvas.NewImageFromFile()&lt;/code&gt;或类似调用加载的图像将不会设置大小，导致它非常小或默认情况下看起来被隐藏。当放置在适当的布局中时，图像将根据其&lt;code&gt;FillMode&lt;/code&gt;属性进行拉伸。如果你希望图像始终设置为特定大小（或更大），你可以调用&lt;code&gt;Image.SetMinSize()&lt;/code&gt;并为图像指定一个与设备无关的大小。&lt;/p&gt;
&lt;h3 id="容器和布局"&gt;容器和布局&lt;a class="anchor" href="#%e5%ae%b9%e5%99%a8%e5%92%8c%e5%b8%83%e5%b1%80"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;问：我如何手动控制元素的位置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 在某些情况下，你可能希望完全控制容器中元素的位置和大小。为此，你创建一个没有布局的容器。&lt;code&gt;container.NewWithoutLayout()&lt;/code&gt;函数将创建一个用于手动定位的容器——你应该将你想要在这个容器中管理的图形元素列表传递给该构造函数。&lt;/p&gt;
&lt;p&gt;设置好后，你可以使用&lt;code&gt;Move()&lt;/code&gt;和&lt;code&gt;Resize()&lt;/code&gt;在每个元素上进行定位。在执行此操作时，请注意，它不会随着可用空间的变化而调整——它也没有明确的最小尺寸。要添加这些功能中的任何一个，你应该用&lt;a href="https://www.poloxue.com/gofyne/docs/08-extend/01-custom-layout/"&gt;自定义布局&lt;/a&gt;替换你的手动定位。&lt;/p&gt;</description></item><item><title>01. 标签 Label</title><link>https://www.poloxue.com/gofyne/docs/05-widget/01-label/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/05-widget/01-label/</guid><description>&lt;h1 id="标签-label"&gt;标签 Label&lt;a class="anchor" href="#%e6%a0%87%e7%ad%be-label"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Widgets 是 Fyne 应用程序 GUI 的主要组件，它们可以被用在任何一个基本的 &lt;code&gt;fyne.CanvasObject&lt;/code&gt; 可以使用的地方。它们管理用户交互，并且总是与当前主题相匹配。&lt;/p&gt;
&lt;p&gt;Label widget 是最简单的一个 - 它向用户展示文本。与 &lt;code&gt;canvas.Text&lt;/code&gt; 不同，它可以处理一些简单的格式化（如 &lt;code&gt;\n&lt;/code&gt;）和换行（通过设置 &lt;code&gt;Wrapping&lt;/code&gt; 字段）。
你可以通过调用 &lt;code&gt;widget.NewLabel(&amp;quot;some text&amp;quot;)&lt;/code&gt; 来创建一个标签，结果可以被赋值给一个变量或直接传递给一个容器。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Label Widget&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;text&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>01. 盒子 Box</title><link>https://www.poloxue.com/gofyne/docs/04-container/01-box/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/01-box/</guid><description>&lt;h1 id="盒子-box"&gt;盒子 Box&lt;a class="anchor" href="#%e7%9b%92%e5%ad%90-box"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;如在&lt;a href="https://www.poloxue.com/gofyne/docs/02-explore/02-container/"&gt;容器和布局&lt;/a&gt;中讨论的，容器中的元素可以使用布局来排列。本节探讨内置布局及其使用方法。&lt;/p&gt;
&lt;p&gt;最常用的布局是 &lt;code&gt;layout.BoxLayout&lt;/code&gt;，它有两个变体，水平和垂直。盒子布局将所有元素排列在单个行或列中，并可选择间隔以协助对齐。&lt;/p&gt;
&lt;p&gt;水平盒子布局，通过 &lt;code&gt;layout.NewHBoxLayout()&lt;/code&gt; 创建，将项目排列在单行中。盒子中的每个项目的宽度将设置为其 &lt;code&gt;MinSize().Width&lt;/code&gt;，高度对所有项目而言都是相等的，值为所有 &lt;code&gt;MinSize().Height&lt;/code&gt; 值中的最大值。该布局可用于容器中，或者你可以使用盒子控件 &lt;code&gt;widget.NewHBox()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;垂直盒子布局与之相似，但它将项目排列在一列中。每个项目的高度将设置为最小值，所有宽度将相等，设置为最小宽度中的最大值。&lt;/p&gt;
&lt;p&gt;为了在元素之间创建扩展空间（例如，使某些元素左对齐，其他元素右对齐），在项目中添加一个 &lt;code&gt;layout.NewSpacer()&lt;/code&gt;。间隔符将扩展以填充所有可用空间。在垂直盒子布局开始处添加一个间隔符将导致所有项目底部对齐。你可以在水平排列的开始和结束处各添加一个间隔符，以创建居中对齐。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;盒子布局&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;你好&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;在那里&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;(右侧)&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewHBoxLayout&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSpacer&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text4&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;居中&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;centered&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewHBoxLayout&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSpacer&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;text4&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSpacer&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewVBoxLayout&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;centered&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>01. 矩形 Rectangle</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/01-rectangle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/01-rectangle/</guid><description>&lt;h2 id="矩形-rectangle"&gt;矩形 Rectangle&lt;a class="anchor" href="#%e7%9f%a9%e5%bd%a2-rectangle"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;canvas.Rectangle&lt;/code&gt; 是 Fyne 中最简单的画布对象。它显示指定颜色的区块。您也可以使用 &lt;code&gt;FillColor&lt;/code&gt; 字段设置颜色。&lt;/p&gt;
&lt;p&gt;在这个示例中，矩形填充了窗口，因为它是唯一的内容元素。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;矩形&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;rect&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewRectangle&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;rect&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;150&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其他的 &lt;code&gt;fyne.CanvasObject&lt;/code&gt; 类型有更多的配置，让我们&lt;a href="https://www.poloxue.com/gofyne/docs/03-canvas/02-text/"&gt;接下来&lt;/a&gt;看看 &lt;code&gt;canvas.Text&lt;/code&gt;。&lt;/p&gt;</description></item><item><title>01. 简单绑定</title><link>https://www.poloxue.com/gofyne/docs/07-binding/01-simple/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/07-binding/01-simple/</guid><description>&lt;h1 id="简单绑定"&gt;简单绑定&lt;a class="anchor" href="#%e7%ae%80%e5%8d%95%e7%bb%91%e5%ae%9a"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;绑定控件的最简单形式是将绑定项作为值传递给它，而不是静态值。许多控件提供了一个&lt;code&gt;WithData&lt;/code&gt;构造函数，它将接受一个类型化的数据绑定项。要设置绑定，你需要做的就是传递正确的类型。&lt;/p&gt;
&lt;p&gt;尽管在初始代码中这看起来可能没有多大好处，但你可以看到它如何确保显示的内容始终与数据源保持最新。你会注意到，我们不需要在&lt;code&gt;Label&lt;/code&gt;控件上调用&lt;code&gt;Refresh()&lt;/code&gt;，甚至不需要保留它的引用，但它仍然会适当更新。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/data/binding&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Simple&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewString&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Set&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Initial value&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabelWithData&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;go&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Sleep&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Set&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;A new string&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在下一步中，我们将看看如何通过&lt;a href="https://www.poloxue.com/gofyne/docs/07-binding/02-twoway/"&gt;双向&lt;/a&gt;绑定设置编辑值的控件。&lt;/p&gt;</description></item><item><title>01. 自定义布局 Layout</title><link>https://www.poloxue.com/gofyne/docs/08-extend/01-custom-layout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/08-extend/01-custom-layout/</guid><description>&lt;h2 id="自定义布局-layout"&gt;自定义布局 Layout&lt;a class="anchor" href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e5%b8%83%e5%b1%80-layout"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在Fyne应用程序中，每个&lt;code&gt;Container&lt;/code&gt;都使用一个简单的布局算法来排列其子元素。Fyne在&lt;code&gt;fyne.io/fyne/v2/layout&lt;/code&gt;包中定义了许多可用的布局。如果你查看代码，你会看到它们都实现了&lt;code&gt;Layout&lt;/code&gt;接口。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Layout&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;interface&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;Layout&lt;/span&gt;([]&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;MinSize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;objects&lt;/span&gt; []&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;任何应用程序都可以提供一个自定义布局来以非标准的方式排列控件。为此，你需要在自己的代码中实现上述接口。为了说明这一点，我们将创建一个新的布局，该布局将元素排列在对角线上，并排列到其容器的左下角。&lt;/p&gt;
&lt;p&gt;首先，我们将定义一个新类型&lt;code&gt;diagonal&lt;/code&gt;，并定义其最小大小将是多少。为了计算这个，我们只需添加所有子元素（指定为&lt;code&gt;MinSize&lt;/code&gt;的&lt;code&gt;[]fyne.CanvasObject&lt;/code&gt;参数）的宽度和高度。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;diagonal&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;d&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;diagonal&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;MinSize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;objects&lt;/span&gt; []&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;h&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; float32(&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;), float32(&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;_&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;range&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;objects&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;childSize&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;MinSize&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;+=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;childSize&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;h&lt;/span&gt; &lt;span style="color:#f92672"&gt;+=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;childSize&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;h&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对这个类型，我们添加一个&lt;code&gt;Layout()&lt;/code&gt;函数，该函数应该将所有指定的对象移动到第二个参数中指定的&lt;code&gt;fyne.Size&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;在我们的实现中，我们计算控件的左上角位置（这是&lt;code&gt;0&lt;/code&gt; x参数，并且有一个y位置，即容器的高度减去所有子项高度的总和）。从顶部位置开始，我们简单地将每个项目位置按前一个子项目的大小向前移动。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;d&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;diagonal&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Layout&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;objects&lt;/span&gt; []&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;containerSize&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;pos&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewPos&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;containerSize&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Height&lt;/span&gt; &lt;span style="color:#f92672"&gt;-&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;d&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;MinSize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;objects&lt;/span&gt;).&lt;span style="color:#a6e22e"&gt;Height&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;_&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;range&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;objects&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;size&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;MinSize&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;size&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Move&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;pos&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;pos&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;pos&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Add&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewPos&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;size&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Width&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;size&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Height&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建自定义布局就是这么简单。现在代码都写好了，我们可以将其作为&lt;code&gt;container.New&lt;/code&gt;的&lt;code&gt;layout&lt;/code&gt;参数使用。下面的代码设置了3个&lt;code&gt;Label&lt;/code&gt;控件，并将它们与我们新的布局放在一个容器中。如果你运行这个应用程序，你将看到对角线控件的排列，并且在调整窗口大小时，它们将对齐到可用空间的左下角。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Diagonal&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;topleft&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Middle Label&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;bottomright&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;diagonal&lt;/span&gt;{}, &lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>02. 主题与自定义</title><link>https://www.poloxue.com/gofyne/docs/10-faq/02-theme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/10-faq/02-theme/</guid><description>&lt;h1 id="主题与自定义"&gt;主题与自定义&lt;a class="anchor" href="#%e4%b8%bb%e9%a2%98%e4%b8%8e%e8%87%aa%e5%ae%9a%e4%b9%89"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;在这个页面上，我们回答了一些关于Fyne主题和控件设计的常见问题。&lt;/p&gt;
&lt;h3 id="自定义"&gt;自定义&lt;a class="anchor" href="#%e8%87%aa%e5%ae%9a%e4%b9%89"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;问：如何更改&lt;code&gt;Label&lt;/code&gt;控件文本的颜色？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 所有标准控件都使用当前的&lt;code&gt;Theme&lt;/code&gt;定义来设置颜色、字体和大小。要对你的应用程序进行更改，请考虑使用&lt;a href="https://www.poloxue.com/gofyne/docs/08-extend/04-custom-theme/"&gt;自定义主题&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你的应用程序需要不同颜色的文本，可以使用&lt;code&gt;canvas.Text&lt;/code&gt;类型代替。这允许直接设置文本的颜色和大小。在执行此操作时要小心，因为用户可以在浅色或深色主题变体之间选择，所以你应该在两种情况下都进行测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问：如何从我的&lt;code&gt;Entry&lt;/code&gt;控件中移除背景颜色？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 输入背景是由主题的&lt;code&gt;InputBackground&lt;/code&gt;颜色设置的。你可以将其更改为&lt;code&gt;color.Transparent&lt;/code&gt;以移除所有输入背景框。不可能编辑单个输入元素的样式——主题API旨在提供可自定义的，但一致的设计。&lt;/p&gt;
&lt;h3 id="主题api"&gt;主题API&lt;a class="anchor" href="#%e4%b8%bb%e9%a2%98api"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;问：如何使用我在v2.0.0之前编写的自定义主题？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 随着时间的推移，你应该考虑更新使用新的主题API。然而，它是可能的在过渡时期使用一个简单的适配器来允许旧主题的使用。你会发现&lt;code&gt;theme.FromLegacy&lt;/code&gt;函数，可以将旧的主题实例适配到新的API。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;myOldThemeType&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;updated&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FromLegacy&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Settings&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;SetTheme&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;updated&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用这种模式下的主题时，没有性能损失，但在未来的版本中这个API将被移除。&lt;/p&gt;</description></item><item><title>02. 创建第一个应用</title><link>https://www.poloxue.com/gofyne/docs/01-started/02-hello/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/02-hello/</guid><description>&lt;h1 id="第一个应用"&gt;第一个应用&lt;a class="anchor" href="#%e7%ac%ac%e4%b8%80%e4%b8%aa%e5%ba%94%e7%94%a8"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;在完成了入门安装文档中的步骤后，你现在已经准备好构建你的第一个应用程序了。为了说明这个过程，我们将构建一个简单的“Hello World”应用程序。&lt;/p&gt;
&lt;p&gt;一个简单的应用程序从使用&lt;code&gt;app.New()&lt;/code&gt;创建一个应用实例开始，然后使用&lt;code&gt;app.NewWindow()&lt;/code&gt;打开一个窗口。接着定义一个控件树，并使用窗口上的&lt;code&gt;SetContent()&lt;/code&gt;将其设置为主内容。然后通过在窗口上调用&lt;code&gt;ShowAndRun()&lt;/code&gt;来显示应用UI。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的代码可以使用命令&lt;code&gt;go build .&lt;/code&gt;进行构建，然后通过运行hello命令或双击图标来执行。你也可以跳过编译步骤，直接使用&lt;code&gt;go run ..&lt;/code&gt;来运行代码。&lt;/p&gt;
&lt;p&gt;无论采取哪种方法，都会显示一个窗口，看起来像这样：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/started/hello-dark.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;如果你更喜欢浅色主题，只需设置环境变量&lt;code&gt;FYNE_THEME=light&lt;/code&gt;，你就会得到：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/started/hello-light.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;这就是入门的全部内容了。要了解更多，你可以阅读完整的 &lt;a href="https://docs.fyne.io/api"&gt;API文档&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>02. 双向绑定</title><link>https://www.poloxue.com/gofyne/docs/07-binding/02-twoway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/07-binding/02-twoway/</guid><description>&lt;h1 id="双向绑定"&gt;双向绑定&lt;a class="anchor" href="#%e5%8f%8c%e5%90%91%e7%bb%91%e5%ae%9a"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;到目前为止，我们已经看到了数据绑定作为一种方式来保持用户界面元素更新。然而，更常见的需求是从UI控件更新值并保持数据在各处都是最新的。值得庆幸的是，Fyne提供的绑定是“双向”的，这意味着值既可以被推入其中也可以被读出。数据的更改将被通知到所有连接的代码，无需任何额外的代码。&lt;/p&gt;
&lt;p&gt;为了看到这个功能的实际操作，我们可以更新最后的测试应用，以显示一个&lt;code&gt;Label&lt;/code&gt;和一个&lt;code&gt;Entry&lt;/code&gt;，它们绑定到同一个值。通过这样设置，你可以看到通过entry编辑值也会更新label中的文本。这一切都可以在不调用refresh或在代码中引用控件的情况下实现。&lt;/p&gt;
&lt;p&gt;通过将你的应用移动到使用数据绑定，你可以停止保存指向所有控件的指针。相反，通过捕获数据作为一组绑定的值，你的用户界面可以是完全独立的代码。更清晰易读，更易于管理。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/data/binding&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Two Way&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewString&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Set&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hi!&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewVBox&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabelWithData&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewEntryWithData&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，我们将看看如何在我们的数据中添加&lt;a href="https://www.poloxue.com/gofyne/docs/07-binding/03-conversion/"&gt;转换&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>02. 容器与布局</title><link>https://www.poloxue.com/gofyne/docs/02-explore/02-container/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/02-container/</guid><description>&lt;h2 id="容器与布局"&gt;容器与布局&lt;a class="anchor" href="#%e5%ae%b9%e5%99%a8%e4%b8%8e%e5%b8%83%e5%b1%80"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在前一个示例中，我们看到了如何将&lt;code&gt;CanvasObject&lt;/code&gt;设置为&lt;code&gt;Canvas&lt;/code&gt;的内容，但只显示一个视觉元素并不是很有用。要显示多个项，我们使用&lt;code&gt;Container&lt;/code&gt;类型。&lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;fyne.Container&lt;/code&gt;也是一个&lt;code&gt;fyne.CanvasObject&lt;/code&gt;，我们可以将它设置为&lt;code&gt;fyne.Canvas&lt;/code&gt;的内容。在这个示例中，我们创建了3个文本对象，然后使用&lt;code&gt;container.NewWithoutLayout()&lt;/code&gt;函数将它们放入一个容器中。由于没有设置布局，我们可以像你看到的那样用&lt;code&gt;text2.Move()&lt;/code&gt;移动元素。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Container&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;green&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NRGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;R&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;G&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;180&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;B&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;255&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;green&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;There&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;green&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Move&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewPos&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;20&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;20&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWithoutLayout&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// content := container.New(layout.NewGridLayout(2), text1, text2)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;fyne.Layout&lt;/code&gt;实现了一种在容器内组织项目的方法。通过在这个示例中取消注释&lt;code&gt;container.New()&lt;/code&gt;行，你改变了容器以使用2列的网格布局。运行此代码并尝试调整窗口大小，看看布局如何自动配置窗口的内容。还要注意，&lt;code&gt;text2&lt;/code&gt;的手动位置被布局代码忽略了。&lt;/p&gt;
&lt;p&gt;要了解更多，你可以查看&lt;a href="https://www.poloxue.com/gofyne/docs/02-explore/04-layouts/"&gt;&lt;code&gt;布局组件&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>02. 按钮 Button</title><link>https://www.poloxue.com/gofyne/docs/05-widget/02-button/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/05-widget/02-button/</guid><description>&lt;h1 id="按钮-button"&gt;按钮 Button&lt;a class="anchor" href="#%e6%8c%89%e9%92%ae-button"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;按钮控件可以包含文本、图标或两者，构造函数是 &lt;code&gt;widget.NewButton()&lt;/code&gt; 和 &lt;code&gt;widget.NewButtonWithIcon()&lt;/code&gt;。要创建一个文本按钮，只有两个参数，&lt;code&gt;string&lt;/code&gt; 内容和一个没有参数的 &lt;code&gt;func()&lt;/code&gt;，当按钮被点击时将调用此函数。参见示例以了解如何创建它。&lt;/p&gt;
&lt;p&gt;带有图标的按钮构造函数包含一个额外的参数，即包含图标数据的 &lt;code&gt;fyne.Resource&lt;/code&gt;。&lt;code&gt;theme&lt;/code&gt; 包中的内置图标都适当地适应主题更改。如果将自己的图像加载为资源，你可以传入自己的图像 - 诸如 &lt;code&gt;fyne.LoadResourceFromPath()&lt;/code&gt; 的助手可能会有所帮助，尽可能推荐捆绑资源。&lt;/p&gt;
&lt;p&gt;要创建仅带图标的按钮，你应该将 &amp;quot;&amp;quot; 作为标签参数传递给 &lt;code&gt;widget.NewButtonWithIcon()&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//&amp;#34;fyne.io/fyne/v2/theme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;按钮控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewButton&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;点击我&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;点击&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//content := widget.NewButtonWithIcon(&amp;#34;首页&amp;#34;, theme.HomeIcon(), func() {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//	log.Println(&amp;#34;点击首页&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>02. 文本 Text</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/02-text/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/02-text/</guid><description>&lt;h2 id="文本-text"&gt;文本 Text&lt;a class="anchor" href="#%e6%96%87%e6%9c%ac-text"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;canvas.Text&lt;/code&gt; 用于 Fyne 内的所有文本渲染。它通过指定文本和文本颜色来创建。文本使用当前主题指定的默认字体渲染。&lt;/p&gt;
&lt;p&gt;文本对象允许某些配置，如 &lt;code&gt;Alignment&lt;/code&gt; 和 &lt;code&gt;TextStyle&lt;/code&gt; 字段，如此示例中所示。如果你想使用等宽字体，可以指定 &lt;code&gt;fyne.TextStyle{Monospace: true}&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;文本&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;文本对象&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Alignment&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TextAlignTrailing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TextStyle&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TextStyle&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;Italic&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过指定 &lt;code&gt;FYNE_FONT&lt;/code&gt; 环境变量，可以使用另一种字体。使用这个来设置一个 &lt;code&gt;.ttf&lt;/code&gt; 文件，代替 Fyne 工具包或当前主题提供的字体。&lt;/p&gt;</description></item><item><title>02. 缩放 Scaling</title><link>https://www.poloxue.com/gofyne/docs/09-architecture/02-scaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/09-architecture/02-scaling/</guid><description>&lt;h1 id="缩放-scaling"&gt;缩放 Scaling&lt;a class="anchor" href="#%e7%bc%a9%e6%94%be-scaling"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne 完全使用矢量图形构建，这意味着用 Fyne 编写的应用程序可以美观地缩放到任何大小（不仅仅是整数增量）。这对于移动设备和高端计算机上越来越受欢迎的高密度显示屏是一个巨大的好处。默认的缩放值是根据你的操作系统计算出来的 - 在一些系统上，这是用户配置，在其他系统上则来自于你的屏幕像素密度（DPI - 每英寸点数）。如果一个 Fyne 窗口被移动到另一个屏幕上，它将重新缩放并相应地调整窗口大小！我们称之为“自动缩放”，旨在在更换显示器时保持应用程序用户界面的相同大小。&lt;/p&gt;
&lt;p&gt;你可以使用 &lt;code&gt;fyne_settings&lt;/code&gt; 应用程序调整应用程序的大小，或者通过设置 &lt;code&gt;FYNE_SCALE&lt;/code&gt; 环境变量来设置特定的缩放比例。这些值可以使内容比系统设置大或小，使用 &amp;ldquo;1.5&amp;rdquo; 会使事物变大 50%，设置 0.8 会使其缩小 20%。&lt;/p&gt;


&lt;table style="text-align: center; margin: auto;"&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/architecture/hello-normal.png" style="width: 207px;"
 alt="Hello normal size" /&gt;
 &lt;br /&gt;Standard size
 &lt;/td&gt;
 &lt;td&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/architecture/hello-small.png" style="width: 160px;"
 alt="Hello small size" /&gt;
 &lt;br /&gt;FYNE_SCALE=0.5
 &lt;/td&gt;
 &lt;td&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/architecture/hello-large.png" style="width: 350px;"
 alt="Hello large size" /&gt;
 &lt;br /&gt;FYNE_SCALE=2.5
 &lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;</description></item><item><title>02. 网格 Grid</title><link>https://www.poloxue.com/gofyne/docs/04-container/02-grid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/02-grid/</guid><description>&lt;h1 id="网格-grid"&gt;网格 Grid&lt;a class="anchor" href="#%e7%bd%91%e6%a0%bc-grid"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;网格布局将容器的元素以网格模式布置，具有固定数量的列。项目将填充单个行，直到达到列数，之后将创建新行。垂直空间将在对象的每一行之间平均分配。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;layout.NewGridLayout(cols)&lt;/code&gt; 创建网格布局，其中 cols 是您希望每行中有的项目（列）数量。然后将此布局作为第一个参数传递给 &lt;code&gt;container.New(...)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果您调整容器的大小，则每个单元格将平等地调整大小，以分享可用空间。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;网格布局&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;grid&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewGridLayout&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;2&lt;/span&gt;), &lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;grid&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>02. 自定义控件 Widget</title><link>https://www.poloxue.com/gofyne/docs/08-extend/02-custom-widget/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/08-extend/02-custom-widget/</guid><description>&lt;h2 id="自定义控件-widget"&gt;自定义控件 Widget&amp;quot;&lt;a class="anchor" href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e6%8e%a7%e4%bb%b6-widget"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;标准控件与 Fyne 一起提供，旨在支持标准用户交互和需求。由于 GUI 经常需要提供自定义功能，因此可能需要编写自定义控件。本文概述了如何进行。&lt;/p&gt;
&lt;p&gt;一个控件被分为两个区域 - 每个都实现一个标准接口 - &lt;code&gt;fyne.Widget&lt;/code&gt; 和 &lt;code&gt;fyne.WidgetRenderer&lt;/code&gt;。控件定义行为和状态，而渲染器用于定义它应如何绘制到屏幕上。&lt;/p&gt;
&lt;h3 id="fynewidget"&gt;fyne.Widget&lt;a class="anchor" href="#fynewidget"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Fyne 中的控件简单来说是一个有状态的画布对象，其渲染定义与主逻辑分离。从 &lt;code&gt;fyne.Widget&lt;/code&gt; 接口可以看出，必须实现的内容并不多。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Widget&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;interface&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;CreateRenderer&lt;/span&gt;() &lt;span style="color:#a6e22e"&gt;WidgetRenderer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于控件需要像任何其他画布项目一样被使用，我们从相同的接口继承。为了省去编写所有必需的函数，我们可以使用 &lt;code&gt;widget.BaseWidget&lt;/code&gt; 类型，它处理了基础内容。&lt;/p&gt;
&lt;p&gt;每个控件定义将包含比接口要求更多的内容。在 Fyne 控件中导出定义行为的字段是标准做法（就像 &lt;code&gt;canvas&lt;/code&gt; 包中定义的原语一样）。&lt;/p&gt;
&lt;p&gt;例如，看看 &lt;code&gt;widget.Button&lt;/code&gt; 类型：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Button&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;BaseWidget&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;Text&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;Style&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;ButtonStyle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;Icon&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resource&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;OnTapped&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以看到这些项目如何存储有关控件行为的状态，但没有关于它如何呈现的信息。&lt;/p&gt;
&lt;h3 id="fynewidgetrenderer"&gt;fyne.WidgetRenderer&lt;a class="anchor" href="#fynewidgetrenderer"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;控件渲染器负责管理一组 &lt;code&gt;fyne.CanvasObject&lt;/code&gt; 原语，这些原语组合在一起创建了我们控件的设计。它很像 &lt;code&gt;fyne.Container&lt;/code&gt;，但有自定义布局和一些额外的主题处理。&lt;/p&gt;
&lt;p&gt;每个控件都必须提供一个渲染器，但完全可以重用另一个控件的渲染器 - 特别是如果你的控件是另一个标准控件的轻量级包装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;WidgetRenderer&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;interface&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;Layout&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;MinSize&lt;/span&gt;() &lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;Refresh&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;Objects&lt;/span&gt;() []&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;Destroy&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到 &lt;code&gt;Layout(Size)&lt;/code&gt; 和 &lt;code&gt;MinSize()&lt;/code&gt; 函数类似于 &lt;code&gt;fyne.Layout&lt;/code&gt; 接口，但没有 &lt;code&gt;[]fyne.CanvasObject&lt;/code&gt; 参数 - 这是因为控件确实需要布局，但它控制哪些对象将被包含。&lt;/p&gt;</description></item><item><title>02. 表格 Table</title><link>https://www.poloxue.com/gofyne/docs/06-collection/02-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/06-collection/02-table/</guid><description>&lt;h1 id="表格-table"&gt;表格 Table&lt;a class="anchor" href="#%e8%a1%a8%e6%a0%bc-table"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Table&lt;/code&gt;集合控件类似于&lt;a href="https://www.poloxue.com/gofyne/docs/06-collection/01-list/"&gt;List&lt;/a&gt;控件（工具包的另一个集合控件），它具有二维索引。像&lt;code&gt;List&lt;/code&gt;一样，这旨在帮助构建性能非常高的接口，当展示大量数据时。因此，控件不是用所有数据创建的，而是在需要时调用数据源。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Table&lt;/code&gt;使用回调函数在需要数据时请求数据。有3个主要的回调，&lt;code&gt;Length&lt;/code&gt;、&lt;code&gt;CreateCell&lt;/code&gt;和&lt;code&gt;UpdateCell&lt;/code&gt;。&lt;code&gt;Length&lt;/code&gt;回调（首先传递）是最简单的，它返回要展示的数据中有多少项，它返回的两个int分别代表行数和列数。其他两个与内容模板相关。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CreateCell&lt;/code&gt;回调返回一个新的模板对象，就像列表一样。不同之处在于&lt;code&gt;MinSize&lt;/code&gt;将定义每个单元格的标准大小，以及表格的最小大小（它至少显示一个单元格）。如前所述，&lt;code&gt;UpdateCell&lt;/code&gt;被调用来将数据应用于单元格模板。传入的索引是相同的&lt;code&gt;(row, col)&lt;/code&gt;int对。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;data&lt;/span&gt; = [][]&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{[]&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;左上角&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;右上角&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	[]&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;左下角&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;右下角&amp;#34;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;表格控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;list&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewTable&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() (&lt;span style="color:#66d9ef"&gt;int&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; len(&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;), len(&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;[&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;宽内容&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TableCellID&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Label&lt;/span&gt;).&lt;span style="color:#a6e22e"&gt;SetText&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;[&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Row&lt;/span&gt;][&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Col&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;list&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>03. 内置控件 Widget</title><link>https://www.poloxue.com/gofyne/docs/02-explore/03-widgets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/03-widgets/</guid><description>&lt;h1 id="标准-widget-在-widget-包中"&gt;标准 Widget (在 &lt;code&gt;widget&lt;/code&gt; 包中）&lt;a class="anchor" href="#%e6%a0%87%e5%87%86-widget-%e5%9c%a8-widget-%e5%8c%85%e4%b8%ad"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;h3 id="手风琴accordion"&gt;手风琴（Accordion）&lt;a class="anchor" href="#%e6%89%8b%e9%a3%8e%e7%90%b4accordion"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;手风琴显示一个手风琴项目列表。每个项目由一个按钮表示，当点击时会展示一个详细视图。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/accordion-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="按钮button"&gt;按钮（Button）&lt;a class="anchor" href="#%e6%8c%89%e9%92%aebutton"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poloxue.com/gofyne/docs/05-widget/02-button/"&gt;按钮&lt;/a&gt;控件有一个文本标签和图标，两者都是可选的。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/button-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="卡片card"&gt;卡片（Card）&lt;a class="anchor" href="#%e5%8d%a1%e7%89%87card"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;卡片控件以头部和副标题将元素分组，所有这些都是可选的。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/card-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="复选框check"&gt;复选框（Check）&lt;a class="anchor" href="#%e5%a4%8d%e9%80%89%e6%a1%86check"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;复选框控件有一个文本标签和一个选中（或未选中）的图标。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/check-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="输入框entry"&gt;输入框（Entry）&lt;a class="anchor" href="#%e8%be%93%e5%85%a5%e6%a1%86entry"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poloxue.com/gofyne/docs/05-widget/03-entry/"&gt;输入框&lt;/a&gt;控件允许在聚焦时输入简单文本。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/entry-light.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/entry-valid-light.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/entry-invalid-light.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;密码输入框控件隐藏文本输入，并添加一个按钮以显示文本。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/password-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="文件图标fileicon"&gt;文件图标（FileIcon）&lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e5%9b%be%e6%a0%87fileicon"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;文件图标为各种类型的文件提供有用的标准图标。它显示文件类型的指示图标并显示文件类型的扩展名。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/fileicon-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="表单form"&gt;表单（Form）&lt;a class="anchor" href="#%e8%a1%a8%e5%8d%95form"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poloxue.com/gofyne/docs/05-widget/05-form/"&gt;表单&lt;/a&gt;控件是一个两列网格，每行有一个标签和一个控件（通常是输入）。如果应该显示任何表单控制按钮，则网格的最后一行将包含它们。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/form-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="超链接hyperlink"&gt;超链接（Hyperlink）&lt;a class="anchor" href="#%e8%b6%85%e9%93%be%e6%8e%a5hyperlink"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;超链接控件是一个具有适当填充和布局的文本组件。点击时，URL会在默认网络浏览器中打开。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/hyperlink-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="图标icon"&gt;图标（Icon）&lt;a class="anchor" href="#%e5%9b%be%e6%a0%87icon"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;图标控件是一个基本的图像组件，加载资源以匹配主题。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/icon-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="标签label"&gt;标签（Label）&lt;a class="anchor" href="#%e6%a0%87%e7%ad%belabel"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poloxue.com/gofyne/docs/05-widget/01-label/"&gt;标签&lt;/a&gt;控件是一个具有适当填充和布局的标签组件。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/label-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="进度条progress-bar"&gt;进度条（Progress bar）&lt;a class="anchor" href="#%e8%bf%9b%e5%ba%a6%e6%9d%a1progress-bar"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.poloxue.com/gofyne/docs/05-widget/06-progressbar/"&gt;进度条&lt;/a&gt;控件创建一个表示进度的水平面板。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/progress-light.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;无限进度条控件创建一个表示无限等待的水平面板。一个无限进度条会重复从0%循环到100%，直到调用Stop()。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/progressinf-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="单选组radiogroup"&gt;单选组（RadioGroup）&lt;a class="anchor" href="#%e5%8d%95%e9%80%89%e7%bb%84radiogroup"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;单选组控件有一个文本标签列表和每个旁边的单选检查图标。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/radiogroup-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="选择select"&gt;选择（Select）&lt;a class="anchor" href="#%e9%80%89%e6%8b%a9select"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;选择控件有一个选项列表，显示当前选项，并在点击时触发一个事件函数。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/widgets/select-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="选择输入selectentry"&gt;选择输入（SelectEntry）&lt;a class="anchor" href="#%e9%80%89%e6%8b%a9%e8%be%93%e5%85%a5selectentry"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;选择输入控件在选择控件中添加了一个可编辑组件。用户可以选择一个选项或输入自己的值。&lt;/p&gt;</description></item><item><title>03. 控件 Widget</title><link>https://www.poloxue.com/gofyne/docs/09-architecture/03-widgets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/09-architecture/03-widgets/</guid><description>&lt;h1 id="控件-widget"&gt;控件 Widget&lt;a class="anchor" href="#%e6%8e%a7%e4%bb%b6-widget"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne 工具包中的控件旨在提供干净愉快的用户交互体验，遵循标准主题，并支持快速应用开发、稳定测试和易于维护。这里有一些促进这一目标的设计考虑，我们将在本页探讨它们。&lt;/p&gt;
&lt;h3 id="行为-api"&gt;行为 API&lt;a class="anchor" href="#%e8%a1%8c%e4%b8%ba-api"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;你会注意到标准控件的 API 全部关于行为和状态——但实际上很少控制元素的外观。这是有意为之的。它使我们的代码，以及应用开发者的代码，能够专注于控件的行为，以便将其渲染过程留给其他代码处理。这使得测试变得更加容易，实际上完整的应用可以在内存中通过单元测试运行，而无需渲染应用。&lt;/p&gt;
&lt;p&gt;你可以&lt;a href="https://developer.fyne.io/tutorial/extending-widgets"&gt;扩展现有控件&lt;/a&gt;来添加新的行为，而无需担心其渲染方式。也可以&lt;a href="https://developer.fyne.io/tutorial/write-custom-widget"&gt;编写自己的&lt;/a&gt;组件，应用不限于使用提供的控件集。构建自己的控件时，你会注意到渲染细节与状态完全分离——这是上述设计的一部分。&lt;code&gt;WidgetRenderer&lt;/code&gt;（渲染&lt;code&gt;Widget&lt;/code&gt;的代码）通常持有对它将要渲染的控件的引用，以访问状态或其他信息。当控件状态改变时，将调用 &lt;code&gt;Refresh()&lt;/code&gt;——然后会要求渲染器刷新，并且它应该更新显示以反映新状态。建议自定义控件使用当前的&lt;code&gt;Theme&lt;/code&gt;，但在看似合适的情况下可以选择指定自己的尺寸、颜色和图标。&lt;/p&gt;
&lt;h3 id="内容填充"&gt;内容填充&lt;a class="anchor" href="#%e5%86%85%e5%ae%b9%e5%a1%ab%e5%85%85"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;标准控件使用主题指定的填充来在其图形组件周围创建适当的空间。&lt;code&gt;widget&lt;/code&gt; 包使用标准高度和基线来确保提供的布局默认情况下能够很好地对齐。如果你正在构建自定义控件，建议遵循这些指南。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;theme.Padding()&lt;/code&gt; 的值用于布局中以分隔容器的元素，它在应用的各个部分周围创建一致的空间。然而，有些控件的内容应该从范围的边缘内缩。考虑&lt;code&gt;Entry&lt;/code&gt;，它有一个背景和边框延伸到边缘，但其内容应该内缩。因此，我们标准化了用于内缩的空间量，以便对齐匹配。&lt;/p&gt;
&lt;p&gt;控件的标准内缩或内容填充被定义为&lt;code&gt;theme.InnerPadding()&lt;/code&gt;。标准的填充值是&lt;code&gt;4&lt;/code&gt;，内部填充是&lt;code&gt;8&lt;/code&gt;。你可以在&lt;code&gt;Label&lt;/code&gt;和&lt;code&gt;Entry&lt;/code&gt;中看到（文本）内容被这么多内缩，以便它们在并排放置时能够水平和垂直对齐。&lt;/p&gt;
&lt;p&gt;建议自定义控件包含类似的尺寸，以便它们能够与标准控件很好地配合。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/architecture/widget-inset.png" alt="" /&gt;&lt;/p&gt;</description></item><item><title>03. 故障排查</title><link>https://www.poloxue.com/gofyne/docs/10-faq/03-troubleshoot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/10-faq/03-troubleshoot/</guid><description>&lt;h1 id="故障排查"&gt;故障排查&lt;a class="anchor" href="#%e6%95%85%e9%9a%9c%e6%8e%92%e6%9f%a5"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;在设置过程中或编译第一个应用程序时，可能会遇到一些意外情况。我们在这里尝试解决这些问题。记住，你也可以使用 &lt;a href="https://geoffrey-artefacts.fynelabs.com/github/andydotxyz/fyne-io/setup/latest/"&gt;Fyne Setup&lt;/a&gt; 工具检查你的配置。&lt;/p&gt;
&lt;h3 id="编译器问题"&gt;编译器问题&lt;a class="anchor" href="#%e7%bc%96%e8%af%91%e5%99%a8%e9%97%ae%e9%a2%98"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;问：命令未找到：fyne&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 如果你已经使用 &lt;code&gt;go install fyne.io/fyne/v2/cmd/fyne@latest&lt;/code&gt; 安装了 Fyne 命令，但尝试运行时看到错误，则最可能的问题是你的 Go 安装没有正确设置你的 PATH 环境变量。&lt;/p&gt;
&lt;p&gt;Go 会将工具安装到用户的 &lt;code&gt;GOPATH&lt;/code&gt; 位置的 &lt;code&gt;bin&lt;/code&gt; 目录中（通常是 &lt;code&gt;~/go&lt;/code&gt;）- 你可以通过检查你的 &lt;code&gt;PATH&lt;/code&gt; 变量是否包含此位置来验证这一点。如果似乎缺少这个位置，那么你应该更新你的 &lt;code&gt;PATH&lt;/code&gt; 环境变量以包含 &lt;code&gt;~/go/bin&lt;/code&gt;，或者如果你更改了安装位置，则可以使用 &lt;code&gt;$(go env GOPATH)/bin&lt;/code&gt; 代替。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问：构建约束排除了&amp;hellip;中的所有 Go 文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 如果你正在交叉编译，你可能会看到关于 go 文件被排除的错误，随后是构建失败。当进行标准的 Go 交叉编译时，它会自动关闭 CGo。为了解决这个问题，请确保在你的编译命令中设置 &lt;code&gt;CGO_ENABLED=1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问：cc1.exe: 抱歉，未实现：未在 64 位模式中编译&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; Windows 编译有时会抱怨没有可用的 64 位模式。这通常是因为安装了错误的编译器，或者配置不正确。如果你已经按照我们的 MSYS2 和 MingW64 的 &lt;a href="https://www.poloxue.com/gofyne/docs/01-started/"&gt;安装说明&lt;/a&gt;，那么请确保你使用的是开始菜单中标题为“MSYS2 MinGW 64-bit”的启动器。&lt;/p&gt;
&lt;h3 id="分发"&gt;分发&lt;a class="anchor" href="#%e5%88%86%e5%8f%91"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;问：Apple macOS 说我的应用在下载时已损坏&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt; 当文件在 macOS 计算机上下载时，它们会被标记有“隔离”标志，以便由操作系统检查是否有问题。如果你的应用程序使用从 Apple 购买的证书签名，这不是问题。然而，如果你想在没有那个成本的情况下分享你的软件，这个错误可能会出现 - 并且在 M1/2 计算机上，不可能使用&lt;em&gt;系统设置&lt;/em&gt;来允许应用运行。&lt;/p&gt;</description></item><item><title>03. 数据转换</title><link>https://www.poloxue.com/gofyne/docs/07-binding/03-conversion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/07-binding/03-conversion/</guid><description>&lt;h1 id="数据转换"&gt;数据转换&lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e8%bd%ac%e6%8d%a2"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;到目前为止，我们使用的数据绑定是数据类型与输出类型匹配的情况（例如&lt;code&gt;String&lt;/code&gt;与&lt;code&gt;Label&lt;/code&gt;或&lt;code&gt;Entry&lt;/code&gt;）。通常，将需要以不同于原始格式的方式展示数据。为此，&lt;code&gt;binding&lt;/code&gt;包提供了许多有用的转换函数。&lt;/p&gt;
&lt;p&gt;最常见的用途是将不同类型的数据转换为字符串，以便在&lt;code&gt;Label&lt;/code&gt;或&lt;code&gt;Entry&lt;/code&gt;控件中显示。看看我们如何使用&lt;code&gt;binding.FloatToString&lt;/code&gt;将&lt;code&gt;Float&lt;/code&gt;转换为&lt;code&gt;String&lt;/code&gt;。原始值可以通过移动滑块来编辑。每次数据变化时，它都会运行转换代码并更新任何连接的控件。&lt;/p&gt;
&lt;p&gt;也可以使用格式字符串为用户界面添加更自然的输出。你可以看到我们的&lt;code&gt;short&lt;/code&gt;绑定也是将&lt;code&gt;Float&lt;/code&gt;转换为&lt;code&gt;String&lt;/code&gt;，但通过使用&lt;code&gt;WithFormat&lt;/code&gt;助手，我们可以传递一个格式字符串（类似于&lt;code&gt;fmt&lt;/code&gt;包）来提供自定义输出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/data/binding&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;转换&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;f&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewFloat&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FloatToString&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;f&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;short&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FloatToStringWithFormat&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;f&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;%0.0f%%&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;f&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Set&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;25.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewVBox&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSliderWithData&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100.0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;f&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabelWithData&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabelWithData&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;short&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，在本节中，我们将查看&lt;a href="https://www.poloxue.com/gofyne/docs/07-binding/04-list/"&gt;list&lt;/a&gt;数据。&lt;/p&gt;</description></item><item><title>03. 树 Tree</title><link>https://www.poloxue.com/gofyne/docs/06-collection/03-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/06-collection/03-tree/</guid><description>&lt;h1 id="树-tree"&gt;树 Tree&lt;a class="anchor" href="#%e6%a0%91-tree"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Tree&lt;/code&gt; 集合控件类似于 &lt;a href="https://www.poloxue.com/gofyne/docs/06-collection/01-list/"&gt;List&lt;/a&gt; 控件（工具包的另一个集合控件），具有多级数据结构。像 &lt;code&gt;List&lt;/code&gt; 一样，它旨在帮助构建性能良好的接口，以便在展示大量数据时使用。因此，控件不是用所有数据创建的，而是在需要时调用数据源。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Tree&lt;/code&gt; 使用回调函数在需要时请求数据。有四个主要的回调，&lt;code&gt;ChildUIDs&lt;/code&gt;、&lt;code&gt;IsBranch&lt;/code&gt;、&lt;code&gt;CreateNode&lt;/code&gt; 和 &lt;code&gt;UpdateNode&lt;/code&gt;。&lt;code&gt;ChildUIDs&lt;/code&gt; 回调在这里传递每个子节点的唯一 ID 到请求的节点。这将以 &lt;code&gt;TreeNodeID&lt;/code&gt; 为 &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; 被调用，首先获取所有显示在树根中的 ID 列表。&lt;code&gt;IsBranch&lt;/code&gt; 回调应当在节点是分支时返回 &lt;code&gt;true&lt;/code&gt;。如果节点 ID 有子节点，通常返回 &lt;code&gt;true&lt;/code&gt; - 但你可以有一个空的分支。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;确保树中每个树节点的 id 是唯一的，这一点至关重要。&lt;/strong&gt;
例如，如果你正在构建一个文件管理器，ID 应该是文件路径而不是其名称。&lt;/p&gt;
&lt;p&gt;其他两个回调与内容模板相关。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CreateNode&lt;/code&gt; 回调返回一个新的模板对象，就像列表一样，尽管有一个额外的 &lt;code&gt;bool&lt;/code&gt; 参数，如果节点可以有子元素（是一个分支），则为 &lt;code&gt;true&lt;/code&gt;。如前所述，&lt;code&gt;UpdateNode&lt;/code&gt; 被调用以将数据应用于单元格模板。你应该根据 &lt;code&gt;TreeNodeID&lt;/code&gt; 和 &lt;code&gt;isBranch&lt;/code&gt; 参数更新内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;树形控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;tree&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewTree&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;id&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TreeNodeID&lt;/span&gt;) []&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TreeNodeID&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;switch&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;id&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;case&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; []&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TreeNodeID&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;b&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;c&amp;#34;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;case&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; []&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TreeNodeID&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;a1&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;a2&amp;#34;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; []&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;id&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TreeNodeID&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;bool&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;id&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;||&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;id&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;branch&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;bool&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;branch&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;分支模板&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;叶子模板&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;id&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TreeNodeID&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;branch&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;bool&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;branch&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt; &lt;span style="color:#f92672"&gt;+=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34; (分支)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Label&lt;/span&gt;).&lt;span style="color:#a6e22e"&gt;SetText&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;tree&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>03. 线条 Line</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/03-line/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/03-line/</guid><description>&lt;h2 id="线条-line"&gt;线条 Line&lt;a class="anchor" href="#%e7%ba%bf%e6%9d%a1-line"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;canvas.Line&lt;/code&gt; 对象从 &lt;code&gt;Position1&lt;/code&gt;（默认是左上角）画到 &lt;code&gt;Position2&lt;/code&gt;（默认是右下角）。你可以指定它的颜色，并且可以改变笔触宽度，否则默认为 &lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;线的位置可以使用 &lt;code&gt;Position1&lt;/code&gt; 或 &lt;code&gt;Position2&lt;/code&gt; 字段，或者使用 &lt;code&gt;Move()&lt;/code&gt; 和 &lt;code&gt;Resize()&lt;/code&gt; 函数来操作。例如，宽度为 0 的区域会显示为垂直线，而高度为 0 则会是水平线。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;线条&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;line&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLine&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;line&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;StrokeWidth&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;line&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;线条通常用于自定义布局或手动控制。与文本不同，它们没有自然（最小）大小，但可以在复杂布局中产生出色的效果。&lt;/p&gt;</description></item><item><title>03. 网格包装 Grid Wrap</title><link>https://www.poloxue.com/gofyne/docs/04-container/03-gridwrap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/03-gridwrap/</guid><description>&lt;h1 id="网格包装-grid-wrap"&gt;网格包装 Grid Wrap&lt;a class="anchor" href="#%e7%bd%91%e6%a0%bc%e5%8c%85%e8%a3%85-grid-wrap"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;与之前的网格布局一样，网格包装布局在网格模式中创建元素的排列。然而，这种网格没有固定数量的列，而是为每个单元格使用固定大小，然后将内容流动到需要显示项目的尽可能多的行中。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;layout.NewGridWrapLayout(size)&lt;/code&gt; 创建网格包装布局，其中 size 指定要应用于所有子元素的大小。然后将此布局作为第一个参数传递给 &lt;code&gt;container.New(...)&lt;/code&gt;。根据容器的当前大小计算列数和行数。&lt;/p&gt;
&lt;p&gt;最初，网格包装布局将有一个单列，如果您调整它的大小（如代码注释中所示），它将重新排列子元素以填充空间。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;网格包装布局&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;grid&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewGridWrapLayout&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;50&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;50&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;text1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text2&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;grid&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// myWindow.Resize(fyne.NewSize(180, 75))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>03. 资源包 Bundle</title><link>https://www.poloxue.com/gofyne/docs/08-extend/03-bundle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/08-extend/03-bundle/</guid><description>&lt;h2 id="资源包"&gt;资源包&lt;a class="anchor" href="#%e8%b5%84%e6%ba%90%e5%8c%85"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;基于 Go 的应用程序通常构建为单个二进制可执行文件，Fyne应用程序也是如此。单个文件使我们更容易分发和安装软件。不幸的是，GUI应用程序通常需要额外的资源来渲染用户界面。为了管理这个挑战，Go应用程序可以将资产捆绑到二进制文件本身中。Fyne工具包更喜欢使用&amp;quot;fyne bundle&amp;quot;，因为它有我们将在下面探索的各种好处。&lt;/p&gt;
&lt;p&gt;捆绑资产的基本方法是执行&amp;quot;fyne bundle&amp;quot;命令。这个工具有各种参数来自定义输出，但在其最基本的形式中，要捆绑的文件将被转换为可以构建到您的应用程序中的Go源代码。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;image.png	main.go
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ fyne bundle -o bundled.go image.png
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bundled.go	image.png	main.go
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;bundled.go&lt;/code&gt;的内容将是我们然后可以在代码中访问的资源变量列表。例如，上面的代码将导致包含以下内容的文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;resourceImagePng&lt;/span&gt; = &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;StaticResource&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;StaticName&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;image.png&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;StaticContent&lt;/span&gt;: []&lt;span style="color:#66d9ef"&gt;byte&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如你所见，默认命名为&amp;quot;resource&amp;lt;Name&amp;gt;.&amp;lt;Ext&amp;gt;&amp;quot;。这个文件中使用的名称和包可以在命令参数中自定义。然后我们可以使用这个名称来，例如，在我们的画布上加载一张图片：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;img&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewImageFromResource&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;resourceImagePng&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fyne资源只是一个带有唯一名称的字节集合，所以这可以是一个字体、一个声音&lt;/p&gt;</description></item><item><title>03. 输入框 Entry</title><link>https://www.poloxue.com/gofyne/docs/05-widget/03-entry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/05-widget/03-entry/</guid><description>&lt;h1 id="输入框-entry"&gt;输入框 Entry&lt;a class="anchor" href="#%e8%be%93%e5%85%a5%e6%a1%86-entry"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;输入控件（Entry widget）用于用户输入简单文本内容。可以通过&lt;code&gt;widget.NewEntry()&lt;/code&gt;构造函数简单地创建一个输入控件。创建控件时，保留一个引用，以便以后可以访问其&lt;code&gt;Text&lt;/code&gt;字段。还可以使用&lt;code&gt;OnChanged&lt;/code&gt;回调函数，每当内容变化时都会收到通知。&lt;/p&gt;
&lt;p&gt;输入控件还可以有验证功能，用于验证输入的文本。这可以通过设置&lt;code&gt;Validator&lt;/code&gt;字段为&lt;code&gt;fyne.StringValidator&lt;/code&gt;来完成。你还可以设置&lt;code&gt;PlaceHolder&lt;/code&gt;文本，并且设置输入控件为&lt;code&gt;MultiLine&lt;/code&gt;以接受多行文本。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Entry Widget&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;input&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewEntry&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;input&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetPlaceHolder&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Enter text...&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewVBox&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;input&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewButton&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Save&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Content was:&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;input&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你还可以使用&lt;code&gt;NewPasswordEntry()&lt;/code&gt;函数创建一个密码输入控件（内容被隐藏）。&lt;/p&gt;</description></item><item><title>03. 运行 Fyne Demo</title><link>https://www.poloxue.com/gofyne/docs/01-started/03-demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/03-demo/</guid><description>&lt;h1 id="运行-fyne-demo"&gt;运行 Fyne Demo&lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c-fyne-demo"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;如果你想在开始编写自己的应用程序之前看到Fyne工具包的实际效果，你可以查看我们的演示应用程序。&lt;/p&gt;
&lt;h3 id="运行"&gt;运行&lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果愿意，你可以使用以下命令直接运行演示（需要Go 1.16或更高版本）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;go run fyne.io/fyne/v2/cmd/fyne_demo@latest&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/started/fynedemo-dark.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;对于早期版本的Go，你需要使用以下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;go run fyne.io/fyne/v2/cmd/fyne_demo&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过浏览应用的不同标签，你可以看到Fyne工具包的所有功能。&lt;/p&gt;
&lt;h3 id="安装"&gt;安装&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;你可以将该应用安装为计算机上的图形应用程序，就像所有其他应用程序一样。我们有一个有用的&lt;code&gt;fyne&lt;/code&gt;工具可以为你完成这项工作。首先，你需要安装该工具：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;go install fyne.io/fyne/v2/cmd/fyne@latest&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后，你可以简单地打包并安装演示应用程序：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne get fyne.io/fyne/v2/cmd/fyne_demo&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完成这一步骤后，你可以在应用启动器中找到“Fyne Demo”。&lt;/p&gt;
&lt;h3 id="探索代码"&gt;探索代码&lt;a class="anchor" href="#%e6%8e%a2%e7%b4%a2%e4%bb%a3%e7%a0%81"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果你对任何功能感兴趣，你应该查看&lt;a href="https://github.com/fyne-io/fyne/tree/master/cmd/fyne_demo"&gt;源码仓库&lt;/a&gt;或加入&lt;a href="https://fyne.io/#contact"&gt;社区频道&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>04. App 和 RunLoop</title><link>https://www.poloxue.com/gofyne/docs/01-started/04-apprun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/04-apprun/</guid><description>&lt;h1 id="app-和-runloop"&gt;App 和 RunLoop&lt;a class="anchor" href="#app-%e5%92%8c-runloop"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;对于一个图形用户界面（GUI）应用程序来说，它需要运行一个事件循环（有时被称为运行循环），来处理用户交互和绘图事件。在Fyne中，这是通过使用&lt;code&gt;App.Run()&lt;/code&gt;或&lt;code&gt;Window.ShowAndRun()&lt;/code&gt;函数启动的。这些函数中的一个必须在你的&lt;code&gt;main()&lt;/code&gt;函数的设置代码末尾被调用。&lt;/p&gt;
&lt;p&gt;一个应用程序应该只有一个运行循环，因此你应该在代码中只调用&lt;code&gt;Run()&lt;/code&gt;一次。第二次调用它将会导致错误。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Show&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Run&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;tidyUp&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;tidyUp&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;fmt&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Exited&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于桌面运行时，一个应用程序可以通过调用&lt;code&gt;App.Quit()&lt;/code&gt;直接退出（移动应用不支持此功能）- 通常在开发者代码中不需要。一旦所有窗口都被关闭，应用程序也将退出。另外，请注意，在应用程序退出之前，执行&lt;code&gt;Run()&lt;/code&gt;之后的函数将不会被调用。&lt;/p&gt;</description></item><item><title>04. 列表类型</title><link>https://www.poloxue.com/gofyne/docs/07-binding/04-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/07-binding/04-list/</guid><description>&lt;h1 id="列表类型"&gt;列表类型&lt;a class="anchor" href="#%e5%88%97%e8%a1%a8%e7%b1%bb%e5%9e%8b"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;为了展示如何连接更复杂的类型，我们将看看&lt;code&gt;List&lt;/code&gt;控件以及数据绑定如何使其更易用。首先，我们创建一个&lt;code&gt;StringList&lt;/code&gt;数据绑定，这是一个&lt;code&gt;String&lt;/code&gt;数据类型的列表。一旦我们有了列表类型的数据，我们就可以将这个数据连接到标准的&lt;code&gt;List&lt;/code&gt;控件。为此，我们使用&lt;code&gt;widget.NewListWithData&lt;/code&gt;构造函数，这和其他控件类似。&lt;/p&gt;
&lt;p&gt;将这段代码与&lt;a href="https://www.poloxue.com/gofyne/docs/06-collection/01-list/"&gt;列表教程&lt;/a&gt;进行比较，你会看到两个主要变化，第一个是我们将数据类型作为第一个参数传递，而不是长度回调函数。第二个变化是最后一个参数，我们的&lt;code&gt;UpdateItem&lt;/code&gt;回调。修订版采用&lt;code&gt;binding.DataItem&lt;/code&gt;值而不是&lt;code&gt;widget.ListIndexID&lt;/code&gt;。使用这种回调结构时，我们应该&lt;code&gt;Bind&lt;/code&gt;到模板标签控件而不是调用&lt;code&gt;SetText&lt;/code&gt;。这意味着如果数据源中的任何字符串发生变化，表格的每个受影响行都将刷新。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/data/binding&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;List Data&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;BindStringList&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;[]&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;Item 1&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;Item 2&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;Item 3&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;list&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewListWithData&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;template&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;DataItem&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;o&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CanvasObject&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;o&lt;/span&gt;.(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Label&lt;/span&gt;).&lt;span style="color:#a6e22e"&gt;Bind&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt;.(&lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;String&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;add&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewButton&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Append&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;val&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fmt&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Sprintf&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Item %d&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Length&lt;/span&gt;()&lt;span style="color:#f92672"&gt;+&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;data&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Append&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;val&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewBorder&lt;/span&gt;(&lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;add&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;list&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在我们的演示代码中，有一个“Append”按钮，当点击时，它会向数据源追加一个新值。这样做将自动触发数据变化处理程序并扩展&lt;code&gt;List&lt;/code&gt;控件以显示新数据。&lt;/p&gt;</description></item><item><title>04. 包组织 Package</title><link>https://www.poloxue.com/gofyne/docs/09-architecture/04-organisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/09-architecture/04-organisation/</guid><description>&lt;h1 id="包的组织"&gt;包的组织&lt;a class="anchor" href="#%e5%8c%85%e7%9a%84%e7%bb%84%e7%bb%87"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne 项目分为许多包，每个包提供不同类型的功能，如下所示：&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;这个导入提供了所有 Fyne 代码共有的基本定义，包括数据类型和接口。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/app&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;app 包提供启动新应用的 API。&lt;/dd&gt;
&lt;dd&gt;通常你只需要 &lt;code&gt;app.New()&lt;/code&gt; 或 &lt;code&gt;app.NewWithID()&lt;/code&gt;。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/canvas&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;canvas 包提供 Fyne 中所有的绘图 API。&lt;/dd&gt;
&lt;dd&gt;完整的 Fyne 工具包由这些原始图形类型组成。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/container&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;container 包提供用于布局和组织应用的容器。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/data/binding&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;binding 包包含将数据源绑定到控件的方法。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/data/validation&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;validation 包提供工具用于验证控件内的数据。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/dialog&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;dialog 包包含确认、错误和文件保存/打开等对话框。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/layout&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;layout 包提供用于容器的各种布局实现（在后续教程中讨论）。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/storage&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;storage 包提供存储访问和管理功能。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/test&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;使用 test 包内的工具可以更容易地测试应用。&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;fyne.io/fyne/v2/widget&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;大多数图形应用是使用一系列控件创建的。&lt;/dd&gt;
&lt;dd&gt;Fyne 中的所有控件和交互元素都在这个包中。&lt;/dd&gt;
&lt;/dl&gt;</description></item><item><title>04. 圆 Circle</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/04-circle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/04-circle/</guid><description>&lt;h2 id="圆-circle"&gt;圆 Circle&lt;a class="anchor" href="#%e5%9c%86-circle"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;canvas.Circle&lt;/code&gt; 定义了一个由指定颜色填充的圆形。您还可以设置 &lt;code&gt;StrokeWidth&lt;/code&gt;，因此显示不同的 &lt;code&gt;StrokeColor&lt;/code&gt;，如此示例中所示。&lt;/p&gt;
&lt;p&gt;圆形将填充通过调用 &lt;code&gt;Resize()&lt;/code&gt; 或由其控制的布局指定的空间。由于示例将圆形设置为窗口内容，它将调整大小以填充窗口，存在基本的内边距（由主题控制）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;圆形&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewCircle&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;StrokeColor&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Gray&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;Y&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0x99&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;StrokeWidth&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;circle&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所有这些都是基本类型，可以由我们的驱动程序渲染，无需额外信息。接下来，我们将看看更复杂的类型，从 &lt;a href="https://www.poloxue.com/gofyne/docs/03-canvas/05-image/"&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; 开始。&lt;/p&gt;</description></item><item><title>04. 复选框 Choices</title><link>https://www.poloxue.com/gofyne/docs/05-widget/04-choices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/05-widget/04-choices/</guid><description>&lt;h1 id="复选框-choices"&gt;复选框 Choices&lt;a class="anchor" href="#%e5%a4%8d%e9%80%89%e6%a1%86-choices"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;有各种控件可用于向用户展示选择，包括复选框、单选按钮组和下拉选择框。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;widget.Check&lt;/code&gt; 提供一个简单的是/否选择，使用字符串标签创建。这些控件每一个都接受一个 &amp;ldquo;changed&amp;rdquo; &lt;code&gt;func(...)&lt;/code&gt;，其中参数类型适用于它们。因此，&lt;code&gt;widget.NewCheck(..)&lt;/code&gt; 接受一个 &lt;code&gt;string&lt;/code&gt; 参数作为标签和一个 &lt;code&gt;func(bool)&lt;/code&gt; 参数作为更改处理器。你也可以使用 &lt;code&gt;Checked&lt;/code&gt; 字段来获取布尔值。&lt;/p&gt;
&lt;p&gt;单选按钮控件类似，但第一个参数是表示每个选项的 &lt;code&gt;string&lt;/code&gt; 切片。这次更改函数期望一个 &lt;code&gt;string&lt;/code&gt; 参数，以返回当前选定的值。调用 &lt;code&gt;widget.NewRadioGroup(...)&lt;/code&gt; 来构造单选按钮组控件，你可以稍后使用这个引用来读取 &lt;code&gt;Selected&lt;/code&gt; 字段，而不是使用更改回调。&lt;/p&gt;
&lt;p&gt;下拉选择控件在构造函数签名上与单选按钮控件相同。调用 &lt;code&gt;widget.NewSelect(...)&lt;/code&gt; 将显示一个按钮，当点击时会显示一个弹出窗口，用户可以从中进行选择。对于长列表的选项，这更加合适。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;选择控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;check&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewCheck&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;可选&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;value&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;bool&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;复选框设置为&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;value&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;radio&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewRadioGroup&lt;/span&gt;([]&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;选项 1&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;选项 2&amp;#34;&lt;/span&gt;}, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;value&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;单选按钮设置为&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;value&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;combo&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSelect&lt;/span&gt;([]&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;选项 1&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;选项 2&amp;#34;&lt;/span&gt;}, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;value&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;选择设置为&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;value&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewVBox&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;check&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;radio&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;combo&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>04. 布局组件</title><link>https://www.poloxue.com/gofyne/docs/02-explore/04-layouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/04-layouts/</guid><description>&lt;h2 id="布局组件"&gt;布局组件&lt;a class="anchor" href="#%e5%b8%83%e5%b1%80%e7%bb%84%e4%bb%b6"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="水平盒hbox"&gt;水平盒（HBox）&lt;a class="anchor" href="#%e6%b0%b4%e5%b9%b3%e7%9b%92hbox"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;水平盒将项目以水平行的方式排列。容器中的每个元素将具有相同的高度（容器中最高项目的高度），并且对象将按其最小宽度左对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/hbox-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="垂直盒vbox"&gt;垂直盒（VBox）&lt;a class="anchor" href="#%e5%9e%82%e7%9b%b4%e7%9b%92vbox"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;垂直盒将项目以垂直列的方式排列。容器中的每个元素将具有相同的宽度（容器中最宽项目的宽度），并且对象将按其最小高度顶部对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/vbox-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="居中center"&gt;居中（Center）&lt;a class="anchor" href="#%e5%b1%85%e4%b8%adcenter"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;居中布局将所有容器元素定位在容器的中心。每个对象都将设置为其最小尺寸。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/center-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="表单form"&gt;表单（Form）&lt;a class="anchor" href="#%e8%a1%a8%e5%8d%95form"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;表单布局将项目成对排列，其中第一列为最小宽度。这通常用于表单中的标签元素，其中标签位于第一列，其描述的项目位于第二列。你应该总是向表单布局添加偶数个元素。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/form-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="网格grid"&gt;网格（Grid）&lt;a class="anchor" href="#%e7%bd%91%e6%a0%bcgrid"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网格布局在可用空间中均匀排列项目。指定列数，对象水平定位，直到达到列数，此时开始新的行。所有对象具有相同的大小，即宽度除以列总数，高度将是总高度除以所需行数减去填充。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/grid-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="网格包裹gridwrap"&gt;网格包裹（GridWrap）&lt;a class="anchor" href="#%e7%bd%91%e6%a0%bc%e5%8c%85%e8%a3%b9gridwrap"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网格包裹布局将所有项目沿一行流动排列，如果空间不足，则换到新行。所有对象将设置为相同的大小，即传递给布局的大小。这种布局可能不会尊重项目的MinSize以管理这种统一布局。通常用于文件管理器或图像缩略图列表。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/gridwrap-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="边框border"&gt;边框（Border）&lt;a class="anchor" href="#%e8%be%b9%e6%a1%86border"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;边框布局支持在可用空间外围定位项目。边框传递指向对象的指针（顶部、左侧、底部、右侧）。容器中未定位在边框上的所有项目将填充剩余空间。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/border-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="最大max"&gt;最大（Max）&lt;a class="anchor" href="#%e6%9c%80%e5%a4%a7max"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最大布局将所有容器元素定位以填充可用空间。对象都将是全尺寸的，并按照它们被添加到容器中的顺序绘制（最后添加的在最上面）。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/max-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="填充padded"&gt;填充（Padded）&lt;a class="anchor" href="#%e5%a1%ab%e5%85%85padded"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;填充布局将所有容器元素定位以填充可用空间，但在外围有一小块填充。填充的大小是主题特定的。对象都将按照它们被添加到容器中的顺序绘制（最后添加的在最上面）。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/padded-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="组合布局"&gt;组合布局&lt;a class="anchor" href="#%e7%bb%84%e5%90%88%e5%b8%83%e5%b1%80"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;通过使用多个布局，可以构建更复杂的应用程序结构。每个具有自己布局的多个容器可以嵌套，仅使用上面列出的标准布局创建完整的用户界面布局。例如，一个用于页眉的水平盒，一个用于左侧文件面板的垂直盒，以及内容区域中的网格包装布局 - 所有这些都放在使用边框布局的容器内，可以构建下面所示的结果。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/layouts/combined-light.png" alt="" /&gt;&lt;/p&gt;</description></item><item><title>04. 自定义主题 Theme</title><link>https://www.poloxue.com/gofyne/docs/08-extend/04-custom-theme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/08-extend/04-custom-theme/</guid><description>&lt;h2 id="自定义主题-theme"&gt;自定义主题 Theme&lt;a class="anchor" href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e4%b8%bb%e9%a2%98-theme"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;应用程序能够加载自定义主题，这些主题可以对标准主题进行小的更改，或提供完全独特的外观。一个主题需要实现&lt;code&gt;fyne.Theme&lt;/code&gt;接口的函数，该接口定义如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Theme&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;interface&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;Color&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;ThemeColorName&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;ThemeVariant&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Color&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;Font&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;TextStyle&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Resource&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;Icon&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;ThemeIconName&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Resource&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;ThemeSizeName&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;float32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要应用我们的主题更改，我们首先定义一个实现了这个接口的新类型。&lt;/p&gt;
&lt;h3 id="定义你的主题"&gt;定义你的主题&lt;a class="anchor" href="#%e5%ae%9a%e4%b9%89%e4%bd%a0%e7%9a%84%e4%b8%bb%e9%a2%98"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我们从定义一个将成为我们主题的新类型开始，一个简单的空结构体就可以了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;struct&lt;/span&gt; {}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;断言我们实现了一个接口是个好主意，这样编译错误会更接近于定义类型。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;_&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Theme&lt;/span&gt; = (&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt;)(&lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时你可能会看到编译错误，因为我们还需要实现方法，我们从颜色开始。&lt;/p&gt;
&lt;h4 id="自定义颜色"&gt;自定义颜色&lt;a class="anchor" href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e9%a2%9c%e8%89%b2"&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Theme&lt;/code&gt;接口中定义的&lt;code&gt;Color&lt;/code&gt;函数要求我们定义一个命名颜色，并且还为用户期望的变体提供了提示（例如&lt;code&gt;theme.VariantLight&lt;/code&gt;或&lt;code&gt;theme.VariantDark&lt;/code&gt;）。在我们的主题中，我们将返回一个自定义的背景颜色 - 对于明亮和暗黑主题使用不同的值。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// 需要从&amp;#34;image/color&amp;#34;导入color包。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Color&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;name&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ThemeColorName&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;variant&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ThemeVariant&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Color&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;name&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ColorNameBackground&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;variant&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;VariantLight&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Black&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;DefaultTheme&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;Color&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;name&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;variant&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你会看到这里的最后一行引用了&lt;code&gt;theme.DefaultTheme()&lt;/code&gt;来查找标准值。这允许我们提供自定义值，但在我们不想提供自己的值时回退到标准主题。&lt;/p&gt;
&lt;p&gt;当然，颜色比资源更简单，我们来看看如何自定义图标。&lt;/p&gt;
&lt;h4 id="覆盖默认图标"&gt;覆盖默认图标&lt;a class="anchor" href="#%e8%a6%86%e7%9b%96%e9%bb%98%e8%ae%a4%e5%9b%be%e6%a0%87"&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;图标（和字体）使用&lt;code&gt;fyne.Resource&lt;/code&gt;作为值，而不是像&lt;code&gt;int&lt;/code&gt;（用于大小）或&lt;code&gt;color.Color&lt;/code&gt;（用于颜色）这样的简单类型。我们可以使用&lt;code&gt;fyne.NewStaticResource&lt;/code&gt;构建自己的资源，或者你可以传入使用&lt;a href="https://developer.fyne.io/tutorial/bundle"&gt;资源嵌入&lt;/a&gt;创建的值。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Icon&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;name&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ThemeIconName&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resource&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;name&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;IconNameHome&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewStaticResource&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;myHome&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;homeBytes&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;DefaultTheme&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;Icon&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;name&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如上所述，如果我们不想提供特定的覆盖，我们返回默认主题图标。&lt;/p&gt;
&lt;h3 id="加载主题"&gt;加载主题&lt;a class="anchor" href="#%e5%8a%a0%e8%bd%bd%e4%b8%bb%e9%a2%98"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在你可以加载主题之前，你还需要实现&lt;code&gt;Size&lt;/code&gt;和&lt;code&gt;Font&lt;/code&gt;方法。如果你满意使用默认值，你可以使用这些空实现。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Font&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;style&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TextStyle&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resource&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;DefaultTheme&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;Font&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;style&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;name&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ThemeSizeName&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;float32&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;DefaultTheme&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;Size&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;name&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要为你的应用设置主题，你需要添加以下代码行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Settings&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;SetTheme&lt;/span&gt;(&lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;myTheme&lt;/span&gt;{})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过这些更改，你可以应用自己的风格，进行小的调整或提供完全自定义的应用程序外观！&lt;/p&gt;</description></item><item><title>04. 边框布局 Border</title><link>https://www.poloxue.com/gofyne/docs/04-container/04-border/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/04-border/</guid><description>&lt;h1 id="边框布局-border"&gt;边框布局 Border&lt;a class="anchor" href="#%e8%be%b9%e6%a1%86%e5%b8%83%e5%b1%80-border"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;边框布局可能是构建用户界面时使用最广泛的布局之一，因为它允许围绕一个将扩展以填充空间的中心元素定位项目。要创建一个边框容器，你需要将应该在边框位置定位的 &lt;code&gt;fyne.CanvasObject&lt;/code&gt; 作为构造函数的前四个参数传递。这个语法基本上就是 &lt;code&gt;container.NewBorder(top, bottom, left, right, center)&lt;/code&gt;，如示例所示。&lt;/p&gt;
&lt;p&gt;传递给容器的前四个项目之后的任何项目都将被定位到中心区域，并将扩展以填充可用空间。你也可以将 &lt;code&gt;nil&lt;/code&gt; 传递给你希望留空的边框参数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;边框布局&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;top&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;顶部栏&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;left&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;左侧&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;middle&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;内容&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewBorder&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;top&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;left&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;middle&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，中心的所有项目都将扩展以填充空间（就像它们在 &lt;a href="https://www.poloxue.com/gofyne/docs/04-container/07-max/"&gt;&lt;code&gt;layout.MaxLayout&lt;/code&gt;&lt;/a&gt; 容器中一样）。要自己管理该区域，你可以使用任何 &lt;code&gt;fyne.Container&lt;/code&gt; 作为内容。&lt;/p&gt;</description></item><item><title>05. Dialog 对话框</title><link>https://www.poloxue.com/gofyne/docs/02-explore/05-dialogs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/05-dialogs/</guid><description>&lt;h1 id="对话框列表"&gt;对话框列表&lt;a class="anchor" href="#%e5%af%b9%e8%af%9d%e6%a1%86%e5%88%97%e8%a1%a8"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;h3 id="颜色"&gt;颜色&lt;a class="anchor" href="#%e9%a2%9c%e8%89%b2"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;允许用户从标准集合中选择一个颜色（或在高级模式中选择任何颜色）。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/dialogs/color-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="确认"&gt;确认&lt;a class="anchor" href="#%e7%a1%ae%e8%ae%a4"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;请求确认一个操作。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/dialogs/confirm-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="文件打开"&gt;文件打开&lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e6%89%93%e5%bc%80"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;提示用户选择一个文件以在应用内使用。实际显示的对话框将取决于当前操作系统。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/dialogs/fileopen-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="表单"&gt;表单&lt;a class="anchor" href="#%e8%a1%a8%e5%8d%95"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在一个对话框中获取各种输入元素，并进行验证。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/dialogs/form-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="信息"&gt;信息&lt;a class="anchor" href="#%e4%bf%a1%e6%81%af"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一种向应用用户展示一些信息的简单方法。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/dialogs/information-light.png" alt="" /&gt;&lt;/p&gt;
&lt;h3 id="自定义"&gt;自定义&lt;a class="anchor" href="#%e8%87%aa%e5%ae%9a%e4%b9%89"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在对话框容器内展示任何内容。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@gofyne/dialogs/custom-light.png" alt="" /&gt;&lt;/p&gt;</description></item><item><title>05. 图片 Image</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/05-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/05-image/</guid><description>&lt;h2 id="图片-image"&gt;图片 Image&lt;a class="anchor" href="#%e5%9b%be%e7%89%87-image"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;canvas.Image&lt;/code&gt; 在 Fyne 中代表一个可缩放的图像资源。它可以从资源（如示例所示）、图像文件、包含图像的 URI 位置、&lt;code&gt;io.Reader&lt;/code&gt; 或内存中的 Go &lt;code&gt;image.Image&lt;/code&gt; 加载。&lt;/p&gt;
&lt;p&gt;默认的图像填充模式是 &lt;code&gt;canvas.ImageFillStretch&lt;/code&gt;，它会导致图像填充指定的空间（通过 &lt;code&gt;Resize()&lt;/code&gt; 或布局）。或者，你可以使用 &lt;code&gt;canvas.ImageFillContain&lt;/code&gt; 以确保保持纵横比并且图像在边界内。此外，你可以使用 &lt;code&gt;canvas.ImageFillOriginal&lt;/code&gt;（如此示例中所用），以确保它也具有等于原始图像大小的最小尺寸。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/theme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;图像&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;image&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewImageFromResource&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FyneLogo&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// image := canvas.NewImageFromURI(uri)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// image := canvas.NewImageFromImage(src)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// image := canvas.NewImageFromReader(reader, name)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// image := canvas.NewImageFromFile(fileName)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;image&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FillMode&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ImageFillOriginal&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;image&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;图像可以是基于位图的（如 PNG 和 JPEG）或基于矢量的（如 SVG）。我们建议尽可能使用可缩放图像，因为它们在大小变化时继续渲染良好。在使用原始图像大小时要小心，因为它们可能不会完全按预期与不同的用户界面比例一致。由于 Fyne 允许整个用户界面缩放，一个 25px 的图像文件可能与一个 25 高度的 fyne 对象不同。&lt;/p&gt;</description></item><item><title>05. 扩展控件 Widget</title><link>https://www.poloxue.com/gofyne/docs/08-extend/05-extending-widgets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/08-extend/05-extending-widgets/</guid><description>&lt;h2 id="扩展控件-widget"&gt;扩展控件 Widget&lt;a class="anchor" href="#%e6%89%a9%e5%b1%95%e6%8e%a7%e4%bb%b6-widget"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Fyne标准控件提供最小的功能和自定义选项以支持大多数用例。在某些时候可能需要更高级的功能。与其让开发者构建自己的控件，不如扩展现有的控件。&lt;/p&gt;
&lt;p&gt;例如，我们将扩展图标控件以支持被点击。为此，我们声明一个新的结构体，嵌入了&lt;code&gt;widget.Icon&lt;/code&gt;类型。我们创建一个构造函数，调用重要的&lt;code&gt;ExtendBaseWidget&lt;/code&gt;函数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;tappableIcon&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Icon&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;newTappableIcon&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;res&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resource&lt;/span&gt;) &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;tappableIcon&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;icon&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;tappableIcon&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;icon&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ExtendBaseWidget&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;icon&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;icon&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetResource&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;res&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;icon&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote class='book-hint '&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 像&lt;code&gt;widget.NewIcon&lt;/code&gt;这样的控件构造函数可能不适用于扩展，因为它已经调用了&lt;code&gt;ExtendBaseWidget&lt;/code&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;然后，我们添加新函数以实现&lt;code&gt;fyne.Tappable&lt;/code&gt;接口，有了这些函数，每次用户点击我们的新图标时都会调用新的&lt;code&gt;Tapped&lt;/code&gt;函数。接口需要有两个函数，&lt;code&gt;Tapped(*PointEvent)&lt;/code&gt;和&lt;code&gt;TappedSecondary(*PointEvent)&lt;/code&gt;，所以我们将添加这两个。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;t&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;tappableIcon&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Tapped&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;_&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;PointEvent&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;I have been tapped&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;t&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;tappableIcon&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;TappedSecondary&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;_&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;PointEvent&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以使用如下简单的应用程序测试这个新控件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/theme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Tappable&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;newTappableIcon&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FyneLogo&lt;/span&gt;()))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>05. 更新 GUI 内容</title><link>https://www.poloxue.com/gofyne/docs/01-started/05-updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/05-updating/</guid><description>&lt;h1 id="更新-gui-内容"&gt;更新 GUI 内容&lt;a class="anchor" href="#%e6%9b%b4%e6%96%b0-gui-%e5%86%85%e5%ae%b9"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;在完成了Hello World教程或其他示例之后，你将创建一个基本的用户界面。在这个页面中，我们将看到如何从代码中更新GUI的内容。&lt;/p&gt;
&lt;p&gt;第一步是将你想要更新的控件赋值给一个变量。在Hello World教程中，我们直接将&lt;code&gt;widget.NewLabel&lt;/code&gt;传递给&lt;code&gt;SetContent()&lt;/code&gt;，为了更新它，我们将其更改为两行不同的代码，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一旦内容被赋值给一个变量，我们就可以调用像&lt;code&gt;SetText(&amp;quot;new text&amp;quot;)&lt;/code&gt;这样的函数。在我们的示例中，我们将使用&lt;code&gt;Time.Format&lt;/code&gt;的帮助，将标签的内容设置为当前时间。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;formatted&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Now&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;Format&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Time: 03:04:05&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetText&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;formatted&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就是我们需要做的，以改变一个可见项的内容（见下面的完整代码）。然而，我们可以进一步定期更新内容。&lt;/p&gt;
&lt;h3 id="在后台运行"&gt;在后台运行&lt;a class="anchor" href="#%e5%9c%a8%e5%90%8e%e5%8f%b0%e8%bf%90%e8%a1%8c"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大多数应用程序都需要在后台运行进程，例如下载数据或响应事件。为了模拟这一点，我们将扩展上述代码，使其每秒运行一次。&lt;/p&gt;
&lt;p&gt;像大多数Go代码一样，我们可以创建一个goroutine（使用&lt;code&gt;go&lt;/code&gt;关键字）并在那里运行我们的代码。如果我们将文本更新代码移动到一个新函数中，它可以在初始显示以及定期更新时被调用。通过组合goroutine和&lt;code&gt;time.Tick&lt;/code&gt;在一个&lt;code&gt;for&lt;/code&gt;循环中，我们可以每秒更新标签。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;go&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;range&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Tick&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;updateTime&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将这段代码放在&lt;code&gt;ShowAndRun&lt;/code&gt;或&lt;code&gt;Run&lt;/code&gt;调用之前是很重要的，因为它们在应用程序关闭之前不会返回。将所有这些结合在一起，代码将运行并每秒更新用户界面，创建一个基本的时钟控件。完整的代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;updateTime&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Label&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;formatted&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Now&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;Format&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Time: 03:04:05&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetText&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;formatted&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Clock&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;updateTime&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;go&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;range&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Tick&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;updateTime&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;clock&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段代码演示了如何在Fyne应用程序中创建动态更新的内容，这是构建交云动用户界面的基础。&lt;/p&gt;</description></item><item><title>05. 表单 Form</title><link>https://www.poloxue.com/gofyne/docs/05-widget/05-form/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/05-widget/05-form/</guid><description>&lt;h1 id="表单-form"&gt;表单 Form&lt;a class="anchor" href="#%e8%a1%a8%e5%8d%95-form"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;表单控件用于排列许多输入字段、标签以及可选的取消和提交按钮。在其最简单的形式中，它将标签对齐到每个输入控件的左侧。通过设置OnCancel或OnSubmit，表单将添加一个按钮栏，当适当时调用指定的处理程序。&lt;/p&gt;
&lt;p&gt;可以通过传递&lt;code&gt;widget.FormItem&lt;/code&gt;列表使用&lt;code&gt;widget.NewForm(...)&lt;/code&gt;创建控件，或者使用示例中所示的&lt;code&gt;&amp;amp;widget.Form{}&lt;/code&gt;语法。还有一个有用的&lt;code&gt;Form.Append(label, widget)&lt;/code&gt;，可用于另一种语法。&lt;/p&gt;
&lt;p&gt;在这个例子中，我们创建了两个输入框，其中一个是“多行”的（类似HTML TextArea）来保存值。有一个OnSubmit处理程序，在关闭窗口（因此是应用程序）之前打印信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;表单控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewEntry&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;textArea&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewMultiLineEntry&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;form&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Form&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;Items&lt;/span&gt;: []&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FormItem&lt;/span&gt;{ &lt;span style="color:#75715e"&gt;// 我们可以在构造函数中指定项&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			{&lt;span style="color:#a6e22e"&gt;Text&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;输入框&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;Widget&lt;/span&gt;: &lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;}},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;OnSubmit&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() { &lt;span style="color:#75715e"&gt;// 可选，处理表单提交&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;表单提交：&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;多行：&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;textArea&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// 我们也可以追加项目&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;form&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Append&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;文本&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;textArea&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;form&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>05. 表单布局 Form</title><link>https://www.poloxue.com/gofyne/docs/04-container/05-form/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/05-form/</guid><description>&lt;h1 id="表单布局-form"&gt;表单布局 Form&lt;a class="anchor" href="#%e8%a1%a8%e5%8d%95%e5%b8%83%e5%b1%80-form"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;layout.FormLayout&lt;/code&gt; 类似于两列的 &lt;a href="https://www.poloxue.com/gofyne/docs/04-container/02-grid/"&gt;网格布局&lt;/a&gt;，但针对应用中的表单布局进行了调整。每个项目的高度将是每行中两个最小高度中的较大者。第一列中所有项目的最大最小宽度将是左侧项目的宽度，而每行中的第二个项目将扩展以填满空间。&lt;/p&gt;
&lt;p&gt;这种布局更典型地用于 &lt;code&gt;widget.Form&lt;/code&gt;（用于验证、提交和取消按钮等），但也可以直接使用 &lt;code&gt;layout.NewFormLayout()&lt;/code&gt; 作为 &lt;code&gt;container.New(...)&lt;/code&gt; 的第一个参数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;表单布局&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;label1&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;标签 1&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;value1&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;值&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;label2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;标签 2&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;value2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;某些内容&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;grid&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewFormLayout&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;label1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;value1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;label2&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;value2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;grid&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>06. 主题 Icon 小图标</title><link>https://www.poloxue.com/gofyne/docs/02-explore/06-icons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/06-icons/</guid><description>&lt;h1 id="主题-icon-小图标"&gt;主题 Icon 小图标&lt;a class="anchor" href="#%e4%b8%bb%e9%a2%98-icon-%e5%b0%8f%e5%9b%be%e6%a0%87"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;以下每个图标都可以通过&lt;code&gt;theme&lt;/code&gt;包作为一个函数获得。例如&lt;code&gt;theme.InfoIcon()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这些图标也可以通过使用&lt;code&gt;ThemeIconName&lt;/code&gt;以及在实现了&lt;code&gt;fyne.Theme&lt;/code&gt;的结构体上的&lt;code&gt;Icon&lt;/code&gt;方法，通过它们的源图标名称获得。例如&lt;code&gt;theme.Icon(theme.IconNameInfo)&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id="列表"&gt;列表&lt;a class="anchor" href="#%e5%88%97%e8%a1%a8"&gt;#&lt;/a&gt;&lt;/h2&gt;


&lt;ul class="theme-icon-list"&gt;
 &lt;li class="icon-item" data-icon-theme-method="AccountIcon" data-icon-safeName="IconNameAccount" id="IconNameAccount"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;AccountIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ArrowDropDownIcon" data-icon-safeName="IconNameArrowDropDown"
 id="IconNameArrowDropDown"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M7 10l5 5 5-5z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ArrowDropDownIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ArrowDropUpIcon" data-icon-safeName="IconNameArrowDropUp"
 id="IconNameArrowDropUp"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M7 14l5-5 5 5z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ArrowDropUpIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="BrokenImageIcon" data-icon-safeName="IconNameBrokenImage"
 id="IconNameBrokenImage"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path fill="none"
 d="M0 0h24v24H0zm0 0h24v24H0zm21 19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2" /&gt;
 &lt;path fill="none" d="M0 0h24v24H0z" /&gt;
 &lt;path
 d="M21 5v6.59l-3-3.01-4 4.01-4-4-4 4-3-3.01V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2zm-3 6.42l3 3.01V19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-6.58l3 2.99 4-4 4 4 4-3.99z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;BrokenImageIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="CancelIcon" data-icon-safeName="IconNameCancel" id="IconNameCancel"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;CancelIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="CheckButtonIcon" data-icon-safeName="IconNameCheckButton"
 id="IconNameCheckButton"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M 20,4 V 20 H 4 V 4 H 20 M 19.914286,3 H 4.0857143 C 2.9857143,3 3,2.9857143 3,4.0857143 V 19.914286 C 3,21.014286 2.9857143,21 4.0857143,21 H 19.914286 C 21.014286,21 21,21.014286 21,19.914286 V 4.0857143 C 21,2.9857143 21.014286,3 19.914286,3 Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;CheckButtonIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="CheckButtonCheckedIcon" data-icon-safeName="IconNameCheckButtonChecked"
 id="IconNameCheckButtonChecked"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M 19.914286,3 H 4.0857143 C 2.9757143,3 3,2.9857143 3,4.0857143 V 19.914286 C 3,21.014286 2.9757143,21 4.0857143,21 H 19.914286 C 21.024286,21 21,21.014286 21,19.914286 V 4.0857143 C 21,2.9857143 21.024286,3 19.914286,3 Z M 10,17 5,12 6.41,10.59 10,14.17 17.59,6.58 19,8 Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;CheckButtonCheckedIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ColorAchromaticIcon" data-icon-safeName="IconNameColorAchromatic"
 id="IconNameColorAchromatic"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M20.84 22.73L16.29 18.18C15.2 19.3 13.69 20 12 20C8.69 20 6 17.31 6 14C6 12.67 6.67 11.03 7.55 9.44L1.11 3L2.39 1.73L22.11 21.46L20.84 22.73M18 14C18 10 12 3.25 12 3.25S10.84 4.55 9.55 6.35L17.95 14.75C18 14.5 18 14.25 18 14Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ColorAchromaticIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ColorChromaticIcon" data-icon-safeName="IconNameColorChromatic"
 id="IconNameColorChromatic"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M12,20A6,6 0 0,1 6,14C6,10 12,3.25 12,3.25C12,3.25 18,10 18,14A6,6 0 0,1 12,20Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ColorChromaticIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ColorPaletteIcon" data-icon-safeName="IconNameColorPalette"
 id="IconNameColorPalette"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="24px" height="24px"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ColorPaletteIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ComputerIcon" data-icon-safeName="IconNameComputer"
 id="IconNameComputer"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="24px" height="24px"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ComputerIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ConfirmIcon" data-icon-safeName="IconNameConfirm" id="IconNameConfirm"&gt;
 &lt;figure&gt;
 &lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="24px" height="24px"
 viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve"&gt;
 &lt;path d="M9,16.17L4.83,12l-1.42,1.41L9,19L21,7l-1.41-1.41L9,16.17z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ConfirmIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentAddIcon" data-icon-safeName="IconNameContentAdd"
 id="IconNameContentAdd"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentAddIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentClearIcon" data-icon-safeName="IconNameContentClear"
 id="IconNameContentClear"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentClearIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentCopyIcon" data-icon-safeName="IconNameContentCopy"
 id="IconNameContentCopy"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentCopyIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentCutIcon" data-icon-safeName="IconNameContentCut"
 id="IconNameContentCut"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentCutIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentPasteIcon" data-icon-safeName="IconNameContentPaste"
 id="IconNameContentPaste"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentPasteIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentRedoIcon" data-icon-safeName="IconNameContentRedo"
 id="IconNameContentRedo"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentRedoIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentRemoveIcon" data-icon-safeName="IconNameContentRemove"
 id="IconNameContentRemove"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M19 13H5v-2h14v2z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentRemoveIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ContentUndoIcon" data-icon-safeName="IconNameContentUndo"
 id="IconNameContentUndo"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ContentUndoIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="DeleteIcon" data-icon-safeName="IconNameDelete" id="IconNameDelete"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;DeleteIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="DocumentCreateIcon" data-icon-safeName="IconNameDocumentCreate"
 id="IconNameDocumentCreate"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;DocumentCreateIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="DocumentIcon" data-icon-safeName="IconNameDocument"
 id="IconNameDocument"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="24px" height="24px"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;DocumentIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="DocumentPrintIcon" data-icon-safeName="IconNameDocumentPrint"
 id="IconNameDocumentPrint"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;DocumentPrintIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="DocumentSaveIcon" data-icon-safeName="IconNameDocumentSave"
 id="IconNameDocumentSave"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;DocumentSaveIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="DownloadIcon" data-icon-safeName="IconNameDownload"
 id="IconNameDownload"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="24" height="24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;DownloadIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ErrorIcon" data-icon-safeName="IconNameError" id="IconNameError"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="24px" height="24px"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ErrorIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FileApplicationIcon" data-icon-safeName="IconNameFileApplication"
 id="IconNameFileApplication"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path style="fill:#000000;stroke-width:0.758587"
 d="m 8.5489811,5.1365526 c 0.6291226,0 1.136968,0.5086607 1.136968,1.1387931 0,0.6301315 -0.5078454,1.138793 -1.136968,1.138793 -0.636702,0 -1.1369682,-0.5086615 -1.1369682,-1.138793 0,-0.6301324 0.5078458,-1.1387931 1.1369682,-1.1387931 z M 8.12769,4.1000094 c -0.054902,0 -0.1013548,0.038698 -0.1098008,0.090302 L 7.9376517,4.7579098 C 7.8109575,4.8138129 7.6884879,4.8826089 7.5786873,4.9600091 L 7.0550226,4.7450081 c -0.046454,0 -0.1013542,0 -0.130916,0.055903 L 6.5017968,5.5448094 c -0.025338,0.047296 -0.016893,0.1031993 0.025338,0.1375997 L 6.974783,6.0350078 c -0.00845,0.073098 -0.012669,0.1418993 -0.012669,0.2149999 0,0.073098 0.00422,0.1418994 0.012669,0.214999 L 6.5271353,6.8176064 c -0.038008,0.034399 -0.050677,0.090302 -0.025338,0.1375997 l 0.4223099,0.7438975 c 0.025338,0.055903 0.080239,0.055903 0.1309161,0.055903 l 0.523664,-0.2150057 c 0.1098007,0.077396 0.2280475,0.1504996 0.3589638,0.2020989 l 0.080237,0.5675985 c 0.00844,0.051604 0.050679,0.090302 0.1098008,0.090302 h 0.8446195 c 0.046453,0 0.092906,-0.038698 0.101355,-0.090302 L 9.1539069,7.7420995 C 9.2806,7.6861968 9.3946235,7.6174007 9.5086472,7.5400006 l 0.5194388,0.2149989 c 0.05491,0 0.109802,0 0.139363,-0.055903 L 10.58976,6.9551982 C 10.6151,6.9079022 10.60243,6.8519989 10.56442,6.8175984 L 10.11255,6.4649991 c 0.0085,-0.073098 0.01689,-0.1418994 0.01689,-0.214999 0,-0.073098 -0.0043,-0.1418993 -0.01689,-0.2149999 l 0.447648,-0.3525988 c 0.03801,-0.0344 0.05068,-0.090302 0.02535,-0.1375998 l -0.42232,-0.7438974 c -0.02534,-0.055903 -0.08024,-0.055903 -0.135141,-0.055903 L 9.5086472,4.9599994 C 9.3946235,4.8826031 9.2806,4.8094997 9.1496836,4.7579005 L 9.069441,4.1903019 C 9.065281,4.1386979 9.018766,4.0999999 8.97231,4.0999999 H 8.12769 M 13,9 h 5.5 L 13,3.5 V 9 M 6,2 h 8 l 6,6 v 12 a 2,2 0 0 1 -2,2 H 6 C 4.89,22 4,21.1 4,20 V 4 C 4,2.89 4.89,2 6,2" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FileApplicationIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FileAudioIcon" data-icon-safeName="IconNameFileAudio"
 id="IconNameFileAudio"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path style="fill:#000000;fill-rule:evenodd;stroke-width:0.777856"
 d="M 6.0002511,2 A 1.9999348,2.000148 0 0 0 4,3.9992013 V 20.000799 A 1.9999348,2.000148 0 0 0 6.0002511,22 H 17.999749 A 1.9999348,2.000148 0 0 0 20,20.000799 V 7.9996008 L 13.999248,2 Z M 13,3.5 18.530514,9 H 13 Z M 8.2937119,4.3207511 h 0.4679302 v 0.00199 h 1.0824651 v 0.3195526 0.2516478 0.2176952 c 0,0.023816 -0.018227,0.043939 -0.042174,0.043939 H 8.7616421 V 7.4124229 7.5182746 C 8.7712047,7.939292 8.3059943,8.2307883 7.914146,8.1653687 7.5819917,8.1259354 7.2871265,7.8366816 7.2996111,7.4943082 7.305688,7.1339923 7.6598442,6.8656836 8.0065272,6.8691834 c 0.097728,-0.00598 0.1945364,0.013901 0.2871847,0.045936 z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FileAudioIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FileIcon" data-icon-safeName="IconNameFile" id="IconNameFile"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FileIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FileImageIcon" data-icon-safeName="IconNameFileImage"
 id="IconNameFileImage"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path style="fill:#000000;fill-rule:evenodd;stroke-width:0.940877"
 d="M 6 2 C 4.9979026 1.9799577 4.0915724 2.7956686 4.0097656 3.7949219 C 3.9858279 9.0765497 4.0068316 14.358462 4 19.640625 C 3.8556938 20.744226 4.6408127 21.907969 5.7949219 21.990234 C 9.7602778 22.014419 13.727457 21.993102 17.693359 22 C 18.814725 22.146504 19.961957 21.277434 19.996094 20.119141 C 20.004294 16.079629 19.9976 12.039599 20 8 L 14 2 L 6 2 z M 13 3.5 L 18.5 9 L 13 9 L 13 3.5 z M 6.8886719 4.4101562 C 7.4076408 4.3996432 7.8588673 4.8625721 7.8476562 5.3789062 C 7.8614266 5.8922419 7.4045151 6.3584357 6.8886719 6.3457031 C 6.3728164 6.3584316 5.917866 5.8922293 5.9316406 5.3789062 C 5.9178703 4.8655705 6.3728287 4.3974238 6.8886719 4.4101562 z M 11.363281 5.3730469 L 11.363281 8.4003906 L 5.6503906 8.4003906 L 8.5078125 6.1289062 L 9.4589844 6.8867188 L 11.363281 5.3730469 z " /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FileImageIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FileTextIcon" data-icon-safeName="IconNameFileText"
 id="IconNameFileText"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path style="fill:#000000"
 d="m 13,9 h 5.5 L 13,3.5 V 9 M 9.964966,8 V 6.5 H 5.3221088 V 8 H 9.964966 M 11.8,6 V 4.5 H 5.3 V 6 Z M 6,2 h 8 l 6,6 v 12 a 2,2 0 0 1 -2,2 H 6 C 4.89,22 4,21.1 4,20 V 4 C 4,2.89 4.89,2 6,2" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FileTextIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FileVideoIcon" data-icon-safeName="IconNameFileVideo"
 id="IconNameFileVideo"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path style="display:inline;fill:#000000"
 d="m 13,9 h 5.5 L 13,3.5 V 9 M 11.45625,7.7785579 V 4.7214421 L 9.75,5.8423846 V 4.7214421 H 5.76875 V 7.7785579 H 9.75 V 6.6576155 Z M 6,2 h 8 l 6,6 v 12 a 2,2 0 0 1 -2,2 H 6 C 4.89,22 4,21.1 4,20 V 4 C 4,2.89 4.89,2 6,2" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FileVideoIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FolderIcon" data-icon-safeName="IconNameFolder" id="IconNameFolder"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FolderIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FolderNewIcon" data-icon-safeName="IconNameFolderNew"
 id="IconNameFolderNew"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path fill="none" d="M0 0h24v24H0V0z" /&gt;
 &lt;path
 d="M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FolderNewIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="FolderOpenIcon" data-icon-safeName="IconNameFolderOpen"
 id="IconNameFolderOpen"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M19,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4H10L12,6H19A2,2 0 0,1 21,8H21L4,8V18L6.14,10H23.21L20.93,18.5C20.7,19.37 19.92,20 19,20Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;FolderOpenIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="GridIcon" data-icon-safeName="IconNameGrid" id="IconNameGrid"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path fill="#000000" d="M3,11H11V3H3M3,21H11V13H3M13,21H21V13H13M13,3V11H21V3" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;GridIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="HelpIcon" data-icon-safeName="IconNameHelp" id="IconNameHelp"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;HelpIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="HistoryIcon" data-icon-safeName="IconNameHistory" id="IconNameHistory"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="24px" height="24px"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;HistoryIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="HomeIcon" data-icon-safeName="IconNameHome" id="IconNameHome"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;HomeIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="InfoIcon" data-icon-safeName="IconNameInfo" id="IconNameInfo"&gt;
 &lt;figure&gt;
 &lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
 width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve"&gt;
 &lt;g&gt;
 &lt;rect x="11" y="7" width="2" height="2" /&gt;
 &lt;rect x="11" y="11" width="2" height="6" /&gt;
 &lt;path d="M12,2C6.48,2,2,6.48,2,12c0,5.52,4.48,10,10,10s10-4.48,10-10C22,6.48,17.52,2,12,2z M12,20c-4.41,0-8-3.59-8-8
			c0-4.41,3.59-8,8-8s8,3.59,8,8C20,16.41,16.41,20,12,20z" /&gt;
 &lt;/g&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;InfoIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ListIcon" data-icon-safeName="IconNameList" id="IconNameList"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path fill="#000000" d="M9,5V9H21V5M9,19H21V15H9M9,14H21V10H9M4,9H8V5H4M4,19H8V15H4M4,14H8V10H4V14Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ListIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="LoginIcon" data-icon-safeName="IconNameLogin" id="IconNameLogin"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M19,3H5C3.89,3 3,3.89 3,5V9H5V5H19V19H5V15H3V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M10.08,15.58L11.5,17L16.5,12L11.5,7L10.08,8.41L12.67,11H3V13H12.67L10.08,15.58Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;LoginIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="LogoutIcon" data-icon-safeName="IconNameLogout" id="IconNameLogout"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="24"
 height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M14.08,15.59L16.67,13H7V11H16.67L14.08,8.41L15.5,7L20.5,12L15.5,17L14.08,15.59M19,3A2,2 0 0,1 21,5V9.67L19,7.67V5H5V19H19V16.33L21,14.33V19A2,2 0 0,1 19,21H5C3.89,21 3,20.1 3,19V5C3,3.89 3.89,3 5,3H19Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;LogoutIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MailAttachmentIcon" data-icon-safeName="IconNameMailAttachment"
 id="IconNameMailAttachment"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5C8.12 15 7 13.88 7 12.5S8.12 10 9.5 10H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z" /&gt;
 &lt;path fill="none" d="M0 0h24v24H0V0z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MailAttachmentIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MailComposeIcon" data-icon-safeName="IconNameMailCompose"
 id="IconNameMailCompose"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MailComposeIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MailForwardIcon" data-icon-safeName="IconNameMailForward"
 id="IconNameMailForward"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M12 8V4l8 8-8 8v-4H4V8z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MailForwardIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MailReplyAllIcon" data-icon-safeName="IconNameMailReplyAll"
 id="IconNameMailReplyAll"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MailReplyAllIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MailReplyIcon" data-icon-safeName="IconNameMailReply"
 id="IconNameMailReply"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MailReplyIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MailSendIcon" data-icon-safeName="IconNameMailSend"
 id="IconNameMailSend"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MailSendIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaFastForwardIcon" data-icon-safeName="IconNameMediaFastForward"
 id="IconNameMediaFastForward"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaFastForwardIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaFastRewindIcon" data-icon-safeName="IconNameMediaFastRewind"
 id="IconNameMediaFastRewind"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaFastRewindIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaMusicIcon" data-icon-safeName="IconNameMediaMusic"
 id="IconNameMediaMusic"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaMusicIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaPauseIcon" data-icon-safeName="IconNameMediaPause"
 id="IconNameMediaPause"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaPauseIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaPhotoIcon" data-icon-safeName="IconNameMediaPhoto"
 id="IconNameMediaPhoto"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;circle cx="12" cy="12" r="3.2" /&gt;
 &lt;path
 d="M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaPhotoIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaPlayIcon" data-icon-safeName="IconNameMediaPlay"
 id="IconNameMediaPlay"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M8 5v14l11-7z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaPlayIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaRecordIcon" data-icon-safeName="IconNameMediaRecord"
 id="IconNameMediaRecord"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;circle cx="12" cy="12" r="8" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaRecordIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaReplayIcon" data-icon-safeName="IconNameMediaReplay"
 id="IconNameMediaReplay"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaReplayIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaSkipNextIcon" data-icon-safeName="IconNameMediaSkipNext"
 id="IconNameMediaSkipNext"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaSkipNextIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaSkipPreviousIcon" data-icon-safeName="IconNameMediaSkipPrevious"
 id="IconNameMediaSkipPrevious"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M6 6h2v12H6zm3.5 6l8.5 6V6z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaSkipPreviousIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaStopIcon" data-icon-safeName="IconNameMediaStop"
 id="IconNameMediaStop"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M0 0h24v24H0V0z" fill="none" /&gt;
 &lt;path d="M6 6h12v12H6V6z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaStopIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MediaVideoIcon" data-icon-safeName="IconNameMediaVideo"
 id="IconNameMediaVideo"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MediaVideoIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MenuExpandIcon" data-icon-safeName="IconNameMenuExpand"
 id="IconNameMenuExpand"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M10 17l5-5-5-5v10z" /&gt;
 &lt;path fill="none" d="M0 24V0h24v24H0z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MenuExpandIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MenuIcon" data-icon-safeName="IconNameMenu" id="IconNameMenu"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MenuIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MoreHorizontalIcon" data-icon-safeName="IconNameMoreHorizontal"
 id="IconNameMoreHorizontal"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MoreHorizontalIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MoreVerticalIcon" data-icon-safeName="IconNameMoreVertical"
 id="IconNameMoreVertical"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MoreVerticalIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MoveDownIcon" data-icon-safeName="IconNameMoveDown"
 id="IconNameMoveDown"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path fill="none" d="M0 0h24v24H0V0z" /&gt;
 &lt;path d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MoveDownIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="MoveUpIcon" data-icon-safeName="IconNameMoveUp" id="IconNameMoveUp"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path fill="none" d="M0 0h24v24H0V0z" /&gt;
 &lt;path d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;MoveUpIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="NavigateBackIcon" data-icon-safeName="IconNameNavigateBack"
 id="IconNameNavigateBack"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;NavigateBackIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="NavigateNextIcon" data-icon-safeName="IconNameNavigateNext"
 id="IconNameNavigateNext"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;NavigateNextIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="QuestionIcon" data-icon-safeName="IconNameQuestion"
 id="IconNameQuestion"&gt;
 &lt;figure&gt;
 &lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
 width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve"&gt;
 &lt;path d="M11,18h2v-2h-2V18z M12,2C6.48,2,2,6.48,2,12s4.48,10,10,10s10-4.48,10-10S17.52,2,12,2z M12,20c-4.41,0-8-3.59-8-8
		s3.59-8,8-8s8,3.59,8,8S16.41,20,12,20z M12,6c-2.21,0-4,1.79-4,4h2c0-1.1,0.9-2,2-2s2,0.9,2,2c0,2-3,1.75-3,5h2c0-2.25,3-2.5,3-5
		C16,7.79,14.21,6,12,6z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;QuestionIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="RadioButtonCheckedIcon" data-icon-safeName="IconNameRadioButtonChecked"
 id="IconNameRadioButtonChecked"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="m 12,5 c -4,0 -7,3 -7,7 1e-7,4 3,7 7,7 4.000133,0 7,-3 7,-7 C 19,8 16.000133,5.0000001 12,5 Z M 12,2 C 6.48,2 2,6.48 2,12 2,17.52 6.48,22 12,22 17.52,22 22,17.52 22,12 22,6.48 17.52,2 12,2 Z m 0,19.012245 C 6.9998134,21.02449 3,17 2.9709368,12.01188 2.9417352,7.0000008 7,3 12,2.9877551 17,2.9755102 21.02449,7 21.012245,12 21,17 17,21 12,21.012245 Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;RadioButtonCheckedIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="RadioButtonIcon" data-icon-safeName="IconNameRadioButton"
 id="IconNameRadioButton"&gt;
 &lt;figure&gt;
 &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M 12,2 C 6.48,2 2,6.48 2,12 2,17.52 6.48,22 12,22 17.52,22 22,17.52 22,12 22,6.48 17.52,2 12,2 Z m 0.0097,19.024071 C 6.9997372,21.048238 3,17 2.992626,12.037976 2.985139,7.0000002 6.9673493,2.9584714 12.036063,2.9795211 16.967347,3 21.069769,7.0000004 21.034853,12.004484 21,17 17,21 12.009738,21.024071 Z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;RadioButtonIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="SearchReplaceIcon" data-icon-safeName="IconNameSearchReplace"
 id="IconNameSearchReplace"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;SearchReplaceIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="SearchIcon" data-icon-safeName="IconNameSearch" id="IconNameSearch"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;SearchIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="SettingsIcon" data-icon-safeName="IconNameSettings"
 id="IconNameSettings"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"&gt;
 &lt;path fill="none" d="M0 0h20v20H0V0z" /&gt;
 &lt;path
 d="M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;SettingsIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="StorageIcon" data-icon-safeName="IconNameStorage" id="IconNameStorage"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="24px" height="24px"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M2 20h20v-4H2v4zm2-3h2v2H4v-2zM2 4v4h20V4H2zm4 3H4V5h2v2zm-4 7h20v-4H2v4zm2-3h2v2H4v-2z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;StorageIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="UploadIcon" data-icon-safeName="IconNameUpload" id="IconNameUpload"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M0 0h24v24H0V0z" fill="none" /&gt;
 &lt;path d="M9 16h6v-6h4l-7-7-7 7h4v6zm-4 2h14v2H5v-2z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;UploadIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ViewFullScreenIcon" data-icon-safeName="IconNameViewFullScreen"
 id="IconNameViewFullScreen"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ViewFullScreenIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ViewRefreshIcon" data-icon-safeName="IconNameViewRefresh"
 id="IconNameViewRefresh"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ViewRefreshIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ViewRestoreIcon" data-icon-safeName="IconNameViewRestore"
 id="IconNameViewRestore"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ViewRestoreIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ViewZoomFitIcon" data-icon-safeName="IconNameViewZoomFit"
 id="IconNameViewZoomFit"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path d="M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ViewZoomFitIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ViewZoomInIcon" data-icon-safeName="IconNameViewZoomIn"
 id="IconNameViewZoomIn"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path
 d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" /&gt;
 &lt;path fill="none" d="M0 0h24v24H0V0z" /&gt;
 &lt;path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ViewZoomInIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="ViewZoomOutIcon" data-icon-safeName="IconNameViewZoomOut"
 id="IconNameViewZoomOut"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path fill="none" d="M0 0h24v24H0V0z" /&gt;
 &lt;path
 d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;ViewZoomOutIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="VisibilityOffIcon" data-icon-safeName="IconNameVisibilityOff"
 id="IconNameVisibilityOff"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;VisibilityOffIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="VisibilityIcon" data-icon-safeName="IconNameVisibility"
 id="IconNameVisibility"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;path
 d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;VisibilityIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="VolumeDownIcon" data-icon-safeName="IconNameVolumeDown"
 id="IconNameVolumeDown"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;VolumeDownIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="VolumeMuteIcon" data-icon-safeName="IconNameVolumeMute"
 id="IconNameVolumeMute"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path d="M7 9v6h4l5 5V4l-5 5H7z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;VolumeMuteIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="VolumeUpIcon" data-icon-safeName="IconNameVolumeUp"
 id="IconNameVolumeUp"&gt;
 &lt;figure&gt;
 &lt;svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"&gt;
 &lt;path
 d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z" /&gt;
 &lt;path d="M0 0h24v24H0z" fill="none" /&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;VolumeUpIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
 &lt;li class="icon-item" data-icon-theme-method="WarningIcon" data-icon-safeName="IconNameWarning" id="IconNameWarning"&gt;
 &lt;figure&gt;
 &lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
 width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve"&gt;
 &lt;g&gt;
 &lt;path d="M12,5.99L19.53,19H4.47L12,5.99 M12,2L1,21h22L12,2L12,2z" /&gt;
 &lt;polygon points="13,16 11,16 11,18 13,18 13,16 		" /&gt;
 &lt;polygon points="13,10 11,10 11,14 13,14 13,10 		" /&gt;
 &lt;/g&gt;
 &lt;/svg&gt;
 &lt;figcaption&gt;WarningIcon&lt;/figcaption&gt;
 &lt;/figure&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;h2 id="使用其他颜色集"&gt;使用其他颜色集&lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e5%85%b6%e4%bb%96%e9%a2%9c%e8%89%b2%e9%9b%86"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;每个图标都可以作为特定主题颜色的源使用各种公共帮助方法：&lt;/p&gt;</description></item><item><title>06. 居中布局 Center</title><link>https://www.poloxue.com/gofyne/docs/04-container/06-center/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/06-center/</guid><description>&lt;h1 id="居中布局"&gt;居中布局&lt;a class="anchor" href="#%e5%b1%85%e4%b8%ad%e5%b8%83%e5%b1%80"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;layout.CenterLayout&lt;/code&gt; 将其容器中的所有项目都组织在可用空间的中心。这些对象将按照它们被传递到容器的顺序绘制，最后传递的对象将被绘制在最顶部。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/theme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Center Layout&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;img&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewImageFromResource&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FyneLogo&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;img&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FillMode&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ImageFillOriginal&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Overlay&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Black&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewCenterLayout&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;img&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;中心布局使所有项目保持其最小大小，如果你希望扩展项目以填充空间，那么请参见&lt;a href="https://www.poloxue.com/gofyne/docs/04-container/07-max/"&gt;&lt;code&gt;layout.MaxLayout&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>06. 数字输入框 Entry</title><link>https://www.poloxue.com/gofyne/docs/08-extend/06-numerical-entry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/08-extend/06-numerical-entry/</guid><description>&lt;h2 id="数字输入框-entry"&gt;数字输入框 Entry&lt;a class="anchor" href="#%e6%95%b0%e5%ad%97%e8%be%93%e5%85%a5%e6%a1%86-entry"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在传统意义上，GUI程序使用回调来自定义控件的操作。Fyne不暴露插入自定义回调来捕获控件上的事件，但这并不是必需的。Go语言完全有足够的扩展性来实现这一点。&lt;/p&gt;
&lt;p&gt;我们可以简单地使用类型嵌入来扩展控件，使其只能输入数值。&lt;/p&gt;
&lt;p&gt;首先创建一个新的类型结构体，我们将其称为&lt;code&gt;numericalEntry&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如&lt;a href="https://developer.fyne.io/tutorial/extending-widgets"&gt;扩展现有控件&lt;/a&gt;中所提到的，我们遵循良好实践并创建一个构造函数，该函数扩展了&lt;code&gt;BaseWidget&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;newNumericalEntry&lt;/span&gt;() &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ExtendBaseWidget&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在我们需要让条目只接受数字。这可以通过重写&lt;code&gt;TypedRune(rune)&lt;/code&gt;方法来完成，这是&lt;code&gt;fyne.Focusable&lt;/code&gt;接口的一部分。这将允许我们拦截按键输入的标准处理，并只通过我们想要的输入。在此方法中，我们将使用条件检查rune是否匹配0到9之间的任何数字。如果是，我们将其委托给嵌入式条目的标准&lt;code&gt;TypedRune(rune)&lt;/code&gt;方法。如果不是，我们就忽略输入。此实现只允许输入整数，但如果需要，可以轻松扩展以检查将来的其他键。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;TypedRune&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;rune&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;9&amp;#39;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedRune&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果我们想要更新实现以允许输入小数，我们可以简单地将&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;,&lt;/code&gt;添加到允许的rune列表中（一些语言对于小数记数使用逗号而不是点）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;TypedRune&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;rune&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;) &lt;span style="color:#f92672"&gt;||&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;.&amp;#39;&lt;/span&gt; &lt;span style="color:#f92672"&gt;||&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;,&amp;#39;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedRune&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过这种方式，现在条目只允许用户在按键时输入数值。然而，粘贴快捷键仍然允许输入文本。为了解决这个问题，我们可以重写&lt;code&gt;TypedShortcut(fyne.Shortcut)&lt;/code&gt;方法，这是&lt;code&gt;fyne.Shortcutable&lt;/code&gt;接口的一部分。首先我们需要进行类型断言，检查给定的快捷键是否为&lt;code&gt;*fyne.ShortcutPaste&lt;/code&gt;类型。如果不是，我们可以将快捷键委托回嵌入式条目。如果是，我们检查剪贴板内容是否为数值，通过使用&lt;code&gt;strconv.ParseFloat()&lt;/code&gt;（如果你只想允许整数，&lt;code&gt;strconv.Atoi()&lt;/code&gt;就足够了），然后如果剪贴板内容可以无误地解析，再将快捷键委托回嵌入式条目。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Shortcut&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;paste&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt;.(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShortcutPaste&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; !&lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;paste&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Clipboard&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Content&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;_&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;err&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;strconv&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ParseFloat&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;64&lt;/span&gt;); &lt;span style="color:#a6e22e"&gt;err&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;作为额外福利，我们还可以确保移动操作系统打开数值键盘而不是默认键盘。这可以通过首先导入&lt;code&gt;fyne.io/fyne/v2/driver/mobile&lt;/code&gt;包并重写&lt;code&gt;mobile.Keyboardable&lt;/code&gt;接口的&lt;code&gt;Keyboard() mobile.KeyboardType&lt;/code&gt;方法来完成。在函数中，我们简单地返回&lt;code&gt;mobile.NumberKeyboard&lt;/code&gt;类型。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Keyboard&lt;/span&gt;() &lt;span style="color:#a6e22e"&gt;mobile&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyboardType&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;mobile&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NumberKeyboard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，结果代码可能如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;strconv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/driver/mobile&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;newNumericalEntry&lt;/span&gt;() &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ExtendBaseWidget&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;TypedRune&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;rune&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;) &lt;span style="color:#f92672"&gt;||&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;.&amp;#39;&lt;/span&gt; &lt;span style="color:#f92672"&gt;||&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;r&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;,&amp;#39;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedRune&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;r&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Shortcut&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;paste&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt;.(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShortcutPaste&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; !&lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;paste&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Clipboard&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Content&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;_&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;err&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;strconv&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ParseFloat&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;64&lt;/span&gt;); &lt;span style="color:#a6e22e"&gt;err&lt;/span&gt; &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;e&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;numericalEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;Keyboard&lt;/span&gt;() &lt;span style="color:#a6e22e"&gt;mobile&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyboardType&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;mobile&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NumberKeyboard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Numerical&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;newNumericalEntry&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;entry&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个示例展示了如何扩展Fyne的&lt;code&gt;Entry&lt;/code&gt;控件来创建一个只接受数值输入的&lt;code&gt;Entry&lt;/code&gt;控件，通过重写&lt;code&gt;TypedRune&lt;/code&gt;和&lt;code&gt;TypedShortcut&lt;/code&gt;方法，并通过重写&lt;code&gt;Keyboard&lt;/code&gt;方法为移动设备提供了数值键盘。&lt;/p&gt;</description></item><item><title>06. 矢量 Raster</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/06-raster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/06-raster/</guid><description>&lt;h1 id="矢量-raster"&gt;矢量 Raster&lt;a class="anchor" href="#%e7%9f%a2%e9%87%8f-raster"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;canvas.Raster&lt;/code&gt; 类似于图像，但在屏幕上为每个像素精确绘制一个点。这意味着，随着用户界面缩放或图像调整大小，将请求更多像素来填充空间。为此，我们使用一个 &lt;code&gt;Generator&lt;/code&gt; 函数，如此示例所示——它将用于返回每个像素的颜色。&lt;/p&gt;
&lt;p&gt;生成器函数可以基于像素（如此示例中我们为每个像素生成一个新的随机颜色）或基于完整图像。生成完整图像（使用 &lt;code&gt;canvas.NewRaster()&lt;/code&gt;）更高效，但有时直接控制像素更方便。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;math/rand&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Raster&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;raster&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewRasterWithPixels&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;_&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;_&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;h&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;int&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Color&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;RGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;R&lt;/span&gt;: uint8(&lt;span style="color:#a6e22e"&gt;rand&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Intn&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;255&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#a6e22e"&gt;G&lt;/span&gt;: uint8(&lt;span style="color:#a6e22e"&gt;rand&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Intn&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;255&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#a6e22e"&gt;B&lt;/span&gt;: uint8(&lt;span style="color:#a6e22e"&gt;rand&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Intn&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;255&lt;/span&gt;)), &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;0xff&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;// raster := canvas.NewRasterFromImage()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;raster&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;120&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您的像素数据存储在图像中，您可以通过 &lt;code&gt;NewRasterFromImage()&lt;/code&gt; 函数加载它，该函数将加载图像以在屏幕上精确显示像素。&lt;/p&gt;</description></item><item><title>06. 窗口 Window 处理</title><link>https://www.poloxue.com/gofyne/docs/01-started/06-windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/06-windows/</guid><description>&lt;h1 id="窗口-window-处理"&gt;窗口 Window 处理&lt;a class="anchor" href="#%e7%aa%97%e5%8f%a3-window-%e5%a4%84%e7%90%86"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;窗口是使用&lt;code&gt;App.NewWindow()&lt;/code&gt;创建的，并需要使用&lt;code&gt;Show()&lt;/code&gt;函数来显示。&lt;code&gt;fyne.Window&lt;/code&gt;上的辅助方法&lt;code&gt;ShowAndRun()&lt;/code&gt;允许你同时显示窗口并运行应用程序。&lt;/p&gt;
&lt;p&gt;默认情况下，窗口将通过检查&lt;code&gt;MinSize()&lt;/code&gt;函数（在后面的示例中会有更多介绍）来显示其内容的正确大小。你可以通过调用&lt;code&gt;Window.Resize()&lt;/code&gt;方法来设置更大的尺寸。这个方法接受一个&lt;code&gt;fyne.Size&lt;/code&gt;，其中包含使用设备独立像素（这意味着在不同设备上将是相同的）的宽度和高度，例如，要默认使窗口正方形，我们可以这样做：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，桌面环境可能有限制，导致窗口小于请求的尺寸。移动设备通常会忽略这一点，因为它们只以全屏显示。&lt;/p&gt;
&lt;p&gt;如果你希望显示第二个窗口，你只需调用&lt;code&gt;Show()&lt;/code&gt;函数。如果你想在应用程序启动时打开多个窗口，将&lt;code&gt;Window.Show()&lt;/code&gt;与&lt;code&gt;App.Run()&lt;/code&gt;分开也可能是有帮助的。下面的示例展示了如何在启动时加载两个窗口。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Show&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w2&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Larger&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w2&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;More content&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w2&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w2&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Show&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Run&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述应用程序将在两个窗口都关闭时退出。如果你的应用程序安排得当，一个窗口是主窗口，其他窗口是辅助视图，你可以设置一个窗口为“主窗口”，这样如果该窗口关闭，应用程序就会退出。要做到这一点，使用&lt;code&gt;Window&lt;/code&gt;上的&lt;code&gt;SetMaster()&lt;/code&gt;函数。&lt;/p&gt;
&lt;p&gt;窗口可以在任何时候被创建，我们可以改变上面的代码，使得第二个窗口（w2）的内容是一个打开新窗口的按钮。你也可以从更复杂的工作流中加载窗口，但要小心，因为新窗口通常会出现在当前活动内容之上。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;w2&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewButton&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Open new&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w3&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Third&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w3&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Third&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w3&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Show&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段描述说明了如何在Fyne应用程序中处理窗口，包括创建、显示、调整大小以及如何从代码中动态添加新窗口。&lt;/p&gt;</description></item><item><title>06. 进度条 ProgressBar</title><link>https://www.poloxue.com/gofyne/docs/05-widget/06-progressbar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/05-widget/06-progressbar/</guid><description>&lt;h1 id="进度条-progressbar"&gt;进度条 ProgressBar&lt;a class="anchor" href="#%e8%bf%9b%e5%ba%a6%e6%9d%a1-progressbar"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;进度条控件有两种形式，标准进度条向用户显示已达到的 &lt;code&gt;Value&lt;/code&gt;，从 &lt;code&gt;Min&lt;/code&gt; 到 &lt;code&gt;Max&lt;/code&gt;。默认最小值是 &lt;code&gt;0.0&lt;/code&gt;，最大值默认为 &lt;code&gt;1.0&lt;/code&gt;。要使用默认值，只需调用 &lt;code&gt;widget.NewProgressBar()&lt;/code&gt;。创建后，你可以设置 &lt;code&gt;Value&lt;/code&gt; 字段。&lt;/p&gt;
&lt;p&gt;要设置自定义范围，你可以手动设置 &lt;code&gt;Min&lt;/code&gt; 和 &lt;code&gt;Max&lt;/code&gt; 字段。标签将始终显示完成百分比。&lt;/p&gt;
&lt;p&gt;进度控件的另一种形式是无限进度条。此版本仅通过将条的一部分从左向右移动然后再移动回来，简单地显示一些活动正在进行中。使用 &lt;code&gt;widget.NewProgressBarInfinite()&lt;/code&gt; 创建此版本，并且一旦显示就会开始动画。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;进度条控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;progress&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewProgressBar&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;infinite&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewProgressBarInfinite&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;go&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0.0&lt;/span&gt;; &lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;=&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;1.0&lt;/span&gt;; &lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#f92672"&gt;+=&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0.1&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Sleep&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Millisecond&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;250&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;progress&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetValue&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewVBox&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;progress&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;infinite&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>07. 工具栏 Toolbar</title><link>https://www.poloxue.com/gofyne/docs/05-widget/07-toolbar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/05-widget/07-toolbar/</guid><description>&lt;h1 id="工具栏-toolbar"&gt;工具栏 Toolbar&lt;a class="anchor" href="#%e5%b7%a5%e5%85%b7%e6%a0%8f-toolbar"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;工具栏控件使用图标创建一行动作按钮来表示每个操作。&lt;code&gt;widget.NewToolbar(...)&lt;/code&gt; 构造函数接受一系列 &lt;code&gt;widget.ToolbarItem&lt;/code&gt; 参数。内置的工具栏项目类型有动作，分隔符和空格器。&lt;/p&gt;
&lt;p&gt;最常用的项目是动作，使用 &lt;code&gt;widget.NewToolbarAction(..)&lt;/code&gt; 函数创建。动作有两个参数，第一个是要绘制的图标资源，后一个是点击时调用的 &lt;code&gt;func()&lt;/code&gt;。这样创建了一个标准的工具栏按钮。&lt;/p&gt;
&lt;p&gt;你可以使用 &lt;code&gt;widget.NewToolbarSeparator()&lt;/code&gt; 在工具栏中的项目之间创建一个小分隔符（通常是一个细的垂直线）。最后，你可以使用 &lt;code&gt;widget.NewToolbarSpacer()&lt;/code&gt; 在元素之间创建一个灵活的空间。这最适合用于右对齐列表中的工具栏项目。&lt;/p&gt;
&lt;p&gt;工具栏应始终位于内容区域的顶部，所以通常使用 &lt;code&gt;layout.BorderLayout&lt;/code&gt; 将其添加到 &lt;code&gt;fyne.Container&lt;/code&gt; 中，以便将其与其他内容对齐。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/theme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;工具栏控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;toolbar&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbar&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbarAction&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;DocumentCreateIcon&lt;/span&gt;(), &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;新建文档&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		}),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbarSeparator&lt;/span&gt;(),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbarAction&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ContentCutIcon&lt;/span&gt;(), &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {}),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbarAction&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ContentCopyIcon&lt;/span&gt;(), &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {}),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbarAction&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ContentPasteIcon&lt;/span&gt;(), &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {}),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbarSpacer&lt;/span&gt;(),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewToolbarAction&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;HelpIcon&lt;/span&gt;(), &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;显示帮助&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		}),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewBorder&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;toolbar&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;nil&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;内容&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>07. 快捷键</title><link>https://www.poloxue.com/gofyne/docs/02-explore/07-shortcuts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/07-shortcuts/</guid><description>&lt;h1 id="快捷键"&gt;快捷键&lt;a class="anchor" href="#%e5%bf%ab%e6%8d%b7%e9%94%ae"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;快捷键是可以通过键盘组合键或上下文菜单触发的常见任务。快捷键，很像键盘事件，可以附加到一个聚焦的元素上，或者在&lt;code&gt;Canvas&lt;/code&gt;上注册，以便在&lt;code&gt;Window&lt;/code&gt;中始终可用。&lt;/p&gt;
&lt;h2 id="在canvas中注册"&gt;在Canvas中注册&lt;a class="anchor" href="#%e5%9c%a8canvas%e4%b8%ad%e6%b3%a8%e5%86%8c"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;有许多标准的快捷键定义（如&lt;code&gt;fyne.ShortcutCopy&lt;/code&gt;），它们连接到标准键盘快捷键和右键菜单。添加新&lt;code&gt;Shortcut&lt;/code&gt;的第一步是定义快捷键。对于大多数用途，这将是一个键盘触发的快捷键，这是一个桌面扩展。为此，我们使用&lt;code&gt;desktop.CustomShortcut&lt;/code&gt;，例如，要使用Tab键和Control修饰符，你可能会做如下操作：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;ctrlTab&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;desktop&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CustomShortcut&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;KeyName&lt;/span&gt;: &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyTab&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;Modifier&lt;/span&gt;: &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyModifierControl&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;ctrlAltTab&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;desktop&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CustomShortcut&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;KeyName&lt;/span&gt;: &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyTab&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;Modifier&lt;/span&gt;: &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyModifierControl&lt;/span&gt; | &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyModifierAlt&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，这个快捷键可以重复使用，所以你可以将它附加到菜单或其他项上。在这个示例中，我们希望它始终可用，所以我们将其注册到我们窗口的&lt;code&gt;Canvas&lt;/code&gt;上，如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;ctrlTab&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;amp;&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;desktop&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CustomShortcut&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;KeyName&lt;/span&gt;: &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyTab&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;Modifier&lt;/span&gt;: &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;KeyModifierControl&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Canvas&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;AddShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;ctrlTab&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Shortcut&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;我们按下了Ctrl+Tab&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Canvas&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;AddShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;ctrlAltTab&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;shortcut&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Shortcut&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;我们按下了Ctrl+Alt+Tab&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如你所见，在这种方式注册快捷键有两个部分 - 传递快捷键定义以及回调函数。如果用户输入键盘快捷键，那么函数将被调用并打印输出。&lt;/p&gt;
&lt;p&gt;快捷键只能与修饰键结合使用。为了响应没有修饰键的键盘输入，请使用&lt;code&gt;canvas.OnTypedRune&lt;/code&gt;或&lt;code&gt;canvas.OnTypedKey&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id="在输入框中添加快捷键"&gt;在输入框中添加快捷键&lt;a class="anchor" href="#%e5%9c%a8%e8%be%93%e5%85%a5%e6%a1%86%e4%b8%ad%e6%b7%bb%e5%8a%a0%e5%bf%ab%e6%8d%b7%e9%94%ae"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;当当前项目聚焦时，让快捷键仅适用也是有帮助的。这种方法可以用于任何可聚焦的控件，并通过扩展该控件并添加&lt;code&gt;TypedShortcut&lt;/code&gt;处理器来管理。这和添加键处理器很像，不同之处在于传入的值将是一个&lt;code&gt;fyne.Shortcut&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myEntry&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;myEntry&lt;/span&gt;) &lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;s&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Shortcut&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;_&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;s&lt;/span&gt;.(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;desktop&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;CustomShortcut&lt;/span&gt;); !&lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TypedShortcut&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;输入了快捷键:&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从上面的摘录中你可以看到如何实现一个&lt;code&gt;TypedShortcut&lt;/code&gt;处理器。在这个函数内部，你应该检查快捷键是否为之前使用的自定义类型。如果快捷键是标准的，调用原始快捷键处理器（如果控件有一个）是个好主意。
完成这些检查后，你可以将快捷键与你正在处理的各种类型进行比较（如果有多个）。&lt;/p&gt;</description></item><item><title>07. 最大布局 Max</title><link>https://www.poloxue.com/gofyne/docs/04-container/07-max/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/07-max/</guid><description>&lt;h1 id="最大布局-max"&gt;最大布局 Max&lt;a class="anchor" href="#%e6%9c%80%e5%a4%a7%e5%b8%83%e5%b1%80-max"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;layout.MaxLayout&lt;/code&gt;是最简单的布局，它将容器中的所有项目设置为与容器相同的大小。这通常在一般的容器中不太有用，但在组合控件时可能适用。&lt;/p&gt;
&lt;p&gt;最大布局会扩展容器，使其至少与最大项目的最小大小相同。对象将按照它们传递给容器的顺序被绘制，最后传递的对象将被绘制在最上面。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/layout&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/theme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Max Layout&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;img&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewImageFromResource&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;theme&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FyneLogo&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;text&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Overlay&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Black&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;layout&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewMaxLayout&lt;/span&gt;(), &lt;span style="color:#a6e22e"&gt;img&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;text&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>07. 测试 GUI 应用程序</title><link>https://www.poloxue.com/gofyne/docs/01-started/07-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/07-testing/</guid><description>&lt;h1 id="测试-gui-应用程序"&gt;测试 GUI 应用程序&lt;a class="anchor" href="#%e6%b5%8b%e8%af%95-gui-%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;一个好的测试套件的一部分是能够快速编写测试并定期运行它们。Fyne的API旨在使应用程序测试变得简单。通过将组件逻辑与其渲染定义分离，我们可以在不实际显示它们的情况下加载应用程序，并完全测试其功能。&lt;/p&gt;
&lt;h3 id="示例"&gt;示例&lt;a class="anchor" href="#%e7%a4%ba%e4%be%8b"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我们可以通过扩展我们的&lt;a href="https://www.poloxue.com/gofyne/docs/01-started/02-hello/"&gt;Hello World&lt;/a&gt;应用程序来演示单元测试，包括为用户输入他们的名字以便问候的空间。我们首先更新用户界面，使其包含两个元素：一个用于问候的&lt;code&gt;Label&lt;/code&gt;和一个用于输入名字的&lt;code&gt;Entry&lt;/code&gt;。我们使用&lt;code&gt;container.NewVBox&lt;/code&gt;（一个垂直盒子容器）将它们一个接一个地显示。更新后的用户界面代码如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;makeUI&lt;/span&gt;() (&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Label&lt;/span&gt;, &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewEntry&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello Person&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewVBox&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;makeUI&lt;/span&gt;()))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了测试这个输入行为，我们创建了一个新文件（以 &lt;code&gt;_test.go&lt;/code&gt; 结尾，将其标记为测试），定义了一个&lt;code&gt;TestGreeter&lt;/code&gt;函数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;testing&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;TestGreeting&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;t&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;testing&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;T&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以添加一个验证初始状态的初始测试，为此我们测试从&lt;code&gt;makeUI&lt;/code&gt;返回的&lt;code&gt;Label&lt;/code&gt;的&lt;code&gt;Text&lt;/code&gt;字段，如果它不正确，则错误测试。将以下代码添加到测试方法中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;out&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;in&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;makeUI&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;out&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Text&lt;/span&gt; &lt;span style="color:#f92672"&gt;!=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;t&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Error&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Incorrect initial greeting&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个测试将通过 - 接下来我们添加到测试中以验证问候者。我们使用Fyne的&lt;code&gt;fyne.io/fyne/v2/test&lt;/code&gt;包来帮助测试场景，调用&lt;code&gt;test.Type&lt;/code&gt;来模拟用户输入。以下测试代码将检查当输入用户姓名时输出是否更新（也确保添加了导入）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;test&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Type&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;in&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;Andy&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;out&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Text&lt;/span&gt; &lt;span style="color:#f92672"&gt;!=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;Hello Andy!&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;t&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Error&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Incorrect user greeting&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以使用&lt;code&gt;go test .&lt;/code&gt;运行所有这些测试 - 就像任何其他测试一样。这样做，你现在会看到一个失败 - 因为我们没有添加问候逻辑。将&lt;code&gt;makeUI&lt;/code&gt;函数更新为以下代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;makeUI&lt;/span&gt;() (&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Label&lt;/span&gt;, &lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Entry&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;out&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;in&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewEntry&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;in&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;OnChanged&lt;/span&gt; = &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;out&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetText&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello &amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;+&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;content&lt;/span&gt; &lt;span style="color:#f92672"&gt;+&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;!&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;out&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样做，你会看到测试现在通过了。你也可以运行完整的应用程序（使用&lt;code&gt;go run .&lt;/code&gt;），并且当你在&lt;code&gt;Entry&lt;/code&gt;字段中输入名字时，看到问候更新。还要注意，所有这些测试都是在不显示窗口或窃取你的鼠标的情况下运行的 - 这是Fyne单元测试设置的另一个好处。&lt;/p&gt;</description></item><item><title>07. 渐变 Gradient</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/07-gradient/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/07-gradient/</guid><description>&lt;h1 id="渐变-gradient"&gt;渐变 Gradient&lt;a class="anchor" href="#%e6%b8%90%e5%8f%98-gradient"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;最后一个画布原始类型是 Gradient，可用作 &lt;code&gt;canvas.LinearGradient&lt;/code&gt; 和 &lt;code&gt;canvas.RadialGradient&lt;/code&gt;，用于绘制从一种颜色到另一种颜色的渐变，有多种模式。你可以使用 &lt;code&gt;NewHorizontalGradient()&lt;/code&gt;、&lt;code&gt;NewVerticalGradient()&lt;/code&gt; 或 &lt;code&gt;NewRadialGradient()&lt;/code&gt; 创建渐变。&lt;/p&gt;
&lt;p&gt;要创建一个渐变，你需要一个起始颜色和结束颜色——画布会计算其中的每一个颜色。在这个示例中，我们使用 &lt;code&gt;color.Transparent&lt;/code&gt; 来展示如何使用渐变（或任何其他类型）通过透明度值在背后的内容上实现半透明效果。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;渐变&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;gradient&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewHorizontalGradient&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;White&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Transparent&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//gradient := canvas.NewRadialGradient(color.White, color.Transparent)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;gradient&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>08. Tab 布局 AppTabs</title><link>https://www.poloxue.com/gofyne/docs/04-container/08-apptabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/04-container/08-apptabs/</guid><description>&lt;h1 id="tab-布局-apptabs"&gt;Tab 布局 AppTabs&lt;a class="anchor" href="#tab-%e5%b8%83%e5%b1%80-apptabs"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;AppTabs 容器用于允许用户在不同的内容面板之间切换。标签页要么只有文本，要么是文本和图标。建议不要混合使用一些标签页有图标而另一些没有图标的情况。使用 &lt;code&gt;container.NewAppTabs(...)&lt;/code&gt; 创建标签容器，并传递 &lt;code&gt;container.TabItem&lt;/code&gt; 项（可以使用 &lt;code&gt;container.NewTabItem(...)&lt;/code&gt; 创建）。&lt;/p&gt;
&lt;p&gt;可以通过设置标签的位置来配置标签容器，位置选项包括 &lt;code&gt;container.TabLocationTop&lt;/code&gt;、&lt;code&gt;container.TabLocationBottom&lt;/code&gt;、&lt;code&gt;container.TabLocationLeading&lt;/code&gt; 和 &lt;code&gt;container.TabLocationTrailing&lt;/code&gt;。默认位置是顶部。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//&amp;#34;fyne.io/fyne/v2/theme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;myApp&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;TabContainer 控件&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;tabs&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewAppTabs&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewTabItem&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;标签 1&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;你好&amp;#34;&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewTabItem&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;标签 2&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;世界！&amp;#34;&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#75715e"&gt;//tabs.Append(container.NewTabItemWithIcon(&amp;#34;首页&amp;#34;, theme.HomeIcon(), widget.NewLabel(&amp;#34;首页标签&amp;#34;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;tabs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetTabLocation&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;TabLocationLeading&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;tabs&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;myWindow&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在移动设备上加载时，可能会忽略标签位置。在纵向方向，前导或尾随位置将被更改为底部。在横向方向，顶部或底部位置将移至前导。&lt;/p&gt;</description></item><item><title>08. 偏好设置</title><link>https://www.poloxue.com/gofyne/docs/02-explore/08-preferences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/08-preferences/</guid><description>&lt;h1 id="偏好设置"&gt;偏好设置&lt;a class="anchor" href="#%e5%81%8f%e5%a5%bd%e8%ae%be%e7%bd%ae"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;为应用程序存储用户配置和值是应用开发者的常见任务，但在多个平台上实现它可能既乏味又耗时。为了简化这个过程，Fyne 提供了一个 API，用于以清晰且易于理解的方式在文件系统上存储值，同时为您处理复杂的部分。&lt;/p&gt;
&lt;p&gt;让我们从 API 的设置开始。它是 &lt;a href="https://pkg.go.dev/fyne.io/fyne/v2?tab=doc#Preferences"&gt;Preferences&lt;/a&gt; 接口的一部分，其中存在用于 Bool、Float、Int 和 String 值的存储和加载功能。它们每个都包含三个不同的函数，一个用于加载，一个带有回退值的加载，最后一个用于存储值。下面为 String 类型展示了这三个函数及其行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// String 查找键的字符串值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;String&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;key&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// StringWithFallback 查找字符串值，并在未找到时返回给定的回退值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;StringWithFallback&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;key&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;fallback&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// SetString 为给定键保存一个字符串值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;SetString&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;key&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;value&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这些函数可以通过创建的应用变量并调用其 &lt;code&gt;Preferences()&lt;/code&gt; 方法来访问。请注意，创建带有唯一 ID 的应用是必要的（通常像反转的 url 那样）。这意味着应用程序需要使用 &lt;code&gt;app.NewWithID()&lt;/code&gt; 来创建，以拥有自己存储值的位置。它大致可以像下面的示例那样使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWithID&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;com.example.tutorial.preferences&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;[&lt;span style="color:#f92672"&gt;...&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Preferences&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;SetBool&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Boolean&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;number&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Preferences&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;IntWithFallback&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;ApplicationLuckyNumber&amp;#34;&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;21&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;expression&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Preferences&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;String&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;RegularExpression&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;[&lt;span style="color:#f92672"&gt;...&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了展示这一点，我们将构建一个简单的小应用，它总是在设定的时间后关闭。这个超时应该是用户可更改的，并在应用程序的下一次启动时应用。&lt;/p&gt;
&lt;p&gt;让我们首先创建一个名为 &lt;code&gt;timeout&lt;/code&gt; 的变量，用于以 &lt;code&gt;time.Duration&lt;/code&gt; 的形式存储时间。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;var&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;timeout&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Duration&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，我们可以创建一个选择控件，让用户从几个预定义的字符串中选择超时，然后将超时乘以字符串所对应的秒数。最后，使用 &lt;code&gt;&amp;quot;AppTimeout&amp;quot;&lt;/code&gt; 键将字符串值设置为选定的值。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;timeoutSelector&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSelect&lt;/span&gt;([]&lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;{&lt;span style="color:#e6db74"&gt;&amp;#34;10秒&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;30秒&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;1分钟&amp;#34;&lt;/span&gt;}, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;selected&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;string&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;switch&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;selected&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;case&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;10秒&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;timeout&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;10&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;case&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;30秒&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;timeout&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;30&lt;/span&gt; &lt;span style="color:#f92672"&gt;*&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;case&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;1分钟&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;timeout&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Minute&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Preferences&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;SetString&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;AppTimeout&amp;#34;&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;selected&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，我们想要获取设置的值，如果不存在，我们想要有一个回退，将超时设置为最短的一个，以节省用户等待时的时间。这可以通过将 &lt;code&gt;timeoutSelector&lt;/code&gt; 的选定值设置为加载的值或回退值（如果是这种情况）来完成。通过这种方式，选择控件中的代码将针对该特定值运行。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;timeoutSelector&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetSelected&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Preferences&lt;/span&gt;().&lt;span style="color:#a6e22e"&gt;StringWithFallback&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;AppTimeout&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;10秒&amp;#34;&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后一部分将只是有一个函数，在一个单独的 goroutine 中启动，并在选定的超时后告诉应用退出。&lt;/p&gt;</description></item><item><title>08. 动画 Animation</title><link>https://www.poloxue.com/gofyne/docs/03-canvas/08-animation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/03-canvas/08-animation/</guid><description>&lt;h1 id="动画-animation"&gt;动画 Animation&lt;a class="anchor" href="#%e5%8a%a8%e7%94%bb-animation"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne 包含一个动画框架，允许您在一段时间内平滑地过渡画布属性从一个值到另一个值。动画可以包含任何代码，这意味着可以管理任何类型的对象属性，但是内置了尺寸、位置和颜色的动画。&lt;/p&gt;
&lt;p&gt;动画通常使用画布包的内置助手创建，例如 &lt;code&gt;NewSizeAnimation&lt;/code&gt;，并在创建的动画上调用 &lt;code&gt;Start()&lt;/code&gt;。您可以设置动画以重复或自动反转，如下所示。&lt;/p&gt;
&lt;p&gt;首先让我们看看逐渐改变 &lt;code&gt;Rectangle&lt;/code&gt; 填充颜色的颜色动画。在以下代码示例中，我们将矩形设置为窗口的内容，如之前的代码示例所做的那样。最大的不同是我们在显示窗口之前启动的动画。使用 &lt;code&gt;NewColorRGBAAnimation&lt;/code&gt; 创建动画，它将在指定的 &lt;code&gt;red&lt;/code&gt; 状态到 &lt;code&gt;blue&lt;/code&gt; 状态之间过渡颜色通道，并将在指定的持续时间（2秒）内完成。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;image/color&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/canvas&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;obj&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewRectangle&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Black&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;obj&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;50&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;50&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;container&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWithoutLayout&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;obj&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;red&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NRGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;R&lt;/span&gt;:&lt;span style="color:#ae81ff"&gt;0xff&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;:&lt;span style="color:#ae81ff"&gt;0xff&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;blue&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NRGBA&lt;/span&gt;{&lt;span style="color:#a6e22e"&gt;B&lt;/span&gt;:&lt;span style="color:#ae81ff"&gt;0xff&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;A&lt;/span&gt;:&lt;span style="color:#ae81ff"&gt;0xff&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewColorRGBAAnimation&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;red&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;blue&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;&lt;span style="color:#f92672"&gt;*&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;2&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;c&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;color&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Color&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;obj&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;FillColor&lt;/span&gt; = &lt;span style="color:#a6e22e"&gt;c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Refresh&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;obj&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}).&lt;span style="color:#a6e22e"&gt;Start&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Resize&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewSize&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;250&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;50&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetPadded&lt;/span&gt;(&lt;span style="color:#66d9ef"&gt;false&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也可以同时对多个属性进行动画处理。如果您仔细观察，您会看到我们将矩形添加到了没有布局的容器中——这意味着我们可以手动移动或调整对象的大小。让我们添加一个新的位置动画，它将在窗口中移动 &lt;code&gt;Rectangle&lt;/code&gt;，并自动反转。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;move&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;canvas&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewPositionAnimation&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewPos&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;), &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewPos&lt;/span&gt;(&lt;span style="color:#ae81ff"&gt;200&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;), &lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;obj&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Move&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;move&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;AutoReverse&lt;/span&gt; = &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;move&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Start&lt;/span&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因为 &lt;code&gt;CanvasObject&lt;/code&gt; 的 &lt;code&gt;Move()&lt;/code&gt; 函数期望一个 &lt;code&gt;fyne.Position&lt;/code&gt; 参数，位置动画回调也是如此，我们可以简单地传递方法名称而不是创建一个新函数。如果您在第一个动画下面添加上面的代码，您会看到对象在改变颜色的同时跨越窗口移动！&lt;/p&gt;</description></item><item><title>08. 打包桌面应用</title><link>https://www.poloxue.com/gofyne/docs/01-started/08-packaging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/08-packaging/</guid><description>&lt;h1 id="打包桌面应用"&gt;打包桌面应用&lt;a class="anchor" href="#%e6%89%93%e5%8c%85%e6%a1%8c%e9%9d%a2%e5%ba%94%e7%94%a8"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;将图形应用程序打包以供分发可能会很复杂。图形应用程序通常有与它们关联的图标和元数据，以及集成到每个环境所需的特定格式。Windows可执行文件需要嵌入图标，macOS应用是捆绑包，在Linux中有各种应该安装的元数据文件。多麻烦啊！&lt;/p&gt;
&lt;p&gt;幸运的是，“fyne”应用有一个“package”命令可以自动处理这一切。只需指定目标操作系统和任何所需的元数据（如图标），就会生成适当的包。对于.icns或.ico图标转换将自动完成，所以只需提供.png文件 :)。你需要做的就是已经为目标平台构建了应用程序&amp;hellip;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;go install fyne.io/fyne/v2/cmd/fyne@latest
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os darwin -icon myapp.png&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你使用的是Go的旧版本（&amp;lt;1.16），你应该使用&lt;code&gt;go get&lt;/code&gt;安装fyne&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;go get fyne.io/fyne/v2/cmd/fyne
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os darwin -icon myapp.png&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将创建myapp.app，一个完整的捆绑结构，用于分发给macOS用户。然后你也可以为Linux和Windows版本构建&amp;hellip;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os linux -icon myapp.png
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os windows -icon myapp.png&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这些命令将创建：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;myapp.tar.gz，包含从usr/local/开始的文件夹结构，Linux用户可以将其展开到他们的系统根目录。&lt;/li&gt;
&lt;li&gt;myapp.exe（在第二次构建后，这是Windows包所需的）将嵌入图标和应用元数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你只想在你的电脑上安装桌面应用程序，那么你可以使用有用的install子命令。例如，要将你当前的应用程序系统范围内安装，你可以简单地执行以下操作：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne install -icon myapp.png&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所有这些命令也支持默认图标文件&lt;code&gt;Icon.png&lt;/code&gt;，这样你就可以避免每次执行时键入参数。从Fyne 2.1开始，还有一个&lt;a href="https://www.poloxue.com/gofyne/docs/01-started/11-metadata/"&gt;元数据文件&lt;/a&gt;，你可以为你的项目设置默认选项。&lt;/p&gt;
&lt;p&gt;当然，如果你愿意，你仍然可以使用标准的Go工具运行你的应用程序。&lt;/p&gt;</description></item><item><title>09. 打包移动应用</title><link>https://www.poloxue.com/gofyne/docs/01-started/09-mobile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/09-mobile/</guid><description>&lt;h1 id="打包移动应用"&gt;打包移动应用&lt;a class="anchor" href="#%e6%89%93%e5%8c%85%e7%a7%bb%e5%8a%a8%e5%ba%94%e7%94%a8"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;你的Fyne应用代码可以直接作为移动应用运行，就像它在桌面上做的那样。然而，将代码打包用于分发就复杂一些。这个页面将探索正是为了做到这一点而将你的应用带到iOS和Android上的过程。&lt;/p&gt;
&lt;p&gt;首先，你需要为移动打包安装更多的开发工具。对于Android构建，你必须安装Android SDK和NDK，并设置适当的环境，以便工具（如&lt;code&gt;adb&lt;/code&gt;）可以在命令行中找到。要构建iOS应用，你需要在你的macOS电脑上安装Xcode以及命令行工具可选包。&lt;/p&gt;
&lt;p&gt;一旦你有了一个工作的开发环境，打包就很简单了。要为Android和iOS构建应用程序，以下命令将为你完成所有操作。确保有一个唯一的应用程序标识符，因为在你首次发布后更改这些是不明智的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os android -appID com.example.myapp -icon mobileIcon.png
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os ios -appID com.example.myapp -icon mobileIcon.png&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这些命令完成后（首次编译可能需要一些时间），你将在你的目录中看到两个新文件，&lt;code&gt;myapp.apk&lt;/code&gt;和&lt;code&gt;myapp.app&lt;/code&gt;。你会看到后者与darwin应用程序捆绑包同名 - 不要将它们混淆，因为它们在另一个平台上不会工作。&lt;/p&gt;
&lt;p&gt;要在你的手机或模拟器上安装Android应用，只需调用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;adb install myapp.apk&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于iOS，要在设备上安装，打开Xcode并在“Window”菜单中选择“Devices and Simulators”菜单项。然后找到你的手机并将&lt;code&gt;myapp.app&lt;/code&gt;图标拖到你的应用列表上。&lt;/p&gt;
&lt;p&gt;如果你想在模拟器上安装，请确保使用&lt;code&gt;iossimulator&lt;/code&gt;而不是&lt;code&gt;ios&lt;/code&gt;打包你的应用程序&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os iossimulator -appID com.example.myapp -icon mobileIcon.png&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后，你可以如下使用命令行工具：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;xcrun simctl install booted myapp.app&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这些步骤介绍了如何为iOS和Android设备打包和安装Fyne应用程序，从而使Fyne成为开发跨平台移动应用的强大工具。&lt;/p&gt;</description></item><item><title>09. 系统托盘菜单</title><link>https://www.poloxue.com/gofyne/docs/02-explore/09-systray/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/09-systray/</guid><description>&lt;h1 id="添加系统托盘菜单"&gt;添加系统托盘菜单&lt;a class="anchor" href="#%e6%b7%bb%e5%8a%a0%e7%b3%bb%e7%bb%9f%e6%89%98%e7%9b%98%e8%8f%9c%e5%8d%95"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;自 v2.2.0 版本以来，Fyne 内置了对系统托盘菜单的支持。此功能在 macOS、Windows 和 Linux 计算机上显示一个图标，当点击时，会弹出由应用程序指定的菜单。&lt;/p&gt;
&lt;p&gt;由于这是一个特定于桌面的功能，我们首先必须进行运行时检查，以确认应用程序正在桌面模式下运行。为此，我们进行 Go 类型断言以获取对桌面功能的引用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;desk&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.(&lt;span style="color:#a6e22e"&gt;desktop&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;App&lt;/span&gt;); &lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 &lt;code&gt;ok&lt;/code&gt; 变量为真，则我们可以使用标准 Fyne 菜单 API 设置菜单，你可能之前在 &lt;code&gt;Window.SetMainMenu&lt;/code&gt; 中使用过这个 API。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewMenu&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;MyApp&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewMenuItem&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Show&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Println&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;点击了显示&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			}))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;desk&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetSystemTrayMenu&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将此代码添加到应用程序的设置中，运行应用程序，你会看到系统托盘中显示了一个 Fyne 图标。当你点击它时，会出现一个包含“显示”和“退出”的菜单。&lt;/p&gt;
&lt;p&gt;默认图标是 Fyne 标志，你可以通过&lt;a href="https://www.poloxue.com/gofyne/docs/01-started/11-metadata/"&gt;应用元数据&lt;/a&gt;更改这个设置，或者通过 &lt;code&gt;App.SetIcon&lt;/code&gt; 或直接使用 &lt;code&gt;desk.SetSystemTrayIcon&lt;/code&gt; 为系统托盘设置应用图标。&lt;/p&gt;
&lt;h2 id="管理窗口生命周期"&gt;管理窗口生命周期&lt;a class="anchor" href="#%e7%ae%a1%e7%90%86%e7%aa%97%e5%8f%a3%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;默认情况下，当你关闭所有窗口时 Fyne 应用将会退出，这可能不是你希望的系统托盘应用的行为。要覆盖此行为，你可以使用 &lt;code&gt;Window.SetCloseIntercept&lt;/code&gt; 功能来覆盖窗口关闭时的操作。在下面的示例中，我们通过调用 &lt;code&gt;Window.Hide()&lt;/code&gt; 来隐藏窗口而不是关闭它。在第一次显示窗口之前添加这个。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetCloseIntercept&lt;/span&gt;(&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Hide&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;隐藏窗口的好处是你可以简单地再次使用 &lt;code&gt;Window.Show()&lt;/code&gt; 显示它，如果需要第二次使用相同的内容，这比创建一个新窗口更高效。我们更新之前创建的菜单以显示上面隐藏的窗口。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewMenuItem&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Show&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Show&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="完整的应用程序"&gt;完整的应用程序&lt;a class="anchor" href="#%e5%ae%8c%e6%95%b4%e7%9a%84%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这就是使用 Fyne 设置系统托盘菜单的全部内容！本教程的完整代码如下所示。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/driver/desktop&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;SysTray&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;desk&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.(&lt;span style="color:#a6e22e"&gt;desktop&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;App&lt;/span&gt;); &lt;span style="color:#a6e22e"&gt;ok&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewMenu&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;MyApp&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;fyne&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewMenuItem&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Show&amp;#34;&lt;/span&gt;, &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;				&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Show&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			}))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;desk&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetSystemTrayMenu&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;m&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabel&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Fyne 系统托盘&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetCloseIntercept&lt;/span&gt;(&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Hide&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>10. 在浏览器中运行</title><link>https://www.poloxue.com/gofyne/docs/01-started/10-webapp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/10-webapp/</guid><description>&lt;h1 id="在浏览器中运行"&gt;在浏览器中运行&lt;a class="anchor" href="#%e5%9c%a8%e6%b5%8f%e8%a7%88%e5%99%a8%e4%b8%ad%e8%bf%90%e8%a1%8c"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne应用程序也可以通过标准的网络浏览器在网络上运行！由于不同引擎的标准和优势各异，这稍微复杂一些。&lt;/p&gt;
&lt;p&gt;使用Fyne创建的网络应用将提供一个WASM运行时以及一个JavaScript代码包，这使得生成的网页可以查看当前浏览器并选择适合其优势的实现方式。这在大多数系统上提供了极好的用户体验。&lt;/p&gt;
&lt;p&gt;为了准备你的应用通过网络使用，我们再次使用“fyne”命令行应用，它有一个用于快速测试的“serve”命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;go install fyne.io/fyne/v2/cmd/fyne@latest
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne serve&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你会看到，过了一会儿，一个网页服务器已经在8080端口启动。只需在你的网络浏览器中打开https://localhost:8080，你就可以使用你的应用了！&lt;/p&gt;
&lt;p&gt;这个过程中使用的工具对Go版本非常敏感，因此可能会出现与版本不匹配相关的错误。如果你使用的是1.18版之后的Go，你应该确保你有1.18版的副本，并在你的环境中引用它，比如（对于一个基于&lt;a href="https://brew.sh"&gt;homebrew&lt;/a&gt;的安装）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;export GOPHERJS_GOROOT&lt;span style="color:#f92672"&gt;=&lt;/span&gt;/opt/homebrew/Cellar/go@1.18/1.18.10/libexec&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以在&lt;a href="https://github.com/gopherjs/gopherjs"&gt;GopherJS&lt;/a&gt;文档上了解更多相关信息。&lt;/p&gt;
&lt;h3 id="打包用于网络分发"&gt;打包用于网络分发&lt;a class="anchor" href="#%e6%89%93%e5%8c%85%e7%94%a8%e4%ba%8e%e7%bd%91%e7%bb%9c%e5%88%86%e5%8f%91"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fyne serve&lt;/code&gt;命令非常适合本地测试，但就像其他平台一样，你也会想要能够分发你的应用。为了准备上传的文件，就像常规的&lt;a href="https://www.poloxue.com/gofyne/docs/01-started/08-packaging/"&gt;打包&lt;/a&gt;一样，使用&lt;code&gt;fyne package&lt;/code&gt;命令。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os web&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你也可以选择只为WASM或JavaScript打包，而不是自动检测设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os wasm
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fyne package -os js&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="演示"&gt;演示&lt;a class="anchor" href="#%e6%bc%94%e7%a4%ba"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;你可以访问&lt;a href="https://demo.fyne.io/"&gt;demo.fyne.io&lt;/a&gt;，在任何设备上测试Fyne应用的实际运行情况。&lt;/p&gt;
&lt;h3 id="限制"&gt;限制&lt;a class="anchor" href="#%e9%99%90%e5%88%b6"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;截至v2.4.0版本发布，网络驱动程序还没有完全完成，所以你的应用可能无法使用以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多窗口（但对话框都可以在当前窗口内部工作）&lt;/li&gt;
&lt;li&gt;文档和偏好设置的存储&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些问题正在被解决，并将在未来的版本中得到解决。&lt;/p&gt;</description></item><item><title>10. 数据绑定</title><link>https://www.poloxue.com/gofyne/docs/02-explore/10-binding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/10-binding/</guid><description>&lt;h1 id="数据绑定"&gt;数据绑定&lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%bb%91%e5%ae%9a"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;数据绑定在 Fyne v2.0.0 中引入，使得将许多控件连接到随时间更新的数据源变得更加容易。&lt;code&gt;data/binding&lt;/code&gt; 包提供了许多有用的绑定，可以管理应用中使用的大多数标准类型。数据绑定可以使用绑定 API 管理（例如 &lt;code&gt;NewString&lt;/code&gt;），也可以连接到外部数据项（如 &lt;code&gt;BindInt(*int)&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;支持绑定的控件通常有一个 &lt;code&gt;...WithData&lt;/code&gt; 构造器，在创建控件时设置绑定。你也可以调用 &lt;code&gt;Bind()&lt;/code&gt; 和 &lt;code&gt;Unbind()&lt;/code&gt; 来管理现有控件的数据。以下示例展示了如何管理一个与简单的 &lt;code&gt;Label&lt;/code&gt; 控件绑定的 &lt;code&gt;String&lt;/code&gt; 数据项。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;package&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/data/binding&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#e6db74"&gt;&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;func&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;a&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;app&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;New&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;a&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewWindow&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;binding&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewString&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#66d9ef"&gt;go&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;func&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;dots&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;.....&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#f92672"&gt;:=&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;5&lt;/span&gt;; &lt;span style="color:#a6e22e"&gt;i&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;; &lt;span style="color:#a6e22e"&gt;i&lt;/span&gt;&lt;span style="color:#f92672"&gt;--&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Set&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;倒计时&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;+&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;dots&lt;/span&gt;[:&lt;span style="color:#a6e22e"&gt;i&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;			&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Sleep&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;time&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Second&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;		&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;Set&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#34;发射！&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	}()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;SetContent&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;widget&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;NewLabelWithData&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;str&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;	&lt;span style="color:#a6e22e"&gt;w&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;ShowAndRun&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以在本站的&lt;a href="https://www.poloxue.com/gofyne/docs/07-binding/"&gt;数据绑定&lt;/a&gt;部分了解更多信息。&lt;/p&gt;</description></item><item><title>11. 应用元数据 Metadata</title><link>https://www.poloxue.com/gofyne/docs/01-started/11-metadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/11-metadata/</guid><description>&lt;h1 id="应用元数据-metadata"&gt;应用元数据 Metadata&lt;a class="anchor" href="#%e5%ba%94%e7%94%a8%e5%85%83%e6%95%b0%e6%8d%ae-metadata"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;自&lt;code&gt;fyne&lt;/code&gt;命令v2.1.0版本发布以来，我们支持一个元数据文件，允许你在仓库中存储有关你的应用的信息。这个文件是可选的，但可以帮助避免在每个包和发布命令中记住特定的构建参数。&lt;/p&gt;
&lt;p&gt;文件应该命名为&lt;code&gt;FyneApp.toml&lt;/code&gt;，位于你运行&lt;code&gt;fyne&lt;/code&gt;命令的目录中（通常是&lt;code&gt;main&lt;/code&gt;包）。文件的内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-toml" data-lang="toml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;Website&lt;/span&gt; = &lt;span style="color:#e6db74"&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;[&lt;span style="color:#a6e22e"&gt;Details&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;Icon&lt;/span&gt; = &lt;span style="color:#e6db74"&gt;&amp;#34;Icon.png&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;Name&lt;/span&gt; = &lt;span style="color:#e6db74"&gt;&amp;#34;My App&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;ID&lt;/span&gt; = &lt;span style="color:#e6db74"&gt;&amp;#34;com.example.app&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;Version&lt;/span&gt; = &lt;span style="color:#e6db74"&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;Build&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文件的顶部部分是元数据，如果你将你的应用上传到https://apps.fyne.io列表页面时会使用，因此它是可选的。[Details]部分包含了其他应用商店和操作系统在发布过程中使用的有关你的应用的数据。如果找到了这个文件，fyne工具将会使用它，很多强制性的命令参数如果元数据存在则不是必需的。你仍然可以使用命令行参数覆盖这些值。&lt;/p&gt;</description></item><item><title>11. 编译选项</title><link>https://www.poloxue.com/gofyne/docs/02-explore/11-compiling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/02-explore/11-compiling/</guid><description>&lt;h1 id="编译选项"&gt;编译选项&lt;a class="anchor" href="#%e7%bc%96%e8%af%91%e9%80%89%e9%a1%b9"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne 通常会通过选择驱动程序和配置来适当地为目标平台配置您的应用程序。以下构建标签得到支持，可帮助您的开发。例如，如果您希望在桌面计算机上模拟移动应用程序，您可以使用以下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;go run -tags mobile main.go&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;标签&lt;/th&gt;
 &lt;th&gt;描述&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;显示调试信息，包括视觉布局，以帮助理解您的应用。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;gles&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;强制使用嵌入式 OpenGL (GLES) 而不是完整的 OpenGL。这通常由目标设备控制，通常不需要。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;hints&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;显示开发者提示以进行改进或优化。使用 &lt;code&gt;hints&lt;/code&gt; 运行时，当您的应用程序不遵循材料设计或其他建议时，将记录下来。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;mobile&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;此标签在模拟的移动窗口中运行应用程序。当您想要在不编译和安装到设备的情况下预览您的应用在移动平台上的外观时非常有用。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;no_animations&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;禁用标准控件和容器中的非必要动画。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;no_emoji&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;不包含嵌入的 emoji 字体。这将在您的应用中禁用 emoji，但会使二进制文件更小。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;no_native_menus&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;此标志专门用于 macOS，表示应用程序不应使用 macOS 原生菜单。相反，菜单将在应用程序窗口内显示。在 macOS 上测试应用程序以模拟 Windows 或 Linux 上的行为时最有用。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;</description></item><item><title>12. 发布到应用商店</title><link>https://www.poloxue.com/gofyne/docs/01-started/12-distribution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/12-distribution/</guid><description>&lt;h1 id="分发到应用商店"&gt;分发到应用商店&lt;a class="anchor" href="#%e5%88%86%e5%8f%91%e5%88%b0%e5%ba%94%e7%94%a8%e5%95%86%e5%ba%97"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;按照&lt;a href="https://www.poloxue.com/gofyne/docs/01-started/08-packaging/"&gt;打包&lt;/a&gt;页面所述打包图形应用程序会提供一个可以直接分享或分发的文件或捆绑包。然而，签名并上传到应用商店和市场是一个需要特定平台配置的额外步骤，我们将在这个页面中介绍。&lt;/p&gt;
&lt;p&gt;在这些步骤中，我们将使用fyne命令行工具的一部分新工具。&lt;code&gt;fyne release&lt;/code&gt;步骤处理为每个商店的签名和准备，但参数因平台而异，我们将在下面看到。&lt;/p&gt;
&lt;h3 id="macos-appstore自fyne-142起"&gt;macOS AppStore（自fyne 1.4.2起）&lt;a class="anchor" href="#macos-appstore%e8%87%aafyne-142%e8%b5%b7"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;先决条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行macOS和Xcode的Apple mac&lt;/li&gt;
&lt;li&gt;Apple开发者账户&lt;/li&gt;
&lt;li&gt;Mac AppStore 应用证书&lt;/li&gt;
&lt;li&gt;Mac AppStore 安装程序证书&lt;/li&gt;
&lt;li&gt;从 AppStore 下载的 Apple Transporter 应用&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在&lt;a href="https://appstoreconnect.apple.com"&gt;AppStore Connect&lt;/a&gt;上为要上传的构建准备好你的应用/版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为发布捆绑完成的应用：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ fyne release -appID com.example.myapp -appVersion 1.0 -appBuild &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt; -category games&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;将&lt;code&gt;.pkg&lt;/code&gt;拖到Transporter上并点击“交付”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;返回到AppStore Connect网站，选择你的构建版本进行发布，并提交审核。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="谷歌play商店android"&gt;谷歌Play商店（Android）&lt;a class="anchor" href="#%e8%b0%b7%e6%ad%8cplay%e5%95%86%e5%ba%97android"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;先决条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google Play控制台账户&lt;/li&gt;
&lt;li&gt;分发密钥库（创建指南在
&lt;a href="https://developer.android.com/studio/publish/app-signing"&gt;android文档&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在&lt;a href="https://play.google.com/apps/publish"&gt;Google Play控制台&lt;/a&gt;上为要上传的构建准备好你的应用/版本。关闭“Play应用签名”选项，因为我们自己管理它。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为发布捆绑完成的应用：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ fyne release -os android -appID com.example.myapp -appVersion 1.0 -appBuild &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;将&lt;code&gt;.apk&lt;/code&gt;文件拖到Play控制台中应用版本页面的构建投放区。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始新版本的推出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="ios-appstore自fyne-141起"&gt;iOS AppStore（自fyne 1.4.1起）&lt;a class="anchor" href="#ios-appstore%e8%87%aafyne-141%e8%b5%b7"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;先决条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行macOS和Xcode的Apple mac&lt;/li&gt;
&lt;li&gt;Apple开发者账户&lt;/li&gt;
&lt;li&gt;iOS AppStore 分发证书&lt;/li&gt;
&lt;li&gt;从 AppStore 下载的Apple Transporter应用&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在&lt;a href="https://appstoreconnect.apple.com"&gt;AppStore Connect&lt;/a&gt;上为要上传的构建准备好你的应用/版本。&lt;/p&gt;</description></item><item><title>13. 跨平台编译</title><link>https://www.poloxue.com/gofyne/docs/01-started/13-cross-compile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/docs/01-started/13-cross-compile/</guid><description>&lt;h2 id="跨平台编译"&gt;跨平台编译&lt;a class="anchor" href="#%e8%b7%a8%e5%b9%b3%e5%8f%b0%e7%bc%96%e8%af%91"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;使用Go进行跨平台编译被设计得非常简单 - 我们只需设置目标操作系统的环境变量&lt;code&gt;GOOS&lt;/code&gt;（如果目标是不同的架构，还需要设置&lt;code&gt;GOARCH&lt;/code&gt;）。不幸的是，当使用原生图形调用时，Fyne中的CGo使用使这变得有些复杂。&lt;/p&gt;
&lt;h3 id="从开发计算机编译"&gt;从开发计算机编译&lt;a class="anchor" href="#%e4%bb%8e%e5%bc%80%e5%8f%91%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bc%96%e8%af%91"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;要跨编译Fyne应用程序，你还必须设置&lt;code&gt;CGO_ENABLED=1&lt;/code&gt;，这告诉go启用C编译器（当目标平台与当前系统不同时，这通常是关闭的）。不幸的是，这意味着你必须为你将要编译的目标平台安装一个C编译器。安装适当的编译器后，你还需要设置&lt;code&gt;CC&lt;/code&gt;环境变量来告诉Go使用哪个编译器。&lt;/p&gt;
&lt;p&gt;安装所需工具有许多方法 - 并且可以使用不同的工具。Fyne开发者推荐的配置是：&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;GOOS（目标）&lt;/th&gt;
 &lt;th&gt;CC&lt;/th&gt;
 &lt;th&gt;提供者&lt;/th&gt;
 &lt;th&gt;下载&lt;/th&gt;
 &lt;th&gt;备注&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;darwin&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;o32-clang&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;osxcross&lt;/td&gt;
 &lt;td&gt;&lt;a href="https://github.com/tpoechtrager/osxcross"&gt;来自github.com&lt;/a&gt;&lt;/td&gt;
 &lt;td&gt;你还需要安装macOS SDK（下载链接处有指引）&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;windows&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;x86_64-w64-mingw64-gcc&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;mingw64&lt;/td&gt;
 &lt;td&gt;包管理器&lt;/td&gt;
 &lt;td&gt;对于macOS使用&lt;a href="https://brew.sh"&gt;homebrew&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;linux&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;gcc&lt;/code&gt; 或 &lt;code&gt;x86_64-linux-musl-gcc&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;gcc 或 musl-cross&lt;/td&gt;
 &lt;td&gt;&lt;a href="https://www.cygwin.com/"&gt;cygwin&lt;/a&gt; 或 包管理器&lt;/td&gt;
 &lt;td&gt;musl-cross可从&lt;a href="https://brew.sh"&gt;homebrew&lt;/a&gt;获取，提供linux gcc。你还需要为编译安装X11和mesa头文件。&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;设置上述环境变量后，你应该能够以通常的方式进行编译。如果进一步出现错误，很可能是由于缺少包。一些目标平台需要安装额外的库或头文件才能成功编译。&lt;/p&gt;
&lt;h3 id="使用虚拟环境"&gt;使用虚拟环境&lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;由于Linux系统能够轻松地交叉编译到macOS和Windows，因此当你不是从Linux开发时，使用虚拟化环境可能更简单。Docker镜像是复杂构建配置的有用工具，这也适用于Fyne。可以使用不同的工具。Fyne开发者推荐的工具是&lt;a href="https://github.com/fyne-io/fyne-cross"&gt;fyne-cross&lt;/a&gt;。它受到&lt;a href="https://github.com/karalabe/xgo"&gt;xgo&lt;/a&gt;的启发，并使用基于&lt;a href="https://github.com/docker/golang-cross"&gt;golang-cross&lt;/a&gt;镜像构建的&lt;a href="https://hub.docker.com/r/fyneio/fyne-cross"&gt;docker镜像&lt;/a&gt;，该镜像包括了Windows的MinGW编译器和macOS SDK，以及Fyne的需求。&lt;/p&gt;
&lt;p&gt;fyne-cross允许为以下目标构建二进制文件并创建分发包：&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;GOOS&lt;/th&gt;
 &lt;th&gt;GOARCH&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;darwin&lt;/td&gt;
 &lt;td&gt;amd64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;darwin&lt;/td&gt;
 &lt;td&gt;386&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;linux&lt;/td&gt;
 &lt;td&gt;amd64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;linux&lt;/td&gt;
 &lt;td&gt;386&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;linux&lt;/td&gt;
 &lt;td&gt;arm64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;linux&lt;/td&gt;
 &lt;td&gt;arm&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;windows&lt;/td&gt;
 &lt;td&gt;amd64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;windows&lt;/td&gt;
 &lt;td&gt;386&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;android&lt;/td&gt;
 &lt;td&gt;amd64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;android&lt;/td&gt;
 &lt;td&gt;386&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;android&lt;/td&gt;
 &lt;td&gt;arm64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;android&lt;/td&gt;
 &lt;td&gt;arm&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;ios&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;freebsd&lt;/td&gt;
 &lt;td&gt;amd64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;freebsd&lt;/td&gt;
 &lt;td&gt;arm64&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote class='book-hint '&gt;
&lt;p&gt;注意：iOS编译仅支持在darwin主机上。&lt;/p&gt;</description></item><item><title/><link>https://www.poloxue.com/gofyne/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/gofyne/readme/</guid><description>&lt;h1 id="fyne-中文文档"&gt;Fyne 中文文档&lt;a class="anchor" href="#fyne-%e4%b8%ad%e6%96%87%e6%96%87%e6%a1%a3"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Fyne 是一款 GO 实现 GUI 框架，本文档是基于 Fyne v2.4 的官方文档中文翻译版。英文原版，请异步 &lt;a href="https://docs.fyne.io"&gt;docs.fyne.io&lt;/a&gt;。&lt;/p&gt;</description></item></channel></rss>