<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on POLOXUE's BLOG</title><link>https://www.poloxue.com/tags/vim/</link><description>Recent content in Vim on POLOXUE's BLOG</description><generator>Hugo</generator><language>zh-cn</language><copyright>Polo Xue All rights reserved</copyright><lastBuildDate>Wed, 27 Sep 2023 15:22:23 +0800</lastBuildDate><atom:link href="https://www.poloxue.com/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>基于 LunarVim 搭建不同编程语言 IDE</title><link>https://www.poloxue.com/posts/2023-09-27-start-an-ide-using-lunarvim/</link><pubDate>Wed, 27 Sep 2023 15:22:23 +0800</pubDate><guid>https://www.poloxue.com/posts/2023-09-27-start-an-ide-using-lunarvim/</guid><description>&lt;p&gt;本文介绍，如何基于 LunarVim 搭建不同编程语言的 Neovim IDE 开发环境。&lt;/p&gt;
&lt;h2 id="前言"&gt;前言&lt;/h2&gt;
&lt;p&gt;本文将用几行命令快速安装 Neovim IDE，完成不同编程语言的环境搭建。尽量不涉及到自定义配置，将完全基于 LunarVim 作者维护的配置实现。&lt;/p&gt;
&lt;p&gt;两个 Github 核心仓库，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lunarvim/lunarvim"&gt;lunarvim/lunarvim&lt;/a&gt;，是 LunarVim 的核心仓库，集成配置 IDE 所需的核心能力；&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lunarvim/starter.lvim"&gt;lunarvim/starter.lvim&lt;/a&gt;，这个仓库是 Lunarvim 针对不同编程语言的配置实现；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;starter.lvim 以分支形式保不同语言的配置，具体自行查看仓库。&lt;/p&gt;
&lt;p&gt;为了测试方便，介绍 LunarVim 提供的一个能力，通过 Lunarvim 通过 &lt;code&gt;LUNARVIM_CONFIG_DIR&lt;/code&gt; 变量决定配置文件目录。&lt;/p&gt;
&lt;p&gt;
 &lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@main/2023-09-27-start-an-ide-using-lunarvim-03.png" alt=""&gt;

&lt;/p&gt;
&lt;p&gt;接下来的测试，我会将不同语言的配置，放到不同的目录中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果希望一个配置支持大部分语言，则要将这些配置合并，进行配置自定义，对 Lunarvim 的 &lt;code&gt;configlua&lt;/code&gt; 代码进行大的改动，不易维护。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="安装"&gt;安装&lt;/h2&gt;
&lt;p&gt;LunarVim 提供了安装脚本，使用如下命令安装即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;LV_BRANCH&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;release-1.3/neovim-0.9&amp;#39;&lt;/span&gt; bash &amp;lt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装过程中要下载一些依赖，如 &lt;code&gt;pynvim&lt;/code&gt;，&lt;code&gt;cargo&lt;/code&gt; 之类的，如果已经安装可选择 &lt;code&gt;no&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：部分语言环境和命令要提前安装。如 &lt;code&gt;python&lt;/code&gt;，&lt;code&gt;make&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; 等&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;如果要 dev icon 支持，安装 Nerd 字体，macOS 安装命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew tab homebrew/cask-fonts
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install --cask font-hack-nerd-font
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装成功，将终端字体更新为 &lt;code&gt;Hack Nerd Font&lt;/code&gt; 相关字体。&lt;/p&gt;</description></item><item><title>Neovim 配置隔离-实现多语言环境支持</title><link>https://www.poloxue.com/posts/2023-09-25-running-multiple-nvims-in-your-computer/</link><pubDate>Mon, 25 Sep 2023 15:06:02 +0800</pubDate><guid>https://www.poloxue.com/posts/2023-09-25-running-multiple-nvims-in-your-computer/</guid><description>&lt;p&gt;本文将介绍如何实现 Neovim 的配置隔离，实现不同编程语言使用不同的编辑器配置。&lt;/p&gt;
&lt;h2 id="背景说明"&gt;背景说明&lt;/h2&gt;
&lt;p&gt;近段时间，一直在学习如何高效使用 Neovim。不断配置的过程中想到，Neovim 是否支持配置隔离，不同用途不同配置。最直接的体现，我希望把 Python 和 Golang 的编辑开发环境的配置隔离。&lt;/p&gt;
&lt;p&gt;类似如下效果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;nvim-golang main.go
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;nvim-python main.py
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;nvim-cpp main.cpp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;提到这，不由地想到了 Jetbrain 全家桶，针对不同编程语言开发了各自的 IDE，如 goland，pycharm，webstorm、clion 等。猜测原因，或许是为了多赚钱，另一方面，不同语言一定有个性化配置，隔离能减少耦合。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是因为想搭建某种语言的编程环境，推荐阅读：&lt;a href="https://www.poloxue.com/posts/2023-09-27-start-an-ide-using-lunarvim/"&gt;基于 LunarVim 搭建不同编程语言 IDE&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;如何实现呢？进入正题吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;几年前，写过一篇关于 &amp;ldquo;Golang 多环境管理 GVM&amp;rdquo; 的文章。本质上，要实现这种多环境隔离，一般都是通过环境变量实现。查了些资料，Neovim 其实也不例外。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="方案-1基于-xdg-配置"&gt;方案 1：基于 XDG 配置&lt;/h2&gt;
&lt;p&gt;Neovim 的目录遵循 XDG 目录规范。具体是什么意思呢？&lt;/p&gt;
&lt;p&gt;XDG 本质是一套规范，定义了一组环境变量，用于说明应用程序储存信息目录的一套标准。熟悉 Linux 的朋友应该了解，我们以往一直习惯于把应用的配置以 .xxx 的形式放在用户的 &lt;code&gt;$HOME&lt;/code&gt; 目录，导致 &lt;code&gt;$HOME&lt;/code&gt; 下的点隐藏文件泛滥，而这套规范的出现，使我们轻易实现目标。&lt;/p&gt;</description></item><item><title>Vim 小技巧：高效利用 vim 的行号</title><link>https://www.poloxue.com/posts/2023-09-25-vim-tips-how-to-use-number/</link><pubDate>Mon, 25 Sep 2023 15:06:02 +0800</pubDate><guid>https://www.poloxue.com/posts/2023-09-25-vim-tips-how-to-use-number/</guid><description>&lt;p&gt;我们知道，Vim 支持配置是否显示行号，对这个行号认知，我们一般指的是绝对行号。其实 Vim 支持配置两种行号模式：&lt;code&gt;number&lt;/code&gt;（绝对行号） 和 &lt;code&gt;relativenumber&lt;/code&gt;（相对行号）。&lt;/p&gt;
&lt;p&gt;今天，基于 vim 行号介绍一个提升其使用效率的小技巧，混合使用 number 和 relativenumber。&lt;/p&gt;
&lt;h2 id="绝对行号-number"&gt;绝对行号 number&lt;/h2&gt;
&lt;p&gt;绝对行号 &lt;code&gt;number&lt;/code&gt;，我们基本都熟悉怎么使用。效果图如下所示：&lt;/p&gt;
&lt;p&gt;
 &lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@main/2023-09-25-vim-tips-how-to-use-number-02.gif" alt=""&gt;

&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;set number&lt;/code&gt; 显示行号。默认开启的话，配置到 Vim 配置文件中即可。&lt;/p&gt;
&lt;p&gt;其他命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;3
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;4
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-vim" data-lang="vim"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&amp;#34; 显示行号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;set&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;nu&lt;/span&gt; &lt;span style="color:#75715e"&gt;&amp;#34; set number 的缩写形式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&amp;#34; 隐藏行号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;set&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;nonumber&lt;/span&gt; &lt;span style="color:#75715e"&gt;&amp;#34; 无缩写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;set&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;nonu&lt;/span&gt; &lt;span style="color:#75715e"&gt;&amp;#34; 缩写形式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;基于行号 &lt;code&gt;number&lt;/code&gt;，实现的一些快捷操作，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于行的快速跳转 &lt;code&gt;10G&lt;/code&gt; 或 &lt;code&gt;:10&lt;/code&gt;，快速跳转到第 10 行；&lt;/li&gt;
&lt;li&gt;粘贴指定范围文本 &lt;code&gt;:10,20y&lt;/code&gt; 或删除 &lt;code&gt;:10,20d&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;替换指定范围文本 &lt;code&gt;:10,20s/hello/world/g&lt;/code&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注：&lt;code&gt;set numberwidth=4&lt;/code&gt; 可配置行号所在的列的默认宽度为 4，如果行号数值达到 5 位数，将会自动扩展到 5 位。另外说明，不同于 Vim 的默认值是 2，Neovim 的默认宽度也是 4。&lt;/p&gt;</description></item></channel></rss>