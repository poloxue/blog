<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>文件目录 on 我的终端环境</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/</link><description>Recent content in 文件目录 on 我的终端环境</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://www.poloxue.com/mytermenv/docs/commands/filesystem/index.xml" rel="self" type="application/rss+xml"/><item><title>exa</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/exa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/filesystem/exa/</guid><description>exa # 首先是 exa，一款可用于替换系统默认 ls 的命令，在平时工作中 ls 几乎使用最多的命令，而 exa 在支持 ls 的基本能力基础上，提供了更丰富的特性。
快速安装 # brew install exa # 其他系统请查看 GithHub README.md 默认配色 # 首先，exa 默认提供了配色效果，无需 ls 要追加 --color 参数，省去了 alias 别名的设置。
显示图标 # 其次，exa 支持显示文件图片，通过指明 --icons 实现，显示文件类型图标；
详情与 GIT # 更复杂的命令，支持 ls -l 显示文件列表详情，添加头部说明 header，如果是 git 仓库，可显示文件的 Git 信息。
目录树 Tree # 如果想显示文件数，也不需要单独安装 tree 命令，如下 exa --tree --icons，显示文件树；
别名 # 如果你钟爱 exa 的这些能力，可通过别名将默认 ls 和 tree 命令替换为 exa。
如下是一些常见的别名设置：</description></item><item><title>zoxide</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/zoxide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/filesystem/zoxide/</guid><description>zoxide # 在正式介绍 zoxide 前，尝试提前问自己一个问题，Linux 默认命令 cd 好不好用？我的答案是，相当难用，无论多么丝滑的操作，一旦遇到 cd，只能说一句 f**k。
你是不是经常这样使用 cd 呢？
cd ../ cd ../ cd ../ cd ../../../ cd x/ cd y/ cd z/ 如果不想被 cd 折磨的话，我强烈推荐这个工具： zoxide。
zoxide 是一款受到 z 和 autojump 启发而来的命令，它会记录访问过的目录，通过搜索找到最匹配你目标的目标。从而实现以 最最最最 少按键就能实现目录跳转。
一般情况下，我们关注的目录就那几个，90% 的情况用它的快速跳转能力即可，而一些特殊情况，cd 绝对路径即可，亦或者是使用它提供的另一种方式，交互式搜索。
前面我写过一篇文章 介绍了 oh-my-zsh 提供的 z 插件，zoxide 与 z 相比更易于使用。这有一份对比报告： zoxide vs zsh-z。
具体介绍它的安装使用吧。
安装 # brew install zoxide # 其他系统请查看 GithHub README.md 配置 # 在 zsh 中使用 zoxide 要简单配置下，一行命令将 zoxide 初始化命令追加到 ~/.</description></item><item><title>bat</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/bat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/filesystem/bat/</guid><description>bat # 说完了 ls 列举目录，cd 进入目录，我们继续介绍一个命令， bat 查看文件内容。
这个 bat 和 Baidu/Alibaba/Tencent 没有联系，它是一款支持语法高亮、GIT 集成的用于替换类 Unix 系统下快速查看文件内容的命令，功能与 cat 相似的命令。
我们直接介绍它的安装与使用吧。
安装 # brew install bat # 其他系统请查看 GithHub README.md 使用 # 对于 bat 命令，我先介绍它的使用，然后再谈配置，因为配置并非它的必选项而是优化项。
bat 相比于 cat 的第一个优势，就是它支持语法高亮效果与行号显示。如我们查看一个 Go 的源码文件，效果如下：
而且，bat 还集成 Git。如下我们修改了 logger.go 文件，通过 bat 即可查看它的修改点；
默认情况下，bat 采用分页输出，这对于读取大文件非常有帮助，不用担心失误导致产生一大片控制台输出。但如果你希望 bat 和 cat 一样，一次性无分页输出文本，可通过 --pager=never 或 --no-pager 选项实现。
bat --pager=never logger.go bat --no-pager logger.go 如果你习惯使用 cat 的模式，希望默认不启用分页能力，可直接在配置文件配置默认行为，在其中增加 --pager=never。
接下来说说如何通过 bat 的配置改变它的默认行为吧。</description></item></channel></rss>