<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>文件目录 on 我的终端环境</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/</link><description>Recent content in 文件目录 on 我的终端环境</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://www.poloxue.com/mytermenv/docs/commands/filesystem/index.xml" rel="self" type="application/rss+xml"/><item><title>exa</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/exa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/filesystem/exa/</guid><description>&lt;h1 id="exa"&gt;exa&lt;a class="anchor" href="#exa"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;首先是 exa，一款可用于替换系统默认 ls 的命令，在平时工作中 ls 几乎使用最多的命令，而 exa 在支持 ls 的基本能力基础上，提供了更丰富的特性。&lt;/p&gt;
&lt;h2 id="快速安装"&gt;快速安装&lt;a class="anchor" href="#%e5%bf%ab%e9%80%9f%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install exa &lt;span style="color:#75715e"&gt;# 其他系统请查看 GithHub README.md&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="默认配色"&gt;默认配色&lt;a class="anchor" href="#%e9%bb%98%e8%ae%a4%e9%85%8d%e8%89%b2"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;首先，exa 默认提供了配色效果，无需 ls 要追加 &lt;code&gt;--color&lt;/code&gt; 参数，省去了 alias 别名的设置。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-28-high-productivity-shell-commands-part1-01.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="显示图标"&gt;显示图标&lt;a class="anchor" href="#%e6%98%be%e7%a4%ba%e5%9b%be%e6%a0%87"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;其次，exa 支持显示文件图片，通过指明 &lt;code&gt;--icons&lt;/code&gt; 实现，显示文件类型图标；&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-28-high-productivity-shell-commands-part1-02.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="详情与-git"&gt;详情与 GIT&lt;a class="anchor" href="#%e8%af%a6%e6%83%85%e4%b8%8e-git"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;更复杂的命令，支持 ls -l 显示文件列表详情，添加头部说明 header，如果是 git 仓库，可显示文件的 Git 信息。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-28-high-productivity-shell-commands-part1-03.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="目录树-tree"&gt;目录树 Tree&lt;a class="anchor" href="#%e7%9b%ae%e5%bd%95%e6%a0%91-tree"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;如果想显示文件数，也不需要单独安装 tree 命令，如下 exa --tree --icons，显示文件树；&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-28-high-productivity-shell-commands-part1-04.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="别名"&gt;别名&lt;a class="anchor" href="#%e5%88%ab%e5%90%8d"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;如果你钟爱 exa 的这些能力，可通过别名将默认 ls 和 tree 命令替换为 exa。&lt;/p&gt;
&lt;p&gt;如下是一些常见的别名设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 默认显示 icons： &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;alias ls&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;exa --icons&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 显示文件目录详情&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;alias ll&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;exa --icons --long --header&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 显示全部文件目录，包括隐藏文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;alias la&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;exa --icons --long --header --all&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 显示详情的同时，附带 git 状态信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;alias lg&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;exa --icons --long --header --all --git&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 替换 tree 命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;alias tree&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;exa --tree --icons&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如此一来，就将 exa 设置为系统默认 ls。&lt;/p&gt;</description></item><item><title>zoxide</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/zoxide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/filesystem/zoxide/</guid><description>&lt;h1 id="zoxide"&gt;zoxide&lt;a class="anchor" href="#zoxide"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;在正式介绍 &lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;zoxide&lt;/a&gt; 前，尝试提前问自己一个问题，Linux 默认命令 cd 好不好用？我的答案是，相当难用，无论多么丝滑的操作，一旦遇到 cd，只能说一句 f**k。&lt;/p&gt;
&lt;p&gt;你是不是经常这样使用 cd 呢？&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;cd ../
cd ../
cd ../
cd ../../../
cd x/
cd y/
cd z/&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果不想被 cd 折磨的话，我强烈推荐这个工具：&lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;zoxide&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;zoxide&lt;/a&gt; 是一款受到 z 和 autojump 启发而来的命令，它会记录访问过的目录，通过搜索找到最匹配你目标的目标。从而实现以 &lt;strong&gt;最最最最&lt;/strong&gt; 少按键就能实现目录跳转。&lt;/p&gt;
&lt;p&gt;一般情况下，我们关注的目录就那几个，90% 的情况用它的快速跳转能力即可，而一些特殊情况，cd 绝对路径即可，亦或者是使用它提供的另一种方式，交互式搜索。&lt;/p&gt;
&lt;p&gt;前面我写过一篇文章 介绍了 oh-my-zsh 提供的 z 插件，zoxide 与 z 相比更易于使用。这有一份对比报告：&lt;a href="https://www.libhunt.com/compare-zsh-z-vs-zoxide"&gt;zoxide vs zsh-z&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;具体介绍它的安装使用吧。&lt;/p&gt;
&lt;h3 id="安装"&gt;安装&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install zoxide &lt;span style="color:#75715e"&gt;# 其他系统请查看 GithHub README.md&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="配置"&gt;配置&lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在 zsh 中使用 zoxide 要简单配置下，一行命令将 zoxide 初始化命令追加到 &lt;code&gt;~/.zshrc&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo &lt;span style="color:#e6db74"&gt;&amp;#39;eval &amp;#34;$(zoxide init zsh --cmd z)&amp;#34;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.zshrc&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生效后，即可通过 z 命令使用 zoxide 的能力。&lt;/p&gt;</description></item><item><title>bat</title><link>https://www.poloxue.com/mytermenv/docs/commands/filesystem/bat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/filesystem/bat/</guid><description>&lt;h1 id="bat"&gt;bat&lt;a class="anchor" href="#bat"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;说完了 ls 列举目录，cd 进入目录，我们继续介绍一个命令，&lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt; 查看文件内容。&lt;/p&gt;
&lt;p&gt;这个 bat 和 Baidu/Alibaba/Tencent 没有联系，它是一款支持语法高亮、GIT 集成的用于替换类 Unix 系统下快速查看文件内容的命令，功能与 cat 相似的命令。&lt;/p&gt;
&lt;p&gt;我们直接介绍它的安装与使用吧。&lt;/p&gt;
&lt;h3 id="安装"&gt;安装&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install bat &lt;span style="color:#75715e"&gt;# 其他系统请查看 GithHub README.md&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="使用"&gt;使用&lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;对于 bat 命令，我先介绍它的使用，然后再谈配置，因为配置并非它的必选项而是优化项。&lt;/p&gt;
&lt;p&gt;bat 相比于 cat 的第一个优势，就是它支持语法高亮效果与行号显示。如我们查看一个 Go 的源码文件，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-28-high-productivity-shell-commands-part1-08.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;而且，bat 还集成 Git。如下我们修改了 logger.go 文件，通过 bat 即可查看它的修改点；&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-28-high-productivity-shell-commands-part1-09.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，bat 采用分页输出，这对于读取大文件非常有帮助，不用担心失误导致产生一大片控制台输出。但如果你希望 bat 和 cat 一样，一次性无分页输出文本，可通过 &lt;code&gt;--pager=never&lt;/code&gt; 或 &lt;code&gt;--no-pager&lt;/code&gt; 选项实现。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bat --pager&lt;span style="color:#f92672"&gt;=&lt;/span&gt;never logger.go
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bat --no-pager logger.go&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你习惯使用 cat 的模式，希望默认不启用分页能力，可直接在配置文件配置默认行为，在其中增加 &lt;code&gt;--pager=never&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;接下来说说如何通过 bat 的配置改变它的默认行为吧。&lt;/p&gt;
&lt;h3 id="配置"&gt;配置&lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae"&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;bat 的配置文件路径是通过环境变量指定的。我们在 &lt;code&gt;.zshrc&lt;/code&gt; 中设置 bat 配置文件位置环境变量。&lt;/p&gt;</description></item></channel></rss>