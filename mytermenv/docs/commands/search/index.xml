<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>搜索查找 on 我的终端环境</title><link>https://www.poloxue.com/mytermenv/docs/commands/search/</link><description>Recent content in 搜索查找 on 我的终端环境</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://www.poloxue.com/mytermenv/docs/commands/search/index.xml" rel="self" type="application/rss+xml"/><item><title>fd - 更易用的文件查找命令</title><link>https://www.poloxue.com/mytermenv/docs/commands/search/fd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/search/fd/</guid><description>&lt;h1 id="fd"&gt;&lt;a href="https://github.com/sharkdp/fd"&gt;fd&lt;/a&gt;&lt;a class="anchor" href="#fd"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/sharkdp/fd"&gt;fd&lt;/a&gt; 是一款文件查找命令，可替换系统默认 find，它的体验更友好，且查询效率极高。我们在使用传统的 find 时，要经常查手册看帮助文档，但使用 fd，它的默认行为就能满足我们大部分的需求。&lt;/p&gt;
&lt;p&gt;如何使用呢？&lt;/p&gt;
&lt;h2 id="安装"&gt;安装&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install fd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="递归"&gt;递归&lt;a class="anchor" href="#%e9%80%92%e5%bd%92"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;文件系统下搜索文件名，最常见的场景是递归搜索文件名包含 pattern 的文件，不知道有你是否能立刻想起来 find 如何写呢？&lt;/p&gt;
&lt;p&gt;示例：遍历查找。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ fd pattern&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-01.gif" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="正则"&gt;正则&lt;a class="anchor" href="#%e6%ad%a3%e5%88%99"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;如果要正则查询，pattern 默认即支持正则表达式。&lt;/p&gt;
&lt;p&gt;查找文件名包含日期的文件：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-02.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;或者查找所有的 go 代码文件。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-03.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;这个表达式更加正确的表述是 fd &lt;code&gt;.*\.go$&lt;/code&gt;，查出所有以 &lt;code&gt;.go&lt;/code&gt; 结尾的文件。&lt;/p&gt;
&lt;h2 id="通配符"&gt;通配符&lt;a class="anchor" href="#%e9%80%9a%e9%85%8d%e7%ac%a6"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;fd 同样是支持统配符的，通过 &lt;code&gt;-g&lt;/code&gt; 选项指定通配符。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-04.gif" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="文件类型"&gt;文件类型&lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e7%b1%bb%e5%9e%8b"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;前面的查找 go 文件，其实也是查找类型是 Go 源码。但正则和通配符，都比较繁琐，可直接通过 &lt;code&gt;fd -e go pattern&lt;/code&gt; 的模式直接寻找指定扩展的文件。&lt;/p&gt;
&lt;p&gt;示例：查找 python 源码文件。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-05.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;如果无需 patern，则表明查找所有的 &lt;code&gt;.py&lt;/code&gt; 的文件。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-07.gif" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="隐藏文件和-gitinogre"&gt;隐藏文件和 &lt;code&gt;.gitinogre&lt;/code&gt;&lt;a class="anchor" href="#%e9%9a%90%e8%97%8f%e6%96%87%e4%bb%b6%e5%92%8c-gitinogre"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;fd 搜索效率高的一个原因是它默认不查找隐藏文件和 &lt;code&gt;gitignore&lt;/code&gt; 文件。&lt;/p&gt;</description></item><item><title>ripgrep - 更高效的文件搜索</title><link>https://www.poloxue.com/mytermenv/docs/commands/search/ripgrep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/search/ripgrep/</guid><description>&lt;h1 id="ripgrep"&gt;ripgrep&lt;a class="anchor" href="#ripgrep"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt; 是一款文本搜索命令，功能与 grep 类似。和 fd 之于 find 一样，ripgrep 在体验和性能上同样完胜 grep。&lt;/p&gt;
&lt;h2 id="安装"&gt;安装&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install ripgrep&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="递归"&gt;递归&lt;a class="anchor" href="#%e9%80%92%e5%bd%92"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ripgrep 的默认行为也是递归搜索，命令为 rg pattern，且默认高亮显示，与 &lt;code&gt;grep --color main . -nR&lt;/code&gt; 对比，明显更加简洁易用，体验更好。&lt;/p&gt;
&lt;p&gt;示例效果：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-09.gif" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="指定目录"&gt;指定目录&lt;a class="anchor" href="#%e6%8c%87%e5%ae%9a%e7%9b%ae%e5%bd%95"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ripgrep 最后的参数即可指定搜索的目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rg main ~/Code/golang-examples/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-10.gif" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="指定文件"&gt;指定文件&lt;a class="anchor" href="#%e6%8c%87%e5%ae%9a%e6%96%87%e4%bb%b6"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;搜索指定文件与指定目录类似，命令的最后一个参数指定即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rg main ~/Code/golang-examples/main.go&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-11.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="通配符"&gt;通配符&lt;a class="anchor" href="#%e9%80%9a%e9%85%8d%e7%ac%a6"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;我们使用 &lt;code&gt;-g&lt;/code&gt; 通过通配符指定搜索路径。&lt;/p&gt;
&lt;p&gt;如下是禁用目录递归：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rg main -g &lt;span style="color:#e6db74"&gt;&amp;#39;!/*/*&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;还可实现如排除指定的文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rg main -g &lt;span style="color:#e6db74"&gt;&amp;#39;!main.go&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者排除指定的目录&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rg -g &lt;span style="color:#e6db74"&gt;&amp;#39;!directory&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="正则"&gt;正则&lt;a class="anchor" href="#%e6%ad%a3%e5%88%99"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ripgrep 支持通过 &lt;code&gt;-e&lt;/code&gt; 选项启用正则表达式搜索，如搜索文件中的指定日期格式内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rg -e &lt;span style="color:#e6db74"&gt;&amp;#39;[0-9]{2}:[0-9]{2}&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="默认过滤"&gt;默认过滤&lt;a class="anchor" href="#%e9%bb%98%e8%ae%a4%e8%bf%87%e6%bb%a4"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;和 fd 一样，ripgrep 的高效率搜索能力一方面也是因为默认忽略了一些文件，如它忽略隐藏文件以及 .gitgnore .ignore .rgignore 中的文件。禁用 ignore 可通过选项 &amp;ndash;no-ignore 即可。&lt;/p&gt;</description></item><item><title>fzf - 交互式命令行查找器</title><link>https://www.poloxue.com/mytermenv/docs/commands/search/fzf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.poloxue.com/mytermenv/docs/commands/search/fzf/</guid><description>&lt;h1 id="fzf---交互式查找器"&gt;fzf - 交互式查找器&lt;a class="anchor" href="#fzf---%e4%ba%a4%e4%ba%92%e5%bc%8f%e6%9f%a5%e6%89%be%e5%99%a8"&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; 全名 fuzzy finder，一款通用的命令行模糊查找工具。它可与其他命令结合，提升其他命令的使用体验。&lt;/p&gt;
&lt;h2 id="安装"&gt;安装&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew install fzf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="目录搜索"&gt;目录搜索&lt;a class="anchor" href="#%e7%9b%ae%e5%bd%95%e6%90%9c%e7%b4%a2"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;fzf 的默认行为是在当前目录搜索。当然它的搜索和 fd 的搜索不同，它会进入交互式模式搜索文件或目录路径。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-13.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;它支持通过 CTRL+P/N 上下选择，确认搜索结果后，输入 Enter 确认后，它会将输出直接作为输出打印到标准输出。由于它输出为标准输出，我们就有了更多可能性，通过管道将它与其他命令结合。&lt;/p&gt;
&lt;h2 id="命令组合"&gt;命令组合&lt;a class="anchor" href="#%e5%91%bd%e4%bb%a4%e7%bb%84%e5%90%88"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;fzf 最大的魅力在于，我们可将其与其他命令组合，如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将其他命令的输出作为 fzf 的输入，基于它进行搜索；&lt;/li&gt;
&lt;li&gt;或将 fzf 的搜索内容作为其他命令的输入，更智能使用其他命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们具体介绍下吧。&lt;/p&gt;
&lt;p&gt;首先，我们示例将 &lt;code&gt;one&lt;/code&gt;、&lt;code&gt;two&lt;/code&gt;、&lt;code&gt;three&lt;/code&gt;、&lt;code&gt;four&lt;/code&gt; 作为输入，通过 fzf 搜索选择。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo &lt;span style="color:#e6db74"&gt;&amp;#34;one\ntwo\nthree\nfour&amp;#34;&lt;/span&gt; | fzf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-14.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;更多可能就诞生了，我们可以讲 ls 的输出作为 fzf 的输入。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ls | fzf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-15.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;将 fd 查找结果作为 fzf 的输入。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;fd --type file | fzf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/poloxue/images@2023-10/2023-10-30-high-productivity-shell-commands-part2-16.gif" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们尝试将搜索结果作为其他命令的输入。毕竟，如果 fzf 的搜索结果只是输出到终端，那就太可惜了，可将其作为其它命令的输入。&lt;/p&gt;
&lt;p&gt;如将 fzf 搜索结果作为 vim 的输入，助力 vim 快速打开文件。&lt;/p&gt;</description></item></channel></rss>